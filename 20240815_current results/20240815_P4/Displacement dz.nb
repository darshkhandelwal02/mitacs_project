(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    717408,      15316]
NotebookOptionsPosition[    697934,      14959]
NotebookOutlinePosition[    698624,      14980]
CellTagsIndexPosition[    698581,      14977]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "out"], TraditionalForm]],ExpressionUUID->
  "8253c609-e1c7-564a-bf46-9a3fc101aad4"],
 " - Magnetic field displaced in z direction"
}], "Title",
 CellChangeTimes->{{3.929042326453539*^9, 3.929042376069149*^9}, {
  3.9290939699057198`*^9, 3.9290940017173996`*^9}, {3.9323810105951176`*^9, 
  3.9323810707660923`*^9}},
 TextAlignment->Center,
 Background->GrayLevel[
  0.85],ExpressionUUID->"b354982d-38ee-2b40-bcd3-ea4206828e2d"],

Cell["\<\
This file contains the calculation of Magnetic field outside the Spheroid, \
for the case that applied magnetic field is shifted in z direction. \
\>", "Subtitle",
 CellChangeTimes->{{3.927379646283123*^9, 3.927379678231943*^9}, {
  3.927387646168364*^9, 3.927387746654766*^9}, {3.9290923245172977`*^9, 
  3.929092325657589*^9}, {3.9323810807202244`*^9, 3.932381104645611*^9}, {
  3.932381168920973*^9, 3.9323811853761673`*^9}, {3.9323813598726234`*^9, 
  3.932381398291338*^9}},
 TextAlignment->Center,ExpressionUUID->"20b75a8d-bae8-9741-a70c-3d34495bd970"],

Cell["\<\
This file is cross referenced with the Section D (d) of my notes. \
\>", "Text",
 CellChangeTimes->{{3.9323814079968624`*^9, 3.9323814184351177`*^9}, {
  3.9323814594363575`*^9, 3.932381480554619*^9}, {3.932385571151375*^9, 
  3.9323855761910114`*^9}},
 TextAlignment->Center,
 Background->GrayLevel[
  0.85],ExpressionUUID->"8eb751c6-051f-e948-bab2-d314df123d84"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.92762287458305*^9, 3.927622895073244*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"53e9ea49-ae13-4c4f-a1e4-697dda957156"],

Cell[CellGroupData[{

Cell["Defining the parameters:", "Section",
 CellChangeTimes->{{3.927384972172205*^9, 3.9273849794919996`*^9}, {
  3.9323839574846077`*^9, 
  3.93238395792342*^9}},ExpressionUUID->"06b76343-3e4a-f946-bdf2-\
1908d2fc608a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bz", " ", "=", " ", 
    RowBox[{"Symbol", "[", "\"\<bz\>\"", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Magnetic", " ", "field", " ", "Gradient"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dz", " ", "=", " ", 
    RowBox[{"Symbol", "[", "\"\<dz\>\"", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Displacement", " ", "in", " ", "z", " ", "direction"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", " ", "=", " ", 
    RowBox[{"Symbol", "[", "\"\<R\>\"", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Average", " ", "radius", " ", "of", " ", "Spheroid"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", 
    RowBox[{"R", "+", "\[Epsilon]"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"Equatorial", " ", "radius"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", 
    RowBox[{"R", "-", "\[Epsilon]"}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"Polar", " ", "radius"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.927380777127142*^9, 3.927380821198538*^9}, {
   3.927380887346012*^9, 3.927380887720722*^9}, {3.927382997795073*^9, 
   3.927383001690012*^9}, 3.927384609609673*^9, 3.927384858945389*^9, {
   3.932382086665388*^9, 3.9323821574617577`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b231057b-0565-8644-803b-bb296b87041b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining the equation of ellipsoid, considering R >> \[Epsilon]", \
"Section",
 CellChangeTimes->{{3.927384989435515*^9, 3.9273850060180473`*^9}, {
  3.92738700924606*^9, 
  3.9273870105339627`*^9}},ExpressionUUID->"12a05fdb-9765-8143-b0bd-\
9ba8c787e759"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rSpheroid", "[", "\[Theta]_", "]"}], "=", " ", 
  RowBox[{"R", "-", 
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Eqn", ".", " ", "1"}], "d"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.927383403853052*^9, 3.9273834840312576`*^9}, {
  3.927383531427843*^9, 3.927383595469185*^9}, {3.927383848234095*^9, 
  3.927383927023974*^9}, {3.92738444902336*^9, 3.927384508706484*^9}, {
  3.927384816853812*^9, 3.92738481936056*^9}, {3.927384872989865*^9, 
  3.927384890167485*^9}, {3.9312602967033234`*^9, 3.9312603628445015`*^9}, {
  3.93239693307444*^9, 3.9323969466244774`*^9}, {3.932397056491455*^9, 
  3.9323970636129704`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"baaf84e8-df3f-3d4a-9061-dad4b81efcd2"],

Cell[BoxData[
 RowBox[{"R", "-", 
  RowBox[{"\[Epsilon]", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.927384890737833*^9, 3.9276229032354507`*^9, 3.92765151964023*^9, 
   3.92771444807066*^9, 3.9277982402186813`*^9, 3.927799094958006*^9, 
   3.9279741911659756`*^9, 3.927984093819004*^9, 3.9282593558544044`*^9, {
   3.92903019286368*^9, 3.929030204451384*^9}, 3.9290392305754814`*^9, 
   3.929092332818027*^9, 3.929094522476795*^9, 3.929109088894205*^9, {
   3.929453427454902*^9, 3.929453447962969*^9}, 3.929525573745163*^9, 
   3.9312602239702797`*^9, {3.9312603122921543`*^9, 3.9312603633614674`*^9}, 
   3.9323851486375484`*^9, 3.932396947176407*^9, 3.932397075773348*^9, 
   3.9324318929109573`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"99e1f34a-98b8-b943-8457-db82e7994034"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot of Spheroid for R = 1 and \[Epsilon] = - 0.1, making s = 0.1. ", \
"Subsection",
 CellChangeTimes->{{3.9312606179580097`*^9, 
  3.9312606485566998`*^9}},ExpressionUUID->"d4fdc77d-ad27-6541-b554-\
0fc03b060ef7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SphericalPlot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"rSpheroid", "[", "\[Theta]", "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"R", "->", "1"}], ",", " ", 
       RowBox[{"\[Epsilon]", "->", 
        RowBox[{"-", "0.1"}]}]}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Fig", ".", " ", "1"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9312603741438713`*^9, 3.9312604372991905`*^9}, {
  3.9323972768191032`*^9, 3.9323972845741215`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c9e3fa04-a101-8c47-8e54-b95cdac5474b"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJyMfXVYVk/QtiJgt2B3B3aLHLt+FhZ2i4kd2C0IKgaIHditGGCxCIqARWOB
pFJ293eOe8/4POd9vd7Pf57rmmudvfee2dmZOXsOFUdP6zPOJFu2bF65s2XL
of6mOpdtf2LjRpu5VcX9/XWV1q+3bVf/vVVcdgwvtTrfA6VArq2xVVostrnm
2fqqZfa3yphvQyy/LY1TnLPdfJcR6GpT68nVFxn7XikzzWs+6TIuRWkcZTm2
Y8MtNj8K3mzSZUu64lFhpYfN3DRl0LGsI2bmnjbe+2IyvixPVoofbt52Q65M
5e7bW9F7Z2y32ZfuH78m92Ml0HLO7DxjspSzXq8crvnssNk0sU2ZPRkhyu6Q
u+q/LGXm6ozQTqV32rRR/GqcuOlmfRPjz2H8OjlelID+e9C/R+oXnsAzBHjO
SDxiDvA3Bf4vEr+YhvVuwXqryvWKs+CnIfi5IvkRIycv+8PnpK7zHxjwKTZ+
XL928qP1NvG7fO5Gi0U2xHPTb9YVhn+9o/RyfPzD8e0VhXjudNWqUwn3x4p5
52+Lhm0PUYjn+9M8g5uOTFJK+E7uH+cdrhDPQz9NsbDM81yx9tlXy6pltEI8
++Ze2brxkDSl38VFZafPiVWI59wdag4cqf4/ezG8b2mvhwrx/Kjg8IXH3qUr
u+7ud0/8+VAhnvNg/HiMJ54vQ39/6CeehwOPDfAQz+HAXwr4iWdbrLcQ1ks8
DwQ/08EP8XyiShsXjc9CrcbcM+BTNCl4coP50VU2G05Yun17vpZ5Du/R3jt8
SKCyZGuDneM7BTPPa7sUquo+NkLxzzX2/YhCscxzqs/T+tFTHyk2RU0f9Ut5
xjyXyFehb/KyeKWHy/EJZhWSmefgpXNfpDxOUGa0GX36YqVU5vnY4oHrs7wT
lZsnw3vuaPCceR5Y07N83IdExTZrSXLXVc+ZZxp/C+OJ5xDonwn9xHMp4OkJ
PMRzOvC3A37ieSPWG4r1Es8vwM8u8EM8Rw+r7qbxmdDtnCGfYvqMemeKL3aw
mVl5efDAahuZ5+sJtpVivU4oZws7ZrfueJ95ziqVc0RS2ytKD6+FVl4BT5nn
LxULFBlZPUAZEPtw8MikZOb5y7BNkzJu3VLiwrb4WT96wTxH/HL5EVcwWKl3
aKNF3iEZzLOJ2cNlHTqEKCuGPh8TezKTeb65vUi6vVeIMtSn3st3RbOY5xwY
vxLjiWfSXx/6iedvwPMMeIjnb8A/EPiJ509Y7yCsl3iOBz/R4Id4tp//7A+f
rV0TDfkUHtV+Lyy92MHP+6U4achzUi9T78deJ8StUTPvtTLgeaNf6xupba+I
AoML/NhvwPO7/G8mjK4eIF7uPtnckOekdo+av7x1S2x09PQw5Dl//v6WiQWD
xe8eHdPyGPBsbjIyoHMH1R8XDWhsyPM1s2tNJ3mFiFsHX10z5DknxodiPPFc
APqz9ZT6iedk4NkMPMTzB+B/DfzE8y6styTWSzyb9pb8ZIAf4tmr7plFGp+L
+lc4Zcjz/UMXbHMeXeVX/uP6918N4kbpdnknRgwJFDfbTs1tGDcWxFyOUPeR
sOz7fIJh3CgY/atCzNRHYlLZVSUN40b/WpVmpSyLF44HIz+aGsSNeR92rEl9
nCBqRznWM4wbc47NbvzSO1E08lofst0gbszLqhiixg0RPqrbUMO4MRfjG2M8
8ewI/XWgn3i2A575wEM8FwF+B+AnnldgvRWwXuK5EfhJBD/E88wP9fpofDq4
1/hgwKcoYBP6UY3bfmO+NskbZXAOtnE7uVqN8+Jarq128wzOwSvh6w+r54IY
bHEla4jBOejcvEXeZiOTxPw83m2eGpyDtZ3txqnnjtgw7Wp8bYNzcGm3KA/1
nBI1158/PdXgHAya//yCeq6JbE7NI0oanIOng2c/Us9BUe9IQv4Eg3PwNsZn
x3jieRn014J+4tkKeNyAh3h2Af4FwE8838J6x2G9xPNo8BMHfojnOg6LPml8
ungmGvIprrr8yev8ep3YN/tKx3atiOevu//kLaJ3ZJrv0/LLrYnnoz//5Dki
fVOHD9U7brQmni/m+pMXif3Nxr+asHSrNfHcrfKfPEpUalD8zJHvO6yJ52LH
/uRdwsw+bFZY+G5r4vlFyT95mpjaK/9Uk957rYnne3f/5HVC8rvXmnhOw/jp
GE88W0C/OfQTz92BpwrwEM8+wH8A+InnC1jva6yXeC6/R/IzDvwQz00c/uR1
fnf88s8x4FMUgj+PkP7sRzy3g718pb0E8XwV9rWT9hV6f54r/UEQz3XgP67S
fwTxTP5WTfqb0PvzjzV//FPo/bm29Geh9+efGE88L4f+6tCv9+d1wEM8uwK/
I/ATz0FY7yisl3geA34egR/iuS78eY30Z+JTPEB8LivjM/NcBvEnQMYf5nkh
4lUxGa+Y58KIb+NlfGOeByAezpXxkHmm+FlLxk/mmeJtAxlvmWdHxOcHMj4z
z/MwviHGE8/zdfqJ50HG5wXzXNT4fGGeV2K95bBe4rkx+HkGfojnWYjPk2V8
Zp5PId84J/MN5vkr8o2b8jxlno/g/M0vz1/mOXsBeV5nyfOaef6A891Nnu/M
c0XkA79kvsE8l0L+ECzzB+Y5AvnGTZlvMM+ljfMT5rmScT7DPH8Cnk3AQzyb
Av8r4CeezxnnG8xzaeQb6eCHeL6CfGOhzDeY587In2fJ/Jl53or80Fvmh8zz
beSTvWQ+yTzHI/+0k/kn8/zYOF9lns8Y57fM8zNTmQ+vkvkw87wP+fNwmT8z
zwkYvxrjieez0N8A+onnJ8CTCDzEcyLwDwJ+4jkC6x2C9RLPPuAnFvwQz62R
P9vI/Jl5rol6cJusB5nnINQ7TrLeYZ6XoD4KlvUR8xyLeqqbrKeY55yov/rK
+ot5FqjXHGW9xjzvRX13V9Z3zHNP1IODZD3IPO/D+HsYTzz7Q/986CeecwNP
f+Ahnp8Afw/gJ57XYL0RWC/xHAd+DoEf4jkU9WC6rAeZZ2f0N7Lt/tPfYJ7r
on6fJut35llBvV9F1vvMcwj6A1ayP8A826GfMED2E5hnb/Qfpsv+A/OcHf2K
lbJfwTyHo79xRfY3mGcTjF+F8cTzeeifAf3E80DgsQMe4vkO8NcDfuK5K9Zb
D+slnnuDn43gh3g+gP5GQ9nfYJ6pXzdZ9peu6/t19gs6PKzSYrGfvl+X6Tfx
fUagq5++X+c7ea3W7/LT9+tmlJx71Mzc00/fr3OPGhazd8Z2P32/rm6FDVOv
+ezw0/frKvdfd6dT6Z1++n4djdf36zygX9+vmwU8+n7dFeDX9+s+Yb36fp0L
+NH364Y7NAoz4FNM6HDwXd0Tfsphy0+z3vzeqdw4+dm10Ky3yqF14dUsm8co
Y0qU8LLoekH5Vt7szsQub5SFts/2aPXklV/2o8uqcYjsUnvB3LRhoTFKntTu
t3vMWm1D4x+Mvvh6iW2iklX87KeBe4UyqOfITn06ZikHnWLzrAxMVEZvqf6g
rO9GG5I3dhpZPijoiXKgUr6mR6vF8PgO0Tuvji74XAkcXOFjVuWbypQJoxvt
2fdceVJic9ijs4lK6qz72bs0e8rycl8P58vbMV2ZUnNKw2JFbitLXWf06tE1
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
qIg4cwtxhsZvRBzYKuMA6zdD3Kgt4wbjufNOxpnT+YzijFIa47tiPOmnOJNg
rF88RRwbgzhG4+9B/26pn/apQnGvnRzP+5rwbzaOYwrpH4DxpL814mSO/Eb6
RRngb484SeNdwH+05J/1FwCfxySfjCcG9lWM46RC/AdgPOnPgP7CK430i9yw
bwDiMI1/Dv+sJ/2T9T82PncYjw38s4xxHFbeY/wijCf9lXBOuRnrF7lfSP8P
Q5yn8XuM9y/rz9fO6NxkPGWxfxsbx3mlQjuj/cv6TV2NzlnGMxXx4RrOERof
gPg2XMY31n8a8aqEjFeM5y7i53Tjc0S5h/FWGE/68yNPCDbWL8ohfnrjnKLx
oxD/rWX8Z/3zEM+Hy3jOePoi/hc1PqcUJ4yfivGk/xz0rzPWL3xxvkTiHKTx
OXDe+cvzjvU3MT7vGE93yAvVk3LSMxV68mQY6RFBM++u0+LydnOLagUM4kOz
WVL+y1gubmL8Tyn/iwfjR+c0koscPvK9qX2tj9SwGbfNj/qK3SvI96w+uM5e
eLDxDj9+bjJSvpe1KfOu02OTnX783EQnp77i4DuVymafu9Fme4fGD1JPDuP3
Amje17sstHlt9POalX24QJ3XRj/viVO1Nf02NG/7//LYfhqTpVxY7lZX8bys
dHbecjRgUqDyX57vW8y3ZSmzP3mUsgq6rAw+92bDx8fH/ocevi+hG99Njhd6
/e2lfqHHSf3SX0e+TM72JVNpXPTb9VdNLisN1vRut69ZmDDFet9gvdRHNetZ
t/HZQRlKfKe80fP9fRSr49Uvbe8VJ6JWe1jtcDujmEzbJFZdGGZD9moLPAVX
/MEjaL1dgf+BxC8Iv96OfA8EePbD7oRnDOadfKOdvzqvH/nPkQKr/9hxwKRU
zY58v4vGb5tqhFM5ivEvJ6Ya2l0Mgj+YdGxsqEeh9UYbzytMwE/Dzn/4EXUl
P8oP8LxB8iwaSZ7/Bw9kdz1vZEdTHf+kX29H0q+fl+ybA3oaASfZcW744k03
twQrzfI6P8w44aP816h5w5lV3ioru43rM2lfrDJvUrPOzjeClMrLU09uPfJa
uWtdsMj0/QnKmWP+PdebhilPrq2vVnBfprJtunyP8b+w4ZEm3T1spuK5QFzC
DbPrW9OV6aeipqy32GYzqvb43IVKJiorms683WZ+pnLA/dfrc0+223z8aTtm
bUCMopw6XO6/Raqf96v3ZdmDHTaF6luFlj4epIwYUfx+hePpivn9t9XNfB8q
+aVclExIPHrdP03Jk7npdKvYWOW91CMGtjLba1LghRKVf5P36sYxynA5r9gJ
nD2Ak54LNI2ct8B+TpJy+1vXFa4jNtlEy3WJlR3yDbVu8Vj54bv2wpLTzjbl
JA9iI/hZCX5IHjhsW5MBne8o9VIP+186Od+mm+RT5P5vy/bcJjeUCzW32tzp
e4t5/jZhc9L+QWHKsZVFovYsi2Ke03+9uzjfNFaptdBz5uunT5nnPu1+NToR
kKhcujl968COz5kH57XuL2pUTFSmZI17Hb4glXmw6VOug1faM6XgsiLVtmRP
YR5yTJTzXsC8hH9phMUQ0fmo0sKjkEWbbaGM84VXpaj+dj7K8/q/n2RufMQ4
5w3y7PbbwV9xin94O+tXIuPMmyObp9/gEKXO55xf59zKZJwxVoXtrGYHKwfq
TOuQEZzBOIt7WX7zDgpSntxZt2zpuzTG+QHzfsC8hPN4/6KLAjofFdvzD32h
GOC8WKpqzEA7H3GwacGzhjhtl2ybkH2qv3i8JPOoIc6TSx2e3BgcIj7c7hFi
iHPauODF9WcHi10m4y0NccYdmpN+MShIfC92qr8hzgDMew7zEs6+/Wu2zGNy
Q+zKvsYv1MDujezfLfIaFCaWjvo00NDuYWc7uS0wjRXvlnW+9crA7vcszzxR
7S4+1rlUyNDuZxx6r61ZMVH4Okyeamj30SXGzTiQ9ky0bvX21GYDu1tjXhfM
Szgf1tmVocYB8bHYZPt0gzjgYF34qOrn4nTVyclrDOLA5O9De6pxQLQs2qvf
OoM48KNY9doVj6eL1x9nH8phsE/P9zxg4uefJpK9H7RoabBPZ/TY807dp6Ke
0yi7VQb7dAHmvYp5CefekX/2l7hyJyG2UPEl1oRzWOc/+1TsaHzGrcLLddaE
0zr6z74W7UyLf5801N2acI4/+yfOiE4fCg+Pm7zXmnCub/EnLokfmacmV+i5
x5pwXkj+E8dE34uZMYktdlkTzsmY9xjmJZyPwOc7yacgnFOxrhNyXULPZzPJ
pyCcP8FnpuRT6PlMkHwKwjkTfNaRfAo9nz6Yl3D2g3/ukP7JOBvDTxZLP2Gc
4fDPN9I/Ged9+Od76Z+M8yz885L0T8Y5Fv7ZSvon47TBvM6Yl3AK7Pdtcr8z
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
Rjo1TTFRz7kjL08PUuMuzxsF+VHIaV69Hpr3AO6Hj8T7NTRvVsWw1+eerPUL
bS7v89K8d2r//rzsgYvfrjPy/i/Nexfy3ZDTvHo9NO993J/3x/syNO/+B/U/
aOeK5baA6OsG6z0x+ry9qeqXSS33/qhgsF6SJ0NO8+r10LwOeL/gKt5/oXmP
nEo7re3n4otmNje074z5W/pq+7ngqRinEwb2nQl5IchpXr0emvcn3r8oYSHf
Z6F5h5WYbKXFwe6hUzLqGvhz/4RaiVoczBPQtIW/gT8PgDwv5DSvXg/Nextx
8DneT9HP21GOF/p5TaR+oZ83B+T6eUkPzfsL67WQ6+X9ewz8WEh+eF7iM7/k
k+edBXkByGlevR69fa/g/RGa9xD8wUL6A897Bv6TKP2H5z1j7G88r14PzZsM
fxZ4H4Tmdcy95a2B///tx56O+Gqwj/72XSHHPuJ59Xpo3hXYv6PxfgfXC9jv
n+R+53kF4sNJGR94Xn/IT0FO8+r10LwlEK+e4H0Nmncd4ttoGd943vqIh7tk
POR5G+jkNK9eD83rjvg8F+9f0LxDEc9HynjO85oh/hew/hP/eV5zyAtCTvPq
9dC8HutzbtLu2V8qcqLQh8an/97/j5+3rbDdTWXWjCa5+loFsHzxwiPbHyRc
UJKn3LUObBTC8rODi1l+dnQW5+t39Nf6KCSv9+NCMe2eqM/Gmb7avVGSry2b
v4Z2n3Xk21dntPutJDcdOWKwdu/2qHtkG5POXiy3zJcSot0Pbj2y/vc3jU/z
OXtkVf+KRexuigU9C0zT7jWTfGy4lUV4wgXRoXPDVwGNQliee0VKhwxHZ6Wr
Y8gd7Z44yS8trn3qzZgrSu1+90p/f3ab5ZU9GpzT7tnblv70S7t3z+/t4j2O
S3iPg+x1DXxGgU+Sm1rJe7P15L1ZXlcd6G8l9bO8Jsb3xnjS8x/GT8V4km/B
exzmA+R7HCTPhB1dYUeSP8C94iR5r5jnvQMeqkoeWG4yWI7PliDH83mK8d0w
nuRn8B6HLd7jILkX/MfcQfoP13G4d50k713zvO6wVxdpL5b3xPjcbeV40rMc
46djPMkH4D2OMLzHQfI98NvH8FuS98G9dDd5L53nHQW/6ij9iuUzMN4H40nP
aoyfiPEkH473OEoMlu9xkNwW++Up9gvJ5+Lefjd5b5/nPQz/Xyj9n+UbMX4S
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
i9DOW+IzO/LbBJnfMp83kA8Pkfkw8/nfx+sttfM+Z8XX8dr5T3zaOv5YqeUH
KZtLVPyo5gvE59u5cW+3qPlE5LA9H7T8gvik8akYT3x2h/5c0E98BgLPUOAh
Pk2BPxn4ic8jWO8krJf4NKsk+ekBfojPgY+srmj5xMHLWwfb/Y3PYsjWM6ed
Ah4pnw8P+FTc7pby7Xq3isHVXyvPFruPNemYpMy/dPJgxY73lb7tWhT27pSh
hLZPjjzX5LnyctGQIfXtI5S2tS64+HRPUe5PKVrYXKQp4TNeLS6zLEq5+tjx
8N2TT5SDpqeqlSufoTx44uR/50C0YuVdskr/OvcUly8TTlvuyFDqxVuVPpE7
Rtk8fUmOko+3K6mlY1v/qpeudOqxO8g7LkrZdOHcuVz2D8VS2y9LYz4/V6qf
3R1iljNSmZH39tU9F5NE3OZ7xy6PTVb6lr6XnlEoTIlxHR8X/SRNNLB+UG3z
xaeKVa8GTTyDbyuDyrU516voK/Gz97mF1wqGKaYO6VU37LqinDt39HT3R29E
zNI200Td3cq3I3dLf6vjrMyZnvKprudb8TSxzpW5+Z8oF6J9Muepv5cXt7C7
9jFDmT++dPGnpxOU9IbOkdrvovPXd3tapCo5f9TuUMo/SZnS7l3x0uovfWey
bo8+zpnPk5VbQ0tNzFJ/6TuT+1fcbh86MEVpcdyj5h31l75jOW1Cpy6NHiYq
ExeFF26s/m7KPbFk2otEkSPWo1WzJfGK3ZAfW5qrv54BNTPOVkgT5fL0+161
QKwyst3l39XU31Y1xrt3XfpSzLGya7jW6o6yd1j3cS7q78+lL9vWPfVGfMgz
vL6Td7gy+UZqcvTQVOX+8NnL+zxNVS6/M91WqmiUkn3hsSuzWqUpX9a9cT/4
Nl65fs7MbevUaGWB57GaL+LTlcdm08YfexSuHGrT/ob/72hlz67vrytuyFDe
drq7t8u480pZvzHrXDLDlAGnl+Q7MCVFuRLuvttq9Aux9lG6Q7/ioUr+nwe9
Tyx5pgSuOrvdKjVL5PI+GrnD0l8p9Kqs0/bJkcrO3S9aPVz0RoShL5friPH3
VULNcv5W/Vb0HDBppqXdLUF+O3SG227Vb0V23ylLyne8L8hvg2vVKOnd5LnY
uCw1Xz37CEF+m7Kk7XDVb8Vbi065Sy+LEuS3kc2rOqp+K/IqNZuFHogW5Ld1
L4zMXnxHhvg8cYvLsdwxgvw236px61S/FbGXev13Li5KkN8WvbLjtuq34njB
a9NMc0YK8tt8z7o+V/1W/Bzgfyu9UJggvy3tMmiZ6rdi25nHqzyCbwvy29Lt
Qk6pfivKr6vVbt2uK4L8dti1DqGq34pJjfuP/VLHWZDftn8Sv1r1V9HrmVkF
7Zf8dmjHy+6qv4rEARn9td+F8NvjMYPDVb8VcRMDXbRf8tuBOazKqf4qwo4q
kar/8vdXa+z5/lT1W/Fh46iN2i/57YSKB+6rfism3Zrtqv2S37ZdU6+i6q9i
wZnRp1X/FeS3m59kHVX9VSycVaGP9kt+O+Hgt1+q34rT6Ue3ab/kt4W6FZnp
7B0udjbvuF/1W3EPftv+5WvTMkWjhPtti2mq34oP8Nvo9ruLbZsaLbae/vrw
eXy6IL89eqCmbcDvaDG/Xs3dqt+KJPjt/dBPwjUzTCR0u3PXa0qKIL99VKNR
lwHFQ8Wrg5N6q34ryG/ffynzZaelvxjaeF031W8F+W0m4szzKTLOeEt7KdUQ
l6ogLg2X9lUssX8HYv/aSB6UubhXX173XYvvuO/9Sfddi0euBSv6NUpRoju2
MhPqL303WB9vZ0m/Ffr4Q98T1sftWtL/hT6O0XdxH+ji/2W5j0QuXTyk7+Xe
xTnyCueIjdyPYiHiaibi6nzpn2I0zq9l8vziumMmvuPdVPd3IoYj7jkh7v2W
/qP0Qh7yQeZdXN+tRFwyR1wKkvZVLui+I4H+nvKsyqeWT+tEK+4tfb+4uaUr
9z3u9WlWPlqxLb7vm8iMVt6PeL/zx5wMZdniK1sX1fH/H3EyXfqb8NPF1UfS
P8VVxGETxOF30p/FZ8RtB8TtUOn/Itr4fYe/913/8f0HN3wXfZzu72LkHiXz
rjIy72KegzIuvVlb3EuJLD+x/s2Yi0rP23kfJ698q/w6J+O2KeL2Hun/ynvk
z/dk/sw8l1sccL+s7zK/MvLv7vLfZa4AeTnIB0K+Bd+XmI/vSNDfSWxSdkV1
m3HOfrXk3wHmv9f8L/nyEy0WHGzs4rezkvxONn1v/F/y4cOc1zw2cfWrJf8u
Mf995/9fOf9d1H/I9fPS97r/JW+KddXGuug73v+Se4C3heCN/370P+QuP0IL
2t8KUE46z+jqdTRGsa9TZaBpoTeiCuxSCXahv+f4L3ndtJVjnM1OK6vqfC/g
VS5Aqf+rbrsVw96Kw6iPEmR9xH71Kyu+1qadw/yKyb/nxn9vrsBLKa+qk19v
dCeox6w5fvkXzU0bFhqjfCtvdmdilzfKDcgLQ/4V8ia7Tf70Jzu6lDXsTyr+
iOfJMp4rt7Hfc+N82SPPF+UuzpcWOF+2yvOF9qNyOy3palydaDHn1u+jWhyI
QRy4g3Nnmzx3lFicOwufllp7IzNarGg7pasWH5wQH3bjPFoozyMlCufRHsgX
QX4PcUOvZ5XUI/TzRiOeBOtwRkqc4h/rEnnAw17wQHHmFs7HJHk+cl53H/yX
B/9fJP//lN8B/2/AP52nTWH33sZ2/6f8hZ1nC9fiXiK5R/esQIO4dCFPm9Uu
ZqeFf9a8mP1//VCJw3ndXZ7XHK+GPMoxbvytALG1VpCJ5v8TpP8rDdDnqS/7
POw/TshbZsq8hc/rIcivkmR+pVB+dQz5VbzMr7gusEN+FS7zK64L9p6vc1k9
x0X3CuUctPO8J87x6sZ5F9cLejmd43o9XfE9fP28dI7rcdJ5PQzrSsa66Fxu
g7xuoczruB4ZCz73g0+KJ5ngfzj4p3xpI/hcBD4pDwyDHcON7ShKDZR2r9hT
2r2HtLvoibxxq8wb+dzvjj5hN9knZDsWRL69RebbnI/dRr2wRdYLXOcmo174
IOsFrnMjUC8UkPUC17lWqBe+yXqB61y9nPIxvR7Ku6hO+Yh5Kb8KAU534KQ8
Ki/qi9+yvuC6eDz4OQt+KK8uBR52gQeqO3Kh7jCVdQfnsYPQ7+0i+73MZyHo
cUP9Qnzq6yZar77OovWmYr3vUJfRekOx3k2o42i9pYCzMnBSfZQb8myomwi/
J/ree2Tfm/tFa+GHM1CP0L6mffSf3EeC9qO+DqJ9p6+baH8dN95f4h/7S9D+
moR++4+kw4Z9ddELdvRAfUR+nornI6fl8xFeVxjibSrqF8pvI3AuzJbnggjH
+bUa58syeb4IymP1ddNjnEf6OovyWH1dRudLEeNzVtD5MhrPa4bI5zW83q+I
8y9lnBcU59MQT3qi/qJ4bonnbnHyuRvzMBVxaZ+MS4Li0jPEmTAZZwTFme94
HtdKPo9jPONQL+SR9QLzmYT8fJrMz7k+PYR8PqfM57k+vY06YpusI5j/w6gL
lsq6gOvWlqgvvsj6gu2yHvXFQVlfcD2rl5O99HoWI384opuX7KjH+QD5g35d
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
Mv4uuE+bKO/TMv71GF8S4wn/Iej/Av2EPwQ4k4xx/vM5Xd7BjZduLnpUTHOt
X9JwXY0g32ssF+uKl1ij8iICYwY1NLTXWcjTjOVixMMVndT/L1YuHXFwk4Ef
ukF+wljO45dKuaDxdK/eSd6r5/ufB3APv6q8h8/3Py/j3v4neW+f73/S+GoY
T3xWgX5n6Cc+CecRYzxiPdYbINfLODvgfYoZ8n0KxknvX5yQ718wzuvG72sw
Tg/j9zUYZwfj9zUY5zngeWGMRxSHHR2kHRlnH7xHky7fo2GcW/HezUX53g3j
dMR7OkXlezqM0xPjL2E84ewL/RnQTzgV4NltjEc4wW99pd8yzjOQpxnLhTf2
aXW5T3l8LOTdjeXiKeLhZBl/eHw+xKUtxnIx8r+mV7Tnms4ly211NTutUB97
THLrUO25Zsv1OeNdi3vx880luLfTD/d2fst7O8pyyAfo5NdwP2qZ8f0o8S/5
L/TV7XF/g/Ckoh/7Ffd/CE+c43bnz9p92YdBn7X7s3T/sND6y++05yhVvo2a
vdbsNPfnj/oMLqD1c39XrO7hUtyL+7q+eP5yGc9faHxlPOctL5/z8vgyrwu1
+VrHWdTYG7BLu/9I82bDPd6uxvd4lQbgszD4pOcIc4zfe6X32cU82OUM7EJ9
6XHgrabuvtm/7lNNBT+vY434USaU6fTnXsqecW2N7qX86326Na/kelft+bNe
1tMX71/b6L5XMBnyIcZyURC81dprpEekXZX3SPPJe6SsfwnslSDtxbwVhH1r
SvuynzzBfV3LI0bfDRC1Md4O44lPur861XheQX5iUknOS3ZPB87cxvddGWcc
/IpwxgFPUeP7w6IO8PSBfxKeSeC59x4jv1LmgM/Bxt8bEUtg3+rS/3n8Urwn
/sP4vXJRb74c/8t4vLi4RPptY+m3rMcafttc+i2vqw/885D0T94vMyB/BDmt
6z/si3PG+sVw6O8H/cQz3S/9rPv7s/r7pe3xvEl/T5Xej16M50S7ca+Mnrvp
70nS80f9vcp7eM74j3uYQv9cnp5/jcZz3s14zkvz6p9r07z65+D0fPMRnrP0
xvsFj+VzFiUb7uEPwD38XfK5mKJ/T2GWvO/9r/v8Sgred+iI9x22yHvjSiLe
v1iC9y96ynvswh7va2Q/It/X+CjvvYtkvKdwFe8pXJT3vUVpPG/tj3v41+Tz
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
Tuk+nEMSVV3HAczfh3jmeD54u0Hd7/wPKVB8ZQ==
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJw1nAXYF0UXxbd3VmwQMJCwUEEQxUBAwKAMLMQABEXBQjExQVREBcTCRLAb
sRULW7ETW0QFFQu7v/N7z37Pw7J3552dnf/uzJ17zz13Wg8fvfuRSRRFQ8so
SnXeMouirfIo+kxyOxUcH0fRcTq2U6VjdD5B5X8WUXSVjjMl91T5gSo/XvJ4
3behyndT2RK185WOSfpbJ7UzUeezdfyhv1+pY4LqP6a/v6h7hqp8ru7ZX+ej
VJ6pL7NU5yLJ/+l8jY7zJb+j+u/qOFH1blXZxTpfq/KxamMdXW+vNm7WebLK
r1T5I7oeLPloyY/qvhdUb4iud1H5sTqfxW9R+V86rtD1ayqfqvPVKt9P8lmS
L5bcSP25sfCzFqrum2pnnP72meS3JI9H1t+XqN7XqnOKfm9P/U1/irrov20l
N5b8gto8TXWnSH5R8umSp0oudd/1hfv8usovUPkMyT/rvvd0/4W6/knyAsnT
JE/SuYPqD1HdrfSsy1Q2Xcerup6i81W693nJp0qeLHmw5EskXyJ5gOQz+RaS
Uz13ptq5UPJrav9VtXuU/vaGyt7S316jP5LfkPyq5Dclvyv5dcm76rnvqu7b
OhaobEUdq6h8D9VZFKKoieREdT6PPJaeVvnTqjNP8lOS50l+QvKTkqsqih6X
fIfkv9WPWyRPU1866/ow9fdOna9T/VtVPlvy9ZJvk3yX5Bsl3y55d8kLg99z
c927SMe96tscld+sOneo/D2dV9KxKr9X5Svrua9I3lB1l+h4RvVH6nmX6nyd
yh+WvJ/k0ZL/Vf0ZOs6j/yo/UuXj6L/kIySfLrm7fu8tkm/mW+h3vKI2R0ue
pzqH63ya6myiOmMlj2UMqL0X1Z/nJb8k+SXJL0puq/sW63ha9fqp/nydX9Tx
jOq8qTpPqk4H/b2jjpdVPkvnnvrbWXrOfJ3nq84LqvOy5Jclz2fsSW6k3/uc
5Hlqc03GvOQddM/JauNcyYfqfJKOkyUfoTbnZp6PP+ne43XvSrreVvWPVp0z
VL6x5H0kH869qn+f/n4E41b1N9K32Bfdoeefp+vBKv9N5/bBc/Je9WFl1R/P
u1VZZ7X/hK47qc0D9PdjVP676p+g8lVUvmliPTEmsg45UeWrqnwzlQ9T+bEq
P0x9eEBlR0oeLflJycfV+mrT4Hq/Sm4XrGsOV52HMn/fX1S+cfD37p54HtC3
uepnU9W5QPIxqv+C5FNrvbSl6h9Gn1T+nMpPQeeofjPJ0/iOku9WWwfzflX3
Th0P6bpjYj2EXuqWeIwwlo7je2YeS3+p/c2CdesknZ/WMUd1f9HxoI6DYssj
dD5R9WO9562Dx2IiuUvwGI0kbxU8/o5V+/Mzj8N71X6p67skn6HzN/V4QPd2
V/0xqr9x6meh/y9Q2Wwdj+s6V50ewTp0ms6/q+wJHf+ozWn620S1c6ra/CSz
rmPM87tPUP27JL+Reb04QXXeyryO9Ej8TNaFk1T+Xua5hm7cXs84hXGp8g8y
rwWVyncM1qenqPyjzLpuOZX3DtatD+lZTTKP7aDyHYJ1Yr/E+hvd+6TqrKU6
16BP9PfLdJyjvz2t8rVVPkvlO6n+GbG/6c6SJ8TWmafruV9mXqcKtf9FZt3a
P/GacEG9dvQPvucB9GHmdQfde7LGcHNdP6XyFjrPVPmmqd8xa+Xmqd8r/blS
9f9IvI4+ofI1VP/yyHXOVdk56ED9/fzY5cur/s7Ba9j04Hufref6ef+f77q+
UfL1ku/Tt5ute+ZIfkDyU5Lv4T3rN07JXe8CnTcrfN+bOi5S2WzV6aU+3M6a
rOMO1k9+a2TdfZvk+yXnlfU7uv2Weu1m7N0g+YrS7/lq9fPy0u/hIvRG6X6i
d6PK4wFbIK48Bi5W/cmlv+NLeh8v5R7/byReM+9U+VV809Lf90rJ00uvrayz
rKWsC8uwK3Kvu6zzizOv9cNUtoquW7BW63yg7h2g8tMkf6e2dpU8kzGiYwfm
l8oHMF4Zw5JHS+4n+XDJ+0jeBh0ieRfJ20k+Ue23LmxbnaDzUrXZW+VjJe+r
On0ld9W7vZJvyjdW/faF13PWfmyWm1TnBz3/ndy2y1Wxx8DNtK+6e6udPpKP
Vjt76XgSvaPnNFV5c76R6vRCX0juWK9NzNNLVGdK6TH8oa6XRF4331X9D1T+
leQueu42OvQvOln3dqvlt1VndX2jz1X2ha4XYQvoWKjyg1X+jcrfkTxc8heS
B+kYUNsKW6mBrTPboifqpkdY9yT3UcGj2InYaToex/ZgnFde21jXVqi8prKe
HqH+38BcVhuLdf1l5DbX13v6Ivd7OIT+JV5nv1TZrrr3c76FyhczX2LP6dNy
z+teau9q/fbLGJM6X1x6rl2n+7LK+hM77sPMttw43bdBYZvrUt07tbQOwbZN
K+uNziq/UOWTIttiF5TWLQm6TsdMPfd49efLxPbJ66VtF+wW3tl7se2rzVX3
utz2WCedr9XxpuQ30bW5bfcFauNanR9R/VUq23bYdct0XkfXK6ruoZK3ZS1R
+RjJO0nuJXlFPau17m3F+qJ21ta5HeumzivoaBH5I6/IuiFxhO7trHs3l3wQ
a5nkzSSvpudcqSNX2U+q+5fK1tKxmDGP3cC3Yr7o2PD/4yH3GDpWfZikZ3zD
Wonek/yt5MGSz5P8PWNV9+2pYw3JB7Lu67mdJN+oNvrjR6jezmrzJl3/pPLv
VDa08O89SOVzVL6c+tVX5/90/Cp5bZ1b5h6Ll+u8TeGxOVfnQr/lQdZ9yQ/o
WQ9JflTyg5Iflny/5Lsk3y35MckPSZ4r+XHJc0t/C+YC9iu2647qw/W5f9fT
kp/RcYieG7CXdF5Jx6EqO0zHqpK/Rh8U/o0Hquwu3VvRT/Uv6Lx+ZHvsisJ2
y3SVFypfV/JlkkvJ60neR/c1wiZOPMex47HhD8bOUT87o0NUpwXXqrN+atsD
O+QSlY1TnUNU51LJ50geKXkK9pvkAyRPxoaUPFTyVN6f5GHocMmnST4YnS/5
d82HEZIvkDxW5cN5ruT+kntKPkry16rTg/kl+SCV7yZ5vOQRkneXfIbkQyTv
IfksyT+q/kDJt+n9PK3fsLP6fDvvVvIukq+Q/ITkbpInqv5RuneQ6p8t+QjJ
e9Mf/ealjF8d0yR/p3NTHbvo3tt178+Sd5J8m+Rlki9UnR90bhbZNxzEHGNs
6xl/oKt07KZ3+J/O/+j4SH/fS8eaknuqjT90fBVbZ+6to43Kz9H5dPVnH8nn
M3/0u4ZIvlvPvUfHQNUfpfuaMY/0/FZqf0+V7aFjkP6+j44YXa7jT+Z0ZNv+
8sK262OsmTqejWy7jmSsMQcT+wb4BefomfN03KaynxK3P4oxltjW3Su2TT4g
tu09W+0sn9k+30Tl/WP7FKfqd6wfXI92sG3p50SVtdQ9t+q6s47dY9uKV6rs
qsxr4s/Yp5p31+m6ner0jW3z/6LyY1R+g8rbq7xfbNv+V2xVld/Euq527sz8
ff9Q+XEqv0vXyyQfJXmG5A66d6faPj9J/VwneMyspvKNYo+r3fAlVb6xrvfU
O5+QWU9eo/b/5b2jz/m+rLuS91D9lVW/nervha8sub3kJmpzw9jjdi+1c1Zm
22AgfqrqbIJ9K3k97A2+j9prlNk/Olnl6waP4TtUvlxm/+hGyZnkA9HDavOW
zHOtjZ61Tew5NVL3rq57u6IjVL5t7Dl4uMrXCr6+We0UmefjiNTj9V/JH7NO
lh7Hn0peS/LakidQR/WXl7ytnrtX5vF8jNq7EXsC7EF19sg8/rPU63OEHtOR
6WjNXFP5jzo2lfy5yn6PrM9ZI74vfX2O/v516vo38X2D26HNROeVmb+S9848
znupP/tlnkfYMmlse4Z58Hc9F5agK0qvSSvo3ksSr3c/6rydzvuii/T3s/Ss
XrreQfIpkttIbqs6PWPrwMNUvqbKu/OuJZ+KzafyQyWvEaxnblL7ufpzkMob
6962sfUY/vLaqtMHe5JvoXo7oq9UdkZwf7YHzwhej+kbc4X+HFPaHsUWXZZ4
jm7PvWqjqn3z63k/mf3xs4Pbv565B46VWceuqusNYtu6vbEfmQOM+2AsZZbk
vYP9hRvodzAmcw16Jni9u4kxHYzPYMMMCMZwZkjurWfO0vXb4FJ6ZjPJXWKP
0zbBc4++LB/8XvavjMn8wW/Q8ZvaaRobP9gk2JfGV+sX7Kfhf3cN9uFbBa9B
6IJU36EKtl/AP7YL9od4JmsNz0UnsR6hlzYIXtfQQYOD1+u7JQ8Lxq/ul/wG
v0vHh4mxmmslfyB549xYzfOqsxVYRWXMpnXw2oceHB6MiT0Y2x/CL5qFHRKM
Cz2hssODsbgX0MvBWAC6ct9ge2O2yvcLtjfu4l0F2xhzGIvB+M9Tkg8LxvGe
kzwiGCOax5wPxp2wh1mDPpP8m/qwX2X/7he9p30r44rfSb5BvzHNvO4wtpvo
/i3pP/ZYZj+in8pHY0dKbglGGXvd/0F1R9Ou6n0PPiF5GmNR72V6Zh24emKd
x5o7C4M989r9ncqvTjzX+mJb6f51JV+qOr+mftY34DFq83TdM0Nl/6T20Von
Hl/owA7YHepbx7qfy+me9Xlvuccic7CV6m8d224Zho0GPhX7+z5bGI97lXcu
+eHYuurn0vprvsqvLeyT409dXdinuhZfX0ePwvg0ODV45j6V/bWvM48BcO05
tW2Azl1J8mC1faba3Ux/v1plf6fWJ9+C63C/7t1PdSboelPVWROMKfYa973k
6xKXI3fSuT/fIvG8p02w/wOw1SWfkfr7N9Kxv+T9UtvV76tfH5eWV2Cul8aU
H+P9Z8bJJ+od/l77zqMSz1ns3jnq14xgjPpvlb+S2J/dMjUmQfm+iX8/438C
9m/tQx2fWJfMk7ycfusZOtYCq0WvMNbjqMGxY/7hG6JXdkytW/5L/H2eUpUu
Knuufu4/Or+VGKelDvOVdmYxv4Px9EPq/vAt5uvedTPjFc9JbpXZv+5S++bT
Jb8ueUOVP4adqXb2Qi/ob6+pvK3KH1X5C5LbZMYl3pC8UVbj3qo/EB2q+hMS
6wOw90E1jgF2sXeNV4BdTMVHyd23fWocZibzMTEGAB5+pv7+feZYwLDE8xfM
/EU9d53MuM2BiTEPMJCzVP/HzLGPO0vrd3T7S2BNub/j25LbZbYPH1GdIapz
j+osUHkHlb+MXZdYR4I5P4a9H4zDB3238WC5aqvUeRx4suR3de8mYDeqf4mu
V8vtH52cWJ+BY1+sssa5/Snw5lGxMWf81nNL26XPYwtkxpcOSDzHmF8L8MdL
+4zdVOfl+rufklhHgreflFiPghu8ozrtM+MJ/yYeR+BacxjzwfL96J/CGNdH
qr8Z+EtkLOJMHa3V1xV1PlvHesRUsAdT69sXdO+BwfjF86XHKrgG2MVZOtYB
Sy7tc+Jvjk+8zuCnv6e6HTP7/oxhYg33Sr5H9e8tjbW9ojrrZ+7bfSp7ORib
o8/7BNv3T5Rew2j3cea+5PvQUZJvLzy2iXecpP6shp+kNkPumMgtqrNnMI5Q
qA/NYtu9QfLqsbGvPPH6jC2xM9hDZhxgJ8lHZ8YBtiful9kPLVW/eWy7tz8x
k8z+7HR0UWpfr1/utR+bcLLKTsyMM6yoe1vG9gt2VZ2TMvvyP6j/PUrjFF10
jtXnNXmG6gzO7IttpfL/sMlUfpna/F3HDio/HbwlNT72Abif3sNiXQ/XMSw1
bnAqddUO0OQi/fdVaf9wG7W/XWbf+T2Vf1Tal++q8t6Z/ccvVP5Naf+wm8r7
ZfYlP8e3Le1bLq/f1SI2doeP/6vKc10vjO1f4leeqz4s1bGB5M9i+6D0+TyV
fYvewZbQ+UAdv0TGVQ7Rb/lO10N1DMHOjoyZHKTyJbpepHZ+ZR3WcWxiHfCE
5O48P7hPXSWn2I78DZtL1/uh9xgnmefmeeAnmefgWSo/ODPO872eVQbjRL1V
Z2RmzKdM7R+AbxCQxpZkvp+vOnFu3TU6sS2JfjgqsR0KfjJZf09z6z3G8K7B
GDTrKngoGB348+k6/kFH6O8nBT/riMQ2KbjNq7zLzHjOxmrn1mDMZTmVT1W9
VSRPlfxDavvhItZ9HVtJ/lF/axT7nV/IGNGxZeR7G6u8ZWT7oElsn+WH2DgT
3+4K1fkzNfaLffKLjtXot8r+wP5X+TSdl+nYQvJSvcM/S2M3t2HDBvftK5W3
LY3HgWtlKl9e8jfgKqVxn2Wxy8DWvo+NFYER7aD3NywzFvSt6v9dGj+6TOVb
g+NgM0u+lBibyt9LvL6xroGr4HPib+LzrJfYr8HPWTdxOb7RBon9I3zmpon9
6LNr+w/bD58TXxR/8xpwr9w+6W70NzGmREwRnx9/H991ncT+7Hj191z1c//I
vhOxScbhvZn9nwbfJ3OcEvm4zO+U93lj5tghbRL/AzsAN7gss/88LPL3yBLb
mUdiq+bWS9hOR+q53SWPw1bObXNiU66S2E47M7N9iW1JLKApa5/+1iH2mRjB
GdhwuX2uiZn1EboI3VQl1qvHZsYI0JNHZfbZ0LFjMmMQvWq9h49DrOH4zGOR
cXhC5vHKWMWnO0D1OtTzsQi220dl1qHoT+zHNRLbkNjj2OXY4WAWzRNjGnAd
Poqt67rq3pNSY5jvxMaeP42sEz+Orff6ZtZ36Dp03CexZfTgp7F1WmO9m646
Ns29Rr4RG+cnzv26jreYp+r/qGA8/Bh8/NQY/msqPzQYt1/It9XzPoqMmeP/
4PsQB/ggdizgs9RlH0t+M7XPNi9y/AKuAPjA9brvTR2f4ZcQ/8pd/0K1PTy3
H3Qpfnxuf+FicJfc/s5kyUNz+zJgjOBBvDf89FP0jJ0lX54ZMwIvAhtqllg+
J/P8Z+7jX62d2Ge/OXPcmvEJzt9ZxyeS91DdBbHx/8NSX8PPWKS/vR87/gK3
Z8vccg+VrZUYSxyeeZ1mjSaOsEXub8d6uVzicYiub5S4P6wBrE/oq2f1nJaZ
41DYVn+xZki+W20Uhcchdso/td31QW2XY5Njm/9X297Y49TBnnmLb5E57sN7
j3X9huTfa1w0T401rpsab8Tv2b+0j4NvRn34Ervp+fcEY0HgTGBDyC/rvF7m
uCTltAd2BG6U1TJ4UovS8s165p+5YxysB2Dx4F0Pqs4o1pTcaxflrCmsFeh9
dD7rzEalyxvXawm6+g7dg/FADIX6jepydHm70vI81WleWO+B9RCDaR/Z711V
crfImNB2ZR2XKYxxrJQau6I+5ZdKXhk7OzJmhe/MNdjVjqV9anxr2kTOCsdn
VtH1pzo66119qHunq+yZYLy3aWGceR39/RH1c9XCYwnMae3UuBO4FTK2wYr0
C3w79bOa1v3HN10t9bcDW3tM7a+eGptqUbfD+ejKsViwLtoA7zpZ/do7t42E
DbhCYjsQ++XixDbM37nfNe8Z3G5M6XsDerLws/GDwcF2itznternDq59f/r6
qM5HVI6R4IsPKe07X6br54L5PHDl4MzBx3hWz1y7MF8ODsUGqWMla/AOCl8z
hjdMzQ/BjgJXb4M+i31mbCMzzsHhqd+2ltcqHIvh/gf0rOULryP8luap+wZm
0bz+XZMKxwPAMMHYkcHbwfjb1n0AV2pdlzfh3RS+JlY4UUd7Peet2FgUOod5
xvxkrsE16ZqYx/K37ts8mGP2SGZeC5wWeHtw9E6KzOfYMXEcHx5Jr8S8iAWq
/3DqWD+x/G0S3wseR1yBOMKwWia+APYNNwjcG44fODgyeD08GzB8eIbg5mDm
YOhwjJDhaMFDGh8Z49s8cazh8cxxC54FL+6+1HwnODmdgvsJVwXOypmR/Sj8
NPyypvqtV+f2K/GNT0vsC7etfV38XPzh0xPLvMuzE79P9NuJqXl0+GPjEvvU
8KOIsR1Sr4/w88AH3gbPK6wnX0efpebPgNNhf2N7ww04v7afb83M6yL+AsZw
RuJ2WKsnJtb5LfT3a3L7m2CXZybm++FHHxm8jsOh6Z2YbzNc8haJxzl8SPhP
xLjhu8CVIcYNF6dvYp7GIrCQ1DHujzPjFGAU4BZ7JcYfwCr2TFwO3xIOFjwE
eEfbBmNN8H76JOYXEZdflpt3Cg+nZzDXEe4pZcTWwdfgvRGjJz4PxgS+9Glm
7IPnwpXZNXH74Ad7JK4D3rVLME8GTGv/xL4w/At4GPAB4J/AQ+KdwNnqXI8l
YrfESw+T/CP2efD4f1b170kdd3slM1+K3wKfbOvEsVo4W10S87XmZOa0MebB
ZOEnzYrMEYU/NDOyvzM0sf++VOXn5sZD4FSCjyDDbQGnuzYyR2in4N8C1gUG
RzlcU3hR4E7gQwMT407/5o6Js1bh8x4X7L/jtx4f7DsM0L3jU8driNMQvyEG
9InqfFF6DSVu9EXsGBCxlsWxfUP8je9i+yPEmBaVLidmSSyUedEnM3bQgBuo
7NvYz4VT2KGe73D7iDUyzseoLwNTY+D76t5JqWNA+NLfxMYBiJvjS+OL9c/s
C9Em/tLS2M86PHNcCvyBuDu8gFaSh2TGLMArPuDvmW1UYgKv13EB9CR2CTbM
h5I7ZbZpD5W8u45XYscN+qa2j16T/I5++9OR8aLnC2Nu8FrBGcEYiTWDU+Dv
E7f6oTQeckBmnAWM5Sfw+cp9xTdcVnodhOcARoCvOgL9kNofJJY9LvW6iX/+
c+w28RfxGzeqx8DE1L8dvPKYxP3BFxyT2B8EJ4FnoUdHTZjfuXE8sJQxwe2v
yvzLjbmBX91W2IbEbz88MX4F5wyuGTw0cIzJ2FWRsQv4HmqqAZc+Kth3AFc5
IdScBx0XJX4//4/HU6dIbW9hm2GvYbdhy/2Lr5Tb9we3GR3sm/ya2/5rGLeZ
sdc5tR6AKwwuCi57UGIcFezuocK25cqqe0VuLBHcbWzi7wiefVxiXyPLjXuC
aTTSeXpuvAV87ejE+Eaz3Dgy7xY8BlwG3Bg/HL/8yShqIJtflBvHgM82ucZD
8ty4M5gzWPKIxHKRGwueXc998G7wbXhH4K1gL+DKByeuA1cUHJw62DPYOcfV
Nim2JnbpW/rdbwWPczDtewrfC5bzTuI2t1LZJ7n73KWwLc67AjO/u3DfwBjh
bfM+wXveTfx+wJU/qddT8Gc4NLwfcNyPE6+58C7nJ14v6D88RXTj9ql9DPwL
+IrguvdF5pUxR5lr4EkL6ncO9vxR4nHbr56X+Cyv6Lkjg/1N1vkN6rV+l8L8
sYNT27zYkdiQW8TGAsABDshtA+N3gXs8lJtPAD7wYG4eQO/Y/l6Dr5fYJ8Qf
vCkxbgJmQozzpcTr7F2JMRfwFjgMcFbwN+EsEgcGD8E/fTR3DIwYHFxGcAZi
cHAZwSvAOh7LzQ+AAwBvBn9/dmIc50DGcGLMZTjfKDEWgD/bTnXfzr0+wqt9
sV7rGSdwlLGH4QohN/CF9H5+SY2ZsCZeKEWxQmb+MBzj3xLzXOGswoPFrqaM
8XaVzt/Sj8gxceLgXKPn4fK9H3k8flOPSbCCVwrbWuDwi1S+QHJ3OAy5bRuw
enjzfOsHVadxZpuBbw2HnvEGfxJu4HuSb5VcZl7TsZnhr+AT4csQYyO+xrr5
eq0TptXyjHoOwk9lbd28sP+M3oPnSVzsxsj2D7kc2GzwnK8Itk/IL8DHxr+G
5wyftSEeFDt3hflOzOWJwrqCWB/9wbe6Svf+lRpzgMsAbwA/CP4O/cfmv05/
jzOPmU5q4/3cupcYwbzCeh7/i3vxI6ao/vepcaSrdd+Q3LgC3BX4rOAD56l8
YG6sa73YOBoY2qDc/hf41zhsh9JY3BB8o9I41Xh0eWn86nRsjdI8NLDoUYXr
XJsYmwCXmJUYswCvgDP1WfBa31L1Vy6Nu35JTKD0+rU/uH3wmj4zMdYGzpYm
5jswPsHW7skdnwB/uzd3nANfGT8cf3lAbr8bXsFU5mBpf2GmyrctbEPjFyzM
rcOIhcEXfKjW/x/m1j3ExeAUsgZhF7zKPNfxfuK1lvdPbA7uPnq4h+77LTef
i9wPMDJsD+Kk5NiwjpCn9V+wn8I62aT0Osi6/Glu3bkwsb+Br/FpYv+E+dJO
f5+R2w8gZkSuDusOOhjfhnlBDBqeMT74nno/3XNzaho4mKXtwMk8v7RviD/4
fG57bQq+VGn/66jcfjG+BLwseIFgv3C94LqBs83TvUfm9jkelvxcblsPbuPf
wTYzXLa/gu3q2apzcG78eGRufxYced3ax8a/hicHb465TCxxQh1PHBQbRwZD
3ii1n4yPjP0+qbQNDxb3ZG4uB9wzOI7gfvhZT+Xmk/TJjQ/Bk92EcVc6doBt
1r703MFmWa203YK/jt+O/w4fdkmw3QU38MtgWxou4efBtiv2VPPSNtWJ2EGl
7Vj4s2uWtuvg2sGtHCH5gcQ+MP7v/Yn9Z/zl+xL7zNjP8CjgWfaQPBZ7rbSt
SN7exNI+JjxR+ALok5bB3E54eMRWiJugf+Fl3azj68Q5CJul1uesvcQ9WX/h
SZDDQI4Dfz+lMme6TeGcvg6p+RPkkMBLJ4+kQy0Tpyf/7dLIPAJkuAQvsa5V
5soTW+VZc+t7G/KvIudVNDy3ljvXfWhbOIeRa7gbHes6r7FWF/YryRG5qnR9
8l861v2Zj19SGPcgh6NT/XuxeYih7JCas/BsacwT/U+OW8/U8WVitT3qdYAz
awF2B/dRH/7CNqk5DPAOutZ14Dz0rn8jvIhXwARTx6vvLh2zZj1tyMOMzMWY
Wfpd0SY8BjgMtNmlbn+TwjmGPI91YIvCawGx5F71t+M7ItM+63/HwjYAfGx4
I9jn2OmDaxk7q0/dT74LMnYX9mDXwjYh/BrsLWyt12ofaqcaZ+qfGmvCV+pX
y+hI/o6e5B1MqMzPhmdDTtzOKjs8NVdeVRpyDJA/0/mI1DwbODb4YLvX7RxZ
+2Vv1nYCOpxnYy/0KmwzwIPkXri74Ozg7WDvo1PLC1W+rupvr/rvSu6nc9/C
PhHvhncCl4YcBOIX2C3YkDsWtjHguu+TOr5MnHZo/Q7hve+bNqR1NfyOQfXv
Ok3n3oXLdwXPL8zhwWfCdyL+S+7DDoXtH9o8IHX8l77BjT+g9quG1uXw5Hcq
7HMRQ6YdZHw7fDzi4MTDkfld+IVf1b4hY7hrPZawJcgb2lbXy6fGo8GiiWOe
Fhx3AHOeUtsS/+evow+J3R9S2DYg7jyysD1AjBKbAHuA+OapwT4vMdUrEutA
8HDiEMQglitsd7Kms3aDQYM/N0ltU2JPwmWYkTiOxnp/TeJYG9g1GDf4Nms/
tgJ2AvwB+PH0AU7v8YXtELDVW2sbCV8ATBwMfIvU8425xvx6PDV2RG7a5cF4
FzGsV4t6LS7Mm/0qsW9wY+I4KRjhotR4CPxx/s44JP58ZWJdjV+Bz7BHvaaA
C4MD4wPckTimCcft9sRxK/jJxxW2neA2k8vEb1wjtV2LTQsX84bEccyVC9uU
6H+wdDBo8Gd8LL4zsR50MjY8+rlVYf2IbkS3z0m9hsKvhuuPT0EO5nnBeBf8
ZHj89B8+7ZmFfQ04tBMK+0Ssu/cmxnnwRx+sfQ0wdvB3MEm40xcW9o+wnbvX
fSMmhYwtDT8N3hexK77J6pm/y101rvhnYjyceAyxGHjX0wr7RKzxrJ2sm9gV
YPTg83DOyX/g3cI9vSdxzA6u6iN1ffJbsRexFcltfTTxWkz+62OJ12jWI3wS
/BEm94XBGCO6nDUGfc7605AnGNl/w0/jfZITelEwrrh+4TWM9YvYAT4MNg/5
sOcHY+zk52KrjYuck0qeMzL5pOTa4dOR+/tM4j6z3j5bf1+4tk8ntuX+KZ0z
wlwBe8MnBn8Dh4RfAcbTPXO+GHlkxI7JCVsSOaeMnLAvI+f9kEO2SPLumbnl
YIdf5d6jgLhmj8z59cSiyZuBkwPfplfmHHx4X53Ulz6VeUX47mDx+O8LJG9b
mSuD3QovHdt1x9x8FXgU2NhwyJlf5E/AOQeP/Dp3nga45Ozc3Anwy4GZee/g
mu+r/Z6VeRtwBuAvwYv6kPW5Mnfkr9w2Ivbhe8TjKvNLPpDcqzKPBH2+pNbh
4Kvwd4hxkcO0uNbDj+fm/OOfH6zfu0dlTu2VmTn8YATw0OGHg0WQ7wL/HN/+
2sz8cOxd7GXyI7CZ78icu4G92LiwDY39DBZNzgQxEzgV5GE05GDouXtWztMg
JxKeORjEd7lzKcEkbsnNgyL+/45+Y7fKXKt3JXevzGfqo2fdkDu/69bc/Cg4
Attn5lbBKSDfBa4RtvsKhbEVcJU7c/PKwIbhkJDPAfdkc+zTyvyz+3JzvfD3
yAEinwI7eP/MOQJgw9/nzqXBPyBfEB4fHGniI/BPiZ88qTaHVeZHflljQYzz
X3LniZEjNqBwLj/5e+C48MCfjcwlIJ5G/KdbYV8RP5FcfjBk7BDy+8GK8evY
n4A4LJyHLQvzcsD+sDHgDMItfDFzfjpxg+cz56QTTyDWAI+PHB7yycjzIy5B
Tht8TniG8GTI74df2RDjqMzlbZObzwgXvVVuriO8DPiPcBTBacHZ4IvDkd0o
N+8CDga+48a1/7h6bu4ifiZ+Z+Pa9wQHhhMK3gZeCicULuaKuXmY4KbkH8M/
BA9eITe/Ea7jpoVzksGI2WPgz2DcDKwSbi0+88+595IgFxl8Fd4s+OvHufm6
4NZn5+Yww2f+KDdfF/z1YXgylTmpn+XmqeL3srcEfFf8ZHBXeG5gnDeo/uDK
fLWbJA+pzEsDW4Z3Bs+MvUbgDxM7Ih4Bdxxe2E+59/UgngTPjhxMeBYbF877
JeeX/Gby94mLksdGvg8+Gz4ouU2sh/gTYOn8Xt4x+QC8Z8Ym+QCMT94BeRq8
B+wI8mSXYJNVzkGepLY6Vs6bQ3+MrMwrOyTz92Qvj3n66SNUfl8wRt6hck70
BYyzytzLsZntZfgzu+g5syrHOBjv5DLAJSCPcH7tT2Ef0X98Fnyi54Nj6/jf
+HD4OfgOMyv7OMwDyuHR4o/QNr4BfsEalfcDYZ15OxiXZs+SV2v/CzwYTgHc
AmwZ3g97cIDl8j3Zc4T46Vjyi4PtF3xTfFTW0lMrc+B/U93zJLcpHXuZgv9R
mnt1Pnze0vyacyU3Lh1fwkfBVwH/PofckNLcqElwHErHuCZL3ro0T22q5N1L
88IukLxnaX7QNMmjSnOI+NbknYKxD63MB16+Hu/k9hOzmK7y20tj/5dJfrR0
bIExwB4u2JOXqvzW0nGDGZKbVeZ6rFl5XxfW1YvIOSgdt7xY8iWlY7mXkKdT
OqYKp448PGyftVT+RXBu68aVc5/fZp3OnXcKlrCr7tu1cv4bXDjyf7A3p2bO
dwBr2EJ1+lXmE8OtIu8BntrDuXPuwMd3JlZbOR+PcUz+CDj13Ny5eODpg1Rn
QOV8FTDjQ2r/C/4euSPkPt2fm3sJngini5wV7GVwdPJEsKPBeMhZwgaED0Yu
C7kuu+TmJ8M9Zj6QLwOmf1rmnBTiAT2JvVbmK8eFMUTww6U675Ybgzw1c24L
WCT4IjwfuD0PBXOE8KUeCOYpEddqWRnzxCZqXRk7wh5pUxnnZH1rVRk7Yi1d
rzJu9qDk9eExBeNq7Svn2NLfjSrvt8DasiFOXuW1pV3lnPf3eV+VMcanJK9b
GX+7Hx1XeW+QH3P7AWBA4CFXV87xxKbgDB8F/HluMI8LnwwODvlv+CzI8IGI
pzwezOHBL7mqMl+I9Z/22SMDW7RFZawMm5Hng9GAz9wbzAdjX6LLqxqbyq2D
wYLBgV/OvQcLfBby5tmrhNx58G/ir2CwL9X4yda6b7vCeffwJxjPYOzk1vxb
Gq+uavsHXH1Z/X2JfZDPhJ+3UmVfjxgFdim46ze5cfWlie0QYg3k135Vz1V0
NdxecHJis+hJ9pdpwMZqTBV/olvwngPY7OTDsZ8DdvomNR6LL5IEY+z4jj/X
+CTrEXmW4IfE8DcMxkWxDQAhwOrxs5eWxi2Jr35XGifELsVHgQ+Bn4I/90/t
0+FngP/iazDmATfIsywLcwUbp+ZZwa1qlnoPA3ig8FPww/DL8MXIfyf/s3Xk
XCVylsg5nZI5H6whvlB6zw3iDnDVu5WOE5AHPTY1txM7DZ4hZFDsBDiB5Hzc
H7yupanXZfiN5C0xlhjTxId+yB2z+lVlT6nuNZW5eoxnxjd8uJaFOWDso8M6
Dn5IzhO8QTiBleRtgvcwwd/CF4BnCBd+vcJYIvvBvBi8BrVPncfA+oJeYp8e
9ouAi0QuI/tRkM+Iv/NHaTwDu/ev0ngGfgffu1Gtf0Iwbw5fg+/KN0UPrxiM
H7BXAzxhdBG+0rel4+rY6kvr744N/0lZ40U6rxCMVcDdWBzM38AP+reeC3CI
WAvgEWEvkSM6s7a1yLEkPoLtRK4pMRH4PuzBAScH/f9P7Vd+FPzueG+f6Nwn
OPYIH4o8u2ciYwbwbsEN+EbsobSe3uGnOvcNjhXD50oqc7rgj7PeEf/Ch2oe
7E/zu5vVv535jk2zS+2ngLmRJ4cPjp7BD+9b2zpgmuw/xP4ecN/4juyjhN/O
flRg6XDZOgbHjPD721buD/t2bBG8B86hta0LvkoO09qV3y3xFvI1ibMwD94v
vb8ZvjOYx2/BuAdYBRx98Ap0IHujnFP7Jptn5lDzDZvU3/HT0vvD4FcyF8jf
hieB7YMOx+fHDyaOhi+8sHQMAv90celYG74832ivyvtnkWeDPYPPdUrmPAri
IG/k3icKjhjxmltS89yIG5LzD5+T7zuw8j5NxBnJ4YeXznfcu/LeSa/n3gMK
XhgcQvJ7mQtwvdgzCs4aaxX7SsE9hIdGzjCxdPZ3YV8m9nghxsQeVXC32C/q
w/rerWudhu1NHJh4MP4g+MaY2n5gzy3sItYO9qbCLqI/7Wu9R8zr4+A9ZOCm
sU8V9hK/nb2a4GbBQcOmJOfqushjnxxLxj9//7Kug35gfxn2lmHvH3L9iAOz
7rIPG3kSxNnm1s9l70PypdH5rPfsk0auA/svsr8a6wXxNPZDI6bGvoPkCRKv
hlvIPlWsI+wRSH416wg6kD1B4LetXjiGR/wOO4C91+DBEa9jXzdidvAq2bON
cU6Mm7xi8jzZ15C8SOLk7MNEHiLxczhs7EsGFw9uG7my5PixFrDXJNw+3ueg
yvthYVOynxh8Uuy6MTXuhB5mryX2WWL/SOYk8xG7hL0j4aSSc9OxdHz6k9Tz
4oPIGDxYPDgSe1qypxh7UpHfiS2N/0g+HDYzPiP5/egccBXykMC8wLvYawFb
HXwGDIY8XnAY9rS8O3XMkf0hsO2xUdlzgjmLfweuwl5SxNbZE4Y8K+KS5Izi
6+Ln4ouT+4c/Ttz2/dTcTvIbyHMgD4L8HfIc8N3w6z9OnbcIjsF+X/CJ2O+L
nE94TeyNyV5j5E+Rx4n9g89L3ie+A74wPgY5sTdH3g8DPwU7nFxh/BpiHOS0
4deA+ZD3hh8EnsO+RiNTv2diINjh4HLEXuDGEX9hL6ZRqfnnxFXIbVgYmccB
nwPcg32tmI/ETcBZjq/bJE5CvAQ8ECwJWY9uyMXkXuIgxFCID7GPEu0Tv1lQ
94E4EPElcqHw48D38GnJdSdfhjy2DUtz5cjHwgcEdyLXqnVp/iA+M/mK8OjA
94j5wh8kdkT8CfyePY0YY5hEvA/6D87D7+b3g6WwH9UJ9XtA98JpwP5p8K/r
mFSXyvYk+1muFrxfGf4IPsLAwvkNrWp7m/jE5pX32wHn61R5PxmwwM0qrx3s
kYNNfkRhLkmj4H148I/wgdh/h1gA+5Swzxh5QltU3hMJ/Aa7o3Nte7CnCHvp
kOPVo/L7gTvZOHivM/y4LSvvBQpW1DR4bx98LvZ7YB8nsNPdKudPYTOCU7If
Dlgle0iw/w9+2aaVsaC763WA/bng/e5eOc8dO5F72euHdQR9wH5zzGuwAnJ+
iDeyPrA/3azIOAE+SAO/Pnh/IWwDdCo8hvHYP5X3ymB927ryfputan3J/l/w
tfBfTi7MwcF3ZC+kYZG/Cxx9+DjbVN6bFCwNO26z2pZrEbw3EXjmDpW5nfgK
4MrDa/8F7IL9OMCj8KHZO6lnZJ9xv8I5KNtXHrfke7FnBnvusQ5iu7E3HfYb
tiH7wmEf9q9sP5NDht3EfnrYTuzPwf5g+Om9K+tPeLJPBu8TRNwLW5I98bAn
sdHYfw87jT0R2fcPnvj/AGq39zQ=
             "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfmnbkzQ2hRKdFCSkhZImshsm+VJYoiJcmeFCqVpE2k7NnK
vhSyy778UciSFCq0EEKy/59vz/v5/Obzu+eee+/MO++995zznOe+TXsNPO7c
JIqiRWkU6S+6KYui33RFlSh6Lo6iuSGKppVRVF91L6h6YB5Fl6mukTp1kP4a
1f+i62/JN0n+ROWfNNCDajtPdTuovEBjfZF4zH3U90u1WST5UMmfqrxWbR6S
er7qZks/VfcLqn9UdY2le0Pt3k98j69VX0/XO9ItkTygiKIndCVqs1R1C6Rb
qj7XqfwuzyTdDRpviepuVd3NkqdI/krybZKflHym5N/Vr6IxPuPzSHeHdB+q
/87Bn5HPtrf0bSR/LPk96fblc6mc6npO7T9V3YUa76nCY/2jum5qP0dykNxY
8nm611aSO2q823Wfr9R3c11vS7dY/f/T+91T1+6S/1abb6TbTtdnkpdJP0vj
3agxMtU9orr39X+exhmu8mvSL5T8q+Tpkj+S3E7tP1fdApUP1DOcrLEHq66h
5DYa/2/JPwTf7y/J3VV+Rs9XQ21bq+4RlSfrfo9LfkZ93mYeaPwLpHtB8jGS
Y/XZRPom6n+92l+v9u+rzQS1qaP/T0s3V23X69pWbf+nPi+p3Fb176j8otpc
qLYvqm6S+r+jayfpLtZ4zaV7T+WPpftX1yK1T3Q9q/afSK6o7T76DHtI/lft
a0vuJvkQyTWkP0Dl/jyfyo2lP1rlo3QtlH656q7jfWUe+wHpP1L/A6RfzjxS
XS3JXTXGwWq/seS7VX8gY/BMat9Z8l+6csmbSW6g531J5TfV9k9d86Sbr7oR
6v86/TXeh7qOVJt31f4elT/WdXR1vPtUvknvb6XkVWofS95L92+n/v9IX1Py
8ZI7Sd6I70PyYLVvGvzOxkp+S1crlfuo/fnSDZVuKz6L/q+RbmfV3S790Xzn
+v+DnrGm9EdGfra7pO8Q/Iwd9f/OzM+6QdZnGar/J+larfadJF/OvGIcybtJ
/lLlE3RdqOsYPeumGrPQ+AdJ31tyXcm1mTuS99f401nPGv/wir+rY3T/bpm/
s+1V3kPtD1b5MtWdof71JNeRfKz6f69ya7W5ueLvnPldR3Wbsr9E/i5aB69d
vpNcY3STvo/K/1Pd4dLNUN3Panua5Jv1/A2lry/9dMmXSj6K/ZC9LPJc3Et9
DqnOyaN0v03UPmd9SX+E5Bqsd+Ze5LW3i9rvX/Ea3FXlSaq7L3bdG2o/vbDu
IJ5H8saSM8kd1f831X3P3iR5P8lnSl9f+s0lHxd5fheSY8l7ST5E41+hPt11
naJrf+kz6f/T/dpL30JyWpX3jDzP9wt+98z35tJHhecac+6E3GuKtdRZ8naS
k8JrjTXXRu9+S8lbSH8n95X+WNXlGrOO5MHS7S/5Id3nBrV5U/I06frGnqMX
StdEdYdJvlfv+lK1ayz9DtX1fxFzW/rDVZ4p/UfSf63/k3Tv/2m8ptL/rHv+
Kv0hmZ+lv+SukZ+pkeRzJHeT3CDxd3u25C6Rv+Nt1b+V6tqrfIH6N5e8A2uO
vVzy1ipfrPanqv3WqjtPdQ30fM31fGdg/6R/Q9d2VfkC9W8s+VCV79ZzjlH5
FV3bSN9VddtIf43GO0vlTaU/UOUR0t+qsTdTm1bYV2yU5FLyjpKHSL4x8Z7c
TP3XqW69+h+mZxlYej20Z+/VeH1VV0fP11htj1fdDqxl9hf1v1K6W9V3WuG1
0I77Sb+n5EMkD5H+DvX9T1d/9b0cG6ox20vfWfqh0g+R7iXJDZmr0g+Q/Bzz
EdvOO1a5r+5xvMr11Ocklc9Rm82wpRpzO91vR7XZW/JFGu95jb8Te7jkiyWf
U3r9YpvGSbe5yr00xlEar5batJB+V/ZolQep/bml95M91f46tR8g+dzg/Wxj
/T9Qco/guf5rxWthv9wyawBbvqP07Su26ROkr5lW7ZzkVyr2B65T2xPYM1R+
V7qXVb5CY7zMPq26cdIfp7rLdb8jNEZ3lUer3asV2+PJ0p/IHsta0v3vVt9T
qvaF/esa3oPa3Mjek9puYC/Wqfyixpii9lOkf0HlZdgTlY/g/ap9O/XfFH+A
PVTyxhr/LvZC6VPsEb6Uyr1Z2oyrMe5ReYbav6byb2pzvconqc3zFftPwxlL
8rP4RJKHSO4k+bmK198w5h97Dr6X7jdR4x3KHNOzHKO626X/B9vNpXu+gk5t
2qm8W2Zb95mu3dkfdX2E76grU/u5kh9T+zPU/g6Vt9L1tHRXqe7Wqr/0uOSh
kl+vrr/HVe6n9hP1Xd6vMV5VmydUtxG+hJ7pCtVtpz5TsOel/Sb8pT30f4/U
vuNC9hDpN9LnuR3fTfrbqv7mLNYDe7TG35bvX3IXbCj2Uu3vU/uevB+N9Rb+
IHuF6q7QvY5Sm1Ml76S+u0rXGn9P/RfwToP9u1dU7oqPpf5v4t+o/UD1v0Xl
2rwP6YfwTtT+UI05W3W3J167ke4/PvIa/ldjPIt9SbzHjcGXVPv7Vd9X8rZq
vyv7MXZNYw7TeFNUfkF9HmINStdCbY6T7jHVX6n+Y9Rme+yt6s6TfLXkFol9
2Pr4Erruxt5EXq/4F5PUdw/pZ2PjVD4be6M+H6r8mOoGqe2Fqnu4Yn+yh8pt
2IPxrdT/aT3PvZIfkv4J6U9iL2NPlv5o6Z+Rfkbivfq34LXInv1Exf7wQLXf
V/Kjkl+SfJrkXSQ/UrG/2VNy28R7W5zbV2WP+4+4R2Pfn9iG8P5u1PjtJPdS
n6ek/0D9z8d+q265ynNUN1ptR6puuNoer+d7UWM8LP1w9ir8Z8m3SL5E5e0L
f57N1PfJiv3D8yTvl9g2tJR+j8Q24kyNd5j6PMHerLph0k9R3W6JvyO+n0fU
/y58Mj3Dn+rbVu3vqdhm/aH/T6nvXYl9WGzdr8F7OzZvvfRPSn9nYp8S+4lN
v0Vj7hfb/u0i+S7JnSX31P9H1H4qtlPtT5f8qORp+A6ShxHbqP1jqrtZda10
r/kqv8Faq9j+458SSwxW+8n43qn3iwGq+0NyR/wt9gL8L13rM5fHSP8wsWZm
24iNvFflzsG+zo/q1r+0/9SCd5N6/R+md7S/dCn7m9pvqvZbqv0D2FyVT1Pd
AbHr8JFPl3yQ5K0k30W8UthWTsVmSHeorlrSb6y6OSoXalNX5bs13ovYcj1D
DdU14Bl1baRyff2/TfqziW0L+5P4ldj/SnAcRfxEHNohc+xIDHm1rn8z32ui
+oxReYfgdzlV7UuVT1Rd29jPcKuumsHPfo/ab6PyYOkHSb9zxb4I67VesE+y
lf6fnzlW2J61qnJD1rfKT6v/lsE+D74Ndduo/2V65l56vm2kf5n9WG2aVrwH
41uuCfY1sa/49vsGx/r4+MSRzYKfhTlQX+V+WdU34jvR1Sj4WWbx/Wi8Y3PH
DiX2X7phaj9a7XeteG5tF1xmjhFrtiSercac26s8XG3GxK6rG+wj4RvxzLnG
/zHYd8aHJo7CB8X3JJ66nrnI2pMMUPKnnuV71h9rTXUHS75F7/NYtWnGnoOt
rGzoEq0kHiCOUt0vrBXVdyIWyo1FdEkcC7QNxhKICYg3xuP34W+COUjeS9e3
kr/TNUT32rfw/rMFfofanqn/G0v+GbxA5f2lPwr/RGO3l7ynrmXq+42uHVX+
WH1eV/l5/DHJ77NHSH5Q8g3V+Hq6ygM1xpTM+Mad7P3YU7V/TfJTiTGAqcxN
XTOlv4Q9Rvcuc2MrXSXfTGyJ/yH9Zfhk6v+65DmJY/5Z3C/Y98UH3k/9U/W/
XrojsbfEVrxjyccn/u6bB2MHzIFh+n+UxvxV+qXs8Sp/wR6t8nvMEcmLJX+o
8kt8Xo13ucY7k1iG/ZkYVW3Wga9IP0FyqvFrVexzYy+H5Padtk3sS2eSb4js
U/dR31GsI8mbsOeofITq1kr+WvK1xAXsQyr/pGus5N6SS5V/1PW07jWvcOz3
hPpco/8ng8VJt4qYG3sn+TdiZ+mG6vvvqPbHVNfCbXqWA1gj2A7eMX642q9Q
+y8kz8L+B+Mc4BsHV/GPPmrXTVcUjN8kiefcXVV/7EuVR6vuPWKVwr7P/4gH
JPcp7HuBwfWQPLLw3sYe9yF4i+ThkueBSRHL4avoGsEYvPvCvgyY191Vf/Ar
la9OjAcQj36APZV8jtpeXdoPxP/bWZ/tM93nSmy9Pk9ryZ9KvkLybPyNwngg
tqKmxvgoGM8Bs2H8zTTWXqXHeE/6y9X2WsmnaZxdJddUeW9dC6V/P/Jz76hr
fuTnP0Tt7pc8SeW6+HfqP07te6XeE7DzfN8tI9v7PPWexl72q64tpO+pPheo
/AH7u95HW8kdJF/FO5fcprBvMULyJeAFGn9Mavs9UvrWhX2bYZJHSd65sO8w
XPIr+H6pfcfZ2Fw+m/QX4nvpflcxF1R3U2r/sG1qfGeU9Askvw7eU3rP5v3j
F96I/xTZP1yQ+zvhu+CdxKl9vwclr01s95nfLSLbf/ygaZJPj+wP1Q62wdhe
YtSLJU/U/a5O7X+0Sf3uh0n/ZGxcmrgU3/ZyyaF0vDMP+6T2c/Q8Jxf2HZ6J
7KvgsxCr36s27SX3ljxY8ieSH1P7EyX3kzwrsn3EHl2m8kGJ8UbwwP6J98R3
1P6MwnvXW5IflXyC5LMkPy75d8kDUsfixORlYXvOnrZ35Ll0duHPw+fC9uMD
DE5tc35V/59VP0nX77H9C+x9E+nWxcabsQ9nJ47Z7iO21hi98YUk76OxPs0d
P7XFZ5ZuWdVvYg0Q703Q1TdxzNmOz1I6riOe+7HiPY+97vvE+wE+Fr4VmO6D
mfezLaS6PjGOw37bIDKeA352mC4NGY2TfBjzXW2uU7me6i5lbpYeh/6XSB4r
+fDU/iL44T3SXZNsuHV0sfTXSN85tX+5MDXuB/43VJ/xfOZ+acyO+w1krUs+
NPX9VlZ9Jnwl8NM/WQ+8g8QY7Qy9q+PAFBLnHMDL8B/HJhvCqGhmZnu9kcrj
E8crl+CT8uz4NIUxCLCHkZHjkNGpsTjikZYqz9d9zlf5rtj+L/4a8R8xPPkM
8iU9JM/EH0+9Llmf96h9L40/orRdxZ7ulHreMn+J729U/ZbEn7wr/JvU+wj7
yd1gTrnj79MkPxB57o4sbYeZw9gObAg+E88zTe0PLYxNkPP4NjVOhG0bpfGm
St+5MPZBTAweAa4BvoENfEbjXFUaE2W9HKu2/6nNtWpzOv4U8XDFsTEYCf4Y
/tk1kW3WpNw2H1s/WXUTc/s3YBvkcFqkXuvnSL4N/0T6AwtjLTdFnttl5rXM
HH8w2N7tFvx+yTfgL2AvidFY+xup/cTMewB4LPjs7MhrbBvd7x18qsSYTQpe
pWsE8QzjpcaNwY/BTE7ReHUy+034SxP0fPsUxk7AKLtjC0v7kfiP46XfuzB2
AmbC3jWsdBzEHtYerErXK9INShxf4sfhz41SXTOwKXyKxJgU7wqfEFyId3Zz
bgwI7OdOtT9F8lWFfSswur+qMQKxwU+6/imMyYHFEUMTd49Mja0TfxPHEOMQ
2xDP4Au0yIyL4BPgC4wujcvgE/RV+wmSL0mND58lebzki1Pjybur/c1gtpn3
262D8d4DE2MCbCRg/qz5ayPj31OqsdMaXXFpzBKbMI7tKtiH5POBN1+be49j
bxsb2dcYVRpHwecAN7kgNTYPfkJcfVFq7J74mrUDhjU28xoCOyKGJHacqvF/
xt/LjA1N0vtfnXpu4JuOjz03t0yNCzJHv1T58qyKjUl/T+41wtogR7o4Na4K
9nBFbKzhjtIYM5jDTWp/WGFsbnrkuQU+CE7HHCN+n1ZxbNQQjCw3vgDWMkTt
/yqMcYNtD5X8o/qOzOybT4w99tapcUDuAXYJhvl7antB/pP8ybTIexZYFpgW
mCn26Ae1uypzLDNB462XfHVmbPNGyX8XxtTB0sEcwCNuqjh3tSX+b+41wtog
p/dnxbkccm2NpO9D7KAxz4qMOQWV75O+eWJ8AqwKzOostWupukpqu4/9B38i
vifeBxshZ028TLx+WGRMejPd//PcvnLtyPjjzIp9/X1j46czKo5195HcrDC+
eCbxXmL/+o7C+emO9JP8b+7cLTlVcm/k4IjJya+RyyCncYb6N02c+yAH0hub
nzg3TI64J/t84lwCOYVekhtL/iy3fV8p+fPY64eYnVidnMk3at9I7ffJ7J8u
Yz7i0xKnR/adwIzZT9lXy9QYG9ga+A7xMfE8WCGY35Ngd/jAKp8cG/9mrwC/
HyD57dTfLdjbObHxXnB88PxzJX9esf/8VmyfHnyNvBq5lx1VB+mAvBG5GvBv
sHww/ZMz5wi/ltwQ+yK5jpr/U3HuklwAeC65MPDLUzLnxMA6wezA6uamzo2Q
I+meOWfYg71L9SdGzoGDl95Rca5ih9j3WqT+i2PfE/92Teb8KfjmL1U8jDnW
Q3JzybtJfljtjuY71/+vpOtLjB073/yt+r8aO+YCv2POMleZ01tJvqiwvwJH
oInGWgnGwF7CfSUvl/wdeCP7SNXfIlfZA5+xMJ7LnD1D462vPg9rhBgX7gS2
kLnJHH1f+umleQHwAfYO5nzA9SCnCTcD+9OpYo7GFbljZmLlPpGx4NtK55iY
H2DB4I+s0xZV+zVN5Wdij0H886PkVtL1x/9R3xUac7X0B6j+79QYOv4BfsJZ
0m0huW7iHBJ4M2uCtcB3BvcEfG2T4PU8KPcaYu0QozD3F6vuy9hrAHxmaGH/
lpietfCF6pbEXhOX5F5jrK2e6r85fXPH7vUlNyC3khs/WV7xu+U7Z//hHQ/O
vSewF/SK/F2AGbB/8J1cmnvNs9aJgQbkzkmSizxB8oOpMTX2F/aZdpK/1v9+
ut4A0ymMx7JGyGHC3ehSeh4zf1cVtlHYpg6RY0PyV+DgxIjEkpeWxq2JKWsy
l3JjC03Vfs/M+Q+pNuwn7TPjRUADiyQvLfyd8V01U93+qdcF62OV5ANTv0fe
5/f4j7n5C6tUt1J1ywvPaebyNpH32l6lcQr23K+Jr0rjMOAvDSUv1bWccmR8
uZP6rpFc6Kon3Ve5sR5ikhNS46UrJG8quWvqdcJ6+StyvM48YD6sicwruDY1
NwB+wbHYL/ZN6f9Q3Ra5n4lnIcbhXr1L40zck/hmX/AK8JzI/Cb4UpcmxtTm
BK+vPYL9N7gAw9Xm+MycgJbEYoXxCnALsIh+hfEMMIlncvuU+JJwil7LHRMQ
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
             "]], Polygon3DBox[CompressedData["
1:eJwt1nmwjmUYBvDX+b5zzndsx07KjKVmMCmVqSklJJGMEqJFpkXTjI42bRNq
0GItEkoIdaqpmUQbaTmSJYM2JS0kkvVEdufod/f64zrvc133dd/P8z3v89zv
aXbb0N4leUmSPAn50KAoSYYUJEl74wLPQmhWmCRH4GiVJOnBNDCbJHPwNbkk
aSP+DG2a2FBaCcwUfzmTJFer0QbfyFeOT4JzaX/hW+nb5XSQ24c/a955ao0T
34j/DPfzbaL9Ja+Ub4KFFvAtoa2I2jw16TX5eqk3Bu+L5/j64LXoVY1nyH9G
7HfaBtp2fCRsMX83/Hc4Q7yMdgN/C74TcFy8p3q3ibXn+RUaGC+J38a3iGch
lFrLClp13tr4Ttgjtwvejb+GvJ60UcZ9aIVyW9L+8Ttq0MppF9GO8pwPQ7Pp
Psd+d+fbDE1oy8zRn685z7GA+DV8g8Tq2ZcDhen+7uPbRR+A94ex4i9k0nfa
Hq+iXoXcybSHxPLknk/rpPZD8r6j/Y3fbH3N5dyE3wxj5e6n1TReDnerMRWv
5P0cL5HbTo0KvgvhgWy6f7GPl+EZvkrjKeZ9WOwtWh/aHXJW0fJ536b1pd1J
W00roO3AbzTP6dbSV14/mMrXld6XbzTPb7Ttwfmq812H94YB+HbYq9a1eGOx
XZ674U3jUrGXPN+QWwqJ9XVSbyfUNccu2Eu7Eu8R74//F9ihXi+8mpTxPJfI
7W4tw/nWxt7QTovzQpvNO4O2Cl8Nn9G+5muqzgn8Jc8SdT7k+QiqeB+zacNp
q/DVsV71fuTdrdZY2GdNe2g/0fbg46Cc9rK8o1BHzmfwoBpz8AxvI/wbGEVr
aI6x9NbW0tCzAZxUa6bnMPGyOG8wiXaEVjvWYc2f8m+jlcCzxvNpXcUaqbeC
bwytk2dHaMQz2LzTxG/hqy/2Cv4bvTHtc2uebq6LaSfjzln/87RhYmt5ltM+
pk2P+6HeJ5AzT228DqyU25rnozjPcdegmP9LfBk04v+CtsC8E4wP0l5T+/Vs
ut9H8CkF6R5Vp70D79M+gIly3pB7CMbz/EubJz4f7uHvaN7yU30y7taj9I20
H2h/4hfL22Qt3+J1rfk8fC48pe4I2j71npczGQaq8aLcq2j9xMfwbabfwLcF
dql3KV6XL1FrFu3x6Dm0lXBY3mTah3KXxx2itVXvIBy2hufkD6FN5DkU5zx6
Hd9C/n/wMfQ7o99H34ZH8D308cYTYh1iu/GH6f1iDbRnodha1kV/VmeHeq3i
vdBW0tabty1+LuTJ/QX+zaR3P3pABT4OFstdwbNYvQO5dK9jf4vwuTASL4/3
FD0MbhUb6HctpVUTGyD3AvXqxLmCzdFraN15j+Pt4L5s2iejXy7FB8q9z7zr
raUhvbc6G2Abfkn2/5+X3Bv7zjcSeQJ60Srl/kzbn0nPaZzXLbk0P3Iu86dD
3LG4L/ahjdrnRG8S25tL33u86wzPc5CLnqvmY1Gfr4o1dYtzcKqPx/fycbFW
eGEujYfv7jirauWbo8K4MvoG/7HYU3p/61pIew8Gyb0VOsQZU29i3MXYd1p9
tabCvXnpN7VQvWK8Vn76fZ3NUwPmGy+Xe1huEU8Z71paW/w03gztVdpo2ve0
H6J34FXpZ4g3gXXRy6I305rhzWEDrVpRqsf4AnlN45+Q+O7DgUz6jYpv1c5c
+k7iPVTQRsT7pc04dV7exz+Ar+P7pOZZ6myDrX7bp/G+/Y7O6gyi1Yg7Suvv
WU/uFfK6wFP4fvos49kwWKylvL/pZxtPMO9d9D9y6d2M+3g53jHOZvRd+rvG
C7JpD10d33draWHOM+FH2vVx/+JbGP/PwO3WN4ivPl9+nKOC9N1v5bu+IP2f
rJN6naEWz3rar7QL8dZxdqOnxTc9+lT8r5KX7skBKOZZdKpfLeMpg8Y8a/yO
hbTeeLH8IjnTaU9n095SGesx/iqb9pn/ACBrVQM=
             "]]},
           Annotation[#, "Charting`Private`Tag$7039#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0stLlFEYwOFjZVlZCm1FEdqFLhQVUVelEOqi8JIKgomQ902IYrmw0GrX
RgVpkWAgukwQoVUigaB4abxfCsV/QrTn0OLM73ln5sz5ZubLftn7vCcphDBr
dV0PIfqFnuqzmyGk6zVP1nEWP+AmzuWnt0J4aC7jFi7gKn7NFfF9PMz13MGv
dMLeAR7gL/yBP/EUj/Mkf9N5++Z4nn/xD17iBK9xj2vcNHfoqnlft8zrfMC/
eYMPOcFHuq1PnFPDO1zOtbzLFVzHe1yvx9Z+vGY9sQ64Xf9Yh/xXjzQ/2bnO
OeYCTvAJF/IO98Y95s54vnnLORvmFV7mn7zIC/ydZ3hav/qeEzwWfxMe5VH+
zH3cz206bl871/BHbuTHPMiVnMfdXBq/u73Z5hx+xOmcyRl8pd2uMS1+rl7q
iN7XC+s939Mze95xavxv9a5W+/xWvsNV3MK34/3BzZzCTTpkOSo06lvLy6FB
31h+rjCoN7TEw7kaQzGfxXvQKvKm3aT/9+k/7/hXpQ==
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{891, 1085, 1086, 2330, 1338, 1087, 1088, 2335, 1346, 1115, 
         1116, 2338, 1354, 1133, 1134, 1362, 2411, 1151, 1152, 1370, 2414, 
         1169, 1170, 1378, 2418, 1187, 1188, 1386, 1205, 1206, 2340, 1394, 
         1223, 1224, 2345, 1402, 1241, 1242, 2348, 1410, 1259, 1260, 1418, 
         2431, 1277, 1278, 1426, 2432, 1295, 1296, 1434, 2436, 1313, 1314, 
         990}], Line3DBox[{892, 1089, 1090, 2331, 1339, 1091, 1092, 2336, 
         1347, 1117, 2368, 1118, 1355, 1135, 2376, 1136, 1363, 1153, 1154, 
         1371, 2415, 1171, 1172, 1379, 2419, 1189, 1190, 1387, 1207, 1208, 
         2341, 1395, 1225, 1226, 2346, 1403, 1243, 1244, 1411, 1261, 2394, 
         1262, 1419, 1279, 1280, 1427, 2433, 1297, 1298, 1435, 2437, 1315, 
         1316, 1604}], 
        Line3DBox[{893, 1093, 1444, 1094, 2332, 1340, 1095, 1449, 2441, 1096, 
         1348, 1119, 1454, 2443, 1120, 1356, 1137, 2377, 1459, 1138, 1364, 
         1155, 2382, 1464, 1156, 1372, 1173, 1469, 1174, 1380, 2420, 1191, 
         1474, 1192, 1388, 1209, 1479, 1210, 2342, 1396, 1227, 1484, 1228, 
         1404, 1245, 1489, 2452, 1246, 1412, 1263, 1494, 1264, 1420, 1281, 
         2397, 1499, 1282, 1428, 1299, 1504, 1300, 1436, 2438, 1317, 1509, 
         1318, 1605}], 
        Line3DBox[{894, 1607, 1608, 1445, 2440, 1097, 1341, 1098, 1450, 2442, 
         1099, 1349, 1121, 1455, 2444, 1122, 1357, 1139, 2378, 1460, 1140, 
         1365, 1157, 2383, 1465, 1158, 1373, 1175, 2387, 1470, 1176, 1381, 
         1193, 1475, 1194, 1389, 1211, 1480, 1212, 1397, 1229, 1485, 2451, 
         1230, 1405, 1247, 1490, 2453, 1248, 1413, 1265, 1495, 1266, 1421, 
         1283, 2398, 1500, 1284, 1429, 1301, 2400, 1505, 1302, 1437, 1319, 
         1510, 1615, 1614, 1606}], 
        Line3DBox[{8, 651, 2160, 23, 658, 2167, 38, 665, 2175, 53, 1638, 672, 
         68, 1652, 679, 83, 1666, 686, 98, 1680, 693, 113, 700, 2189, 128, 
         707, 2196, 143, 714, 2203, 158, 721, 173, 1713, 728, 188, 1727, 735, 
         203, 1741, 741, 218}], 
        Line3DBox[{898, 247, 2018, 484, 248, 2031, 498, 268, 2052, 511, 2053, 
         285, 524, 2066, 302, 537, 2076, 319, 550, 2086, 336, 563, 353, 2097, 
         576, 370, 2110, 589, 387, 2123, 602, 404, 615, 2135, 421, 628, 2145, 
         438, 641, 2155, 455, 994}], 
        Line3DBox[{899, 1105, 1106, 2333, 1343, 1109, 1110, 2337, 1351, 1128, 
         2372, 1129, 1359, 1146, 2380, 1147, 1367, 2412, 1164, 1165, 1375, 
         2416, 1182, 1183, 1383, 2421, 1200, 1201, 1391, 1218, 1219, 2343, 
         1399, 1236, 1237, 2347, 1407, 1254, 1255, 1415, 1272, 2396, 1273, 
         1423, 1290, 1291, 1431, 2434, 1308, 1309, 1439, 2439, 1325, 1326, 
         1331}], Line3DBox[{900, 1107, 1342, 1108, 2334, 901, 1126, 1350, 
         2408, 1127, 909, 1144, 1358, 2410, 1145, 916, 1162, 2384, 1366, 1163,
          923, 1180, 2388, 1374, 1181, 930, 1198, 1382, 1199, 937, 2357, 1216,
          1390, 1217, 944, 1234, 1398, 1235, 2344, 951, 1252, 1406, 1253, 958,
          1270, 1414, 2429, 1271, 965, 1288, 1422, 1289, 972, 1306, 2401, 
         1430, 1307, 979, 1323, 1438, 1324, 986, 2364, 1329, 1442, 1330, 
         1333}], Line3DBox[CompressedData["
1:eJwVzL8rxHEcx/H3OY4rTnHKj8LVofyo8yM/yq9YjFiYJKVYMFKSSUajgZDF
YrFYLBbLLbdYLBZ/A+VHedzw7Pl8fd+fvrmN3eWdRESs4SQZsVIZMVsV8YXN
dMQn3+EbP1jAH7bdfvkekYpIYFEnuQIPOsXVWPJ21U7rGjzqWr7wvY7X7XrO
4Ek38KVbI2/ZTZzFs27mK7cW3rPbuBUvup07sK9zfOBdJxftPHfhWPfwoVs3
l+xe7sOpHuAjt35+tQs8iDM9zEN406N87d0Yn9sTPI53Pck3blPlN/YMT+ND
z/E8bvVI+T/4B6VtJ1w=
         "]], Line3DBox[CompressedData["
1:eJwV0D0ohAEcx/H/5Y6QIkVXJKRcihSdzsJgMLIZDGwGdBvjZbgsijIcUths
NpvNZrMZTV7Py12RwueGb//r83u6np7e5fX5tURELOquLmI0GXGSipiuj5jS
aWPELR/iVV7SJN/iOffGNmCr8F2NszFd8x7+ybY1woZ1xdP8gxWUYYO65O38
wP++80318z5d2PZ4i/2N59XNu3Rua+BltqJO1qFjz5/ZErZXvqQ2nuet7pHt
Ry98Qc1s1dbk7vOqnvmcDnmKJ7XDy3riM3zW/dOvivxBJf5Y+4b61pc2+H1t
93tCWe+Vdf8Bfn4xog==
         "]], 
        Line3DBox[{988, 1074, 1328, 1327, 2360, 981, 1068, 1311, 1310, 974, 
         1062, 1293, 2399, 1292, 967, 1056, 1275, 1274, 960, 1050, 2392, 1257,
          1256, 953, 1044, 1239, 1238, 946, 2339, 1038, 1221, 1220, 939, 1032,
          1203, 1202, 2353, 932, 1026, 1185, 1184, 925, 1020, 1167, 2386, 
         1166, 918, 1014, 1149, 2381, 1148, 911, 1008, 2374, 1131, 1130, 904, 
         1002, 1113, 1112, 889, 2329, 996, 1337, 1080, 1081}], 
        Line3DBox[{989, 1075, 1312, 2361, 982, 1069, 1294, 2358, 975, 1063, 
         1276, 968, 1057, 2393, 1258, 961, 1051, 1240, 954, 2426, 1045, 1222, 
         947, 2422, 1039, 1204, 940, 1033, 1186, 2354, 933, 1027, 1168, 2351, 
         926, 1021, 1150, 2349, 919, 1015, 2375, 1132, 912, 1009, 1114, 905, 
         2406, 1003, 1084, 890, 2402, 997, 1082, 1083}], 
        Line3DBox[{991, 1076, 1616, 1511, 1320, 983, 1070, 1506, 2456, 1303, 
         976, 1064, 1501, 2454, 1285, 969, 1058, 1496, 1267, 962, 1052, 2390, 
         1491, 1249, 955, 1046, 2389, 1486, 1231, 948, 1040, 1481, 1213, 941, 
         1034, 1476, 1195, 934, 1028, 1471, 2449, 1177, 927, 1022, 1466, 2447,
          1159, 920, 1016, 1461, 2445, 1141, 913, 1010, 2369, 1456, 1123, 906,
          1004, 2366, 1451, 1100, 895, 998, 2365, 1446, 1611, 1610, 1609}], 
        Line3DBox[{992, 1077, 1512, 1321, 2362, 984, 1071, 1507, 1304, 977, 
         1065, 1502, 2455, 1286, 970, 1059, 1497, 1268, 963, 1053, 2391, 1492,
          1250, 956, 1047, 1487, 1232, 949, 2423, 1041, 1482, 1214, 942, 1035,
          1477, 1196, 2355, 935, 1029, 1472, 1178, 928, 1023, 1467, 2448, 
         1160, 921, 1017, 1462, 2446, 1142, 914, 1011, 2370, 1457, 1124, 907, 
         1005, 2367, 1452, 1102, 896, 2403, 999, 1447, 1101, 1612}], 
        Line3DBox[{993, 1078, 1322, 2363, 985, 1072, 1305, 2359, 978, 1066, 
         1287, 971, 1060, 2395, 1269, 964, 1054, 1251, 957, 2427, 1048, 1233, 
         950, 2424, 1042, 1215, 943, 1036, 1197, 2356, 936, 1030, 1179, 2352, 
         929, 1024, 1161, 2350, 922, 1018, 2379, 1143, 915, 1012, 2371, 1125, 
         908, 2407, 1006, 1104, 897, 2404, 1000, 1103, 1613}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1617, 2227, 2228, 2157, 2213, 995, 2008, 1806, 2329, 1749, 
         2009, 1807, 2010, 2402, 1750, 1618, 2273, 2330, 2011, 1751, 1619, 
         2275, 2331, 2012, 1752, 2158, 2277, 2332, 2013, 1753, 2159, 2440, 
         1810, 2014, 1754, 2160, 1812, 2015, 2262, 2365, 2161, 1814, 2016, 
         2403, 1755, 2162, 1816, 2017, 2404, 1756, 1620, 1818, 2018, 1757, 
         1621, 2278, 2333, 2020, 1758, 2019, 2279, 2334, 1759, 2021, 2405, 
         2229, 2230, 2163, 2214, 1760, 1820}], 
        Line3DBox[{1622, 2231, 1821, 2164, 2215, 2216, 2457, 2022, 1822, 1002,
          1823, 1808, 2023, 2406, 1761, 1623, 2274, 2335, 2024, 1762, 1624, 
         2276, 2336, 2025, 1763, 2165, 2441, 1809, 2026, 1764, 2166, 2442, 
         1811, 2027, 1765, 2167, 1813, 2028, 2263, 2366, 2168, 1815, 2029, 
         2264, 2367, 2169, 1817, 2030, 2407, 1766, 1625, 1819, 2031, 1767, 
         1626, 2280, 2337, 2033, 1768, 2032, 2408, 1832, 1769, 2034, 2409, 
         2232, 1834, 2170, 2217, 2218, 1835}], 
        Line3DBox[{1627, 2233, 1836, 2171, 2219, 2373, 2324, 2035, 1837, 2265,
          2374, 1838, 1824, 2036, 1009, 1628, 2281, 2338, 2038, 1770, 1629, 
         2368, 1825, 2040, 1771, 2173, 2443, 1826, 2042, 1772, 2174, 2444, 
         1827, 2044, 1773, 2175, 1828, 2046, 2266, 2369, 2176, 1829, 2048, 
         2267, 2370, 2177, 1830, 2050, 2268, 2371, 1630, 1831, 2052, 1774, 
         1631, 2372, 1833, 2055, 1775, 2054, 2410, 1856, 1776, 2057, 1539, 
         1859, 2178, 2220, 2221, 1860}], 
        Line3DBox[{1645, 2235, 1884, 2179, 1883, 2385, 2326, 1644, 1881, 1880,
          2384, 1643, 1858, 2056, 1857, 2380, 1642, 1855, 2053, 1854, 1641, 
         2379, 1853, 2051, 1852, 1640, 2446, 1851, 2049, 1850, 1639, 2445, 
         1849, 2047, 1848, 1638, 1847, 2045, 1846, 2378, 1637, 1845, 2043, 
         1844, 2377, 1636, 1843, 2041, 1842, 2376, 1635, 1841, 2039, 1133, 
         1634, 2375, 1840, 2037, 1839, 1633, 2381, 1864, 1863, 1632, 2325, 
         2459, 1862, 2172, 1861, 2234, 1865}], 
        Line3DBox[{1659, 2239, 1906, 2181, 1905, 2238, 2460, 1658, 1903, 1902,
          2388, 1657, 1882, 2067, 2412, 2285, 1656, 1879, 2066, 1878, 1655, 
         2284, 2350, 2065, 1877, 1654, 2448, 1876, 2064, 1875, 1653, 2447, 
         1874, 2063, 1873, 1652, 1872, 2062, 1871, 2383, 1651, 1870, 2061, 
         1869, 2382, 1650, 1868, 2060, 1153, 1649, 1867, 2059, 2411, 2283, 
         1648, 2282, 2349, 2058, 1866, 1647, 2386, 1888, 1887, 1646, 2413, 
         2237, 1886, 2180, 1885, 2236, 1889}], 
        Line3DBox[{1673, 800, 2183, 799, 2461, 1672, 1919, 1198, 1671, 1904, 
         2077, 2416, 2290, 1670, 1901, 2076, 1900, 1669, 2289, 2352, 2075, 
         1899, 1668, 1178, 2074, 1898, 1667, 2449, 1897, 2073, 1896, 1666, 
         1895, 2072, 1894, 2387, 1665, 1893, 2071, 1173, 1664, 1892, 2070, 
         2415, 2288, 1663, 1891, 2069, 2414, 2287, 1662, 2286, 2351, 2068, 
         1890, 1661, 1184, 1907, 1660, 2417, 797, 2182, 796, 1908}], 
        Line3DBox[{106, 690, 938, 107, 939, 108, 555, 940, 109, 1386, 556, 
         110, 1387, 557, 111, 1388, 558, 112, 1389, 559, 113, 560, 941, 114, 
         561, 942, 115, 562, 943, 116, 563, 117, 1391, 565, 118, 944, 119, 
         1478, 696, 120}], 
        Line3DBox[{1687, 2245, 2246, 2185, 2244, 2243, 2463, 1686, 1928, 2357,
          2302, 1685, 1920, 2087, 2421, 2297, 1684, 1918, 2086, 1917, 1683, 
         2296, 2356, 2085, 1916, 1682, 2295, 2355, 2084, 1915, 1681, 1195, 
         2083, 1914, 1680, 1913, 2082, 1193, 1679, 1912, 2081, 2420, 2294, 
         1678, 1911, 2080, 2419, 2293, 1677, 1910, 2079, 2418, 2292, 1676, 
         2291, 2354, 2078, 1909, 1675, 2298, 2353, 1921, 1674, 2327, 2462, 
         2242, 2184, 2241, 2240, 1922}], 
        Line3DBox[{1688, 2247, 2248, 2186, 2222, 2450, 1777, 2088, 1929, 2339,
          1778, 1930, 1923, 2089, 2422, 1779, 1689, 2299, 2340, 2090, 1780, 
         1690, 2300, 2341, 2091, 1781, 2187, 2301, 2342, 2092, 1782, 2188, 
         1212, 2093, 1783, 2189, 1924, 2094, 1040, 2190, 1925, 2095, 2423, 
         1784, 2191, 1926, 2096, 2424, 1785, 1691, 1927, 2097, 1786, 1692, 
         2303, 2343, 2099, 1787, 2098, 2306, 2344, 1788, 2100, 2425, 2249, 
         2250, 2192, 2223, 1789, 1937}], 
        Line3DBox[{1693, 816, 2193, 760, 2458, 2101, 1938, 1044, 1939, 1931, 
         2102, 2426, 1790, 1694, 2304, 2345, 2103, 1791, 1695, 2305, 2346, 
         2104, 1792, 2194, 1228, 2105, 1793, 2195, 2451, 1932, 2106, 1794, 
         2196, 1933, 2107, 2269, 2389, 2197, 1934, 2108, 1047, 2198, 1935, 
         2109, 2427, 1795, 1696, 1936, 2110, 1796, 1697, 2307, 2347, 2112, 
         1797, 2111, 1253, 1798, 2113, 2428, 819, 2199, 761, 1947}], 
        Line3DBox[{1698, 2251, 1948, 2200, 2224, 1522, 2114, 1949, 2270, 2392,
          1950, 1940, 2115, 1051, 1699, 2308, 2348, 2116, 1799, 1700, 1244, 
         2117, 1800, 2201, 2452, 1941, 2118, 1801, 2202, 2453, 1942, 2119, 
         1802, 2203, 1943, 2120, 2271, 2390, 2204, 1944, 2121, 2272, 2391, 
         2205, 1945, 2122, 1054, 1701, 1946, 2123, 1803, 1702, 1255, 2125, 
         1804, 2124, 2429, 1951, 1805, 2126, 2430, 2252, 1952, 2206, 2225, 
         2226, 1953}], 
        Line3DBox[{411, 409, 1417, 606, 410, 1275, 412, 396, 2393, 1703}], 
        Line3DBox[{425, 424, 1424, 618, 422, 1422, 616, 406, 2396, 1706, 404, 
         1705, 2395, 403, 723, 1497, 402, 722, 1496, 401, 721, 400, 1495, 720,
          399, 1494, 719, 398, 2394, 1704, 397}], 
        Line3DBox[{1720, 2255, 1990, 2208, 1989, 2254, 2464, 1719, 1987, 1986,
          2401, 1718, 1968, 2136, 1290, 1717, 1967, 2135, 1966, 1716, 1287, 
         2134, 1965, 1715, 2455, 1964, 2133, 1963, 1714, 2454, 1962, 2132, 
         1961, 1713, 1960, 2131, 1959, 2398, 1712, 1958, 2130, 1957, 2397, 
         1711, 1956, 2129, 1279, 1710, 1955, 2128, 2431, 2309, 1709, 1276, 
         2127, 1954, 1708, 2399, 1972, 1971, 1707, 1589, 1970, 2207, 1969, 
         2253, 1973}], 
        Line3DBox[{1734, 842, 2210, 841, 2465, 1733, 2003, 1323, 1732, 1988, 
         2146, 2434, 2314, 1731, 1985, 2145, 1984, 1730, 2313, 2359, 2144, 
         1983, 1729, 1304, 2143, 1982, 1728, 2456, 1981, 2142, 1980, 1727, 
         1979, 2141, 1978, 2400, 1726, 1977, 2140, 1299, 1725, 1976, 2139, 
         2433, 2312, 1724, 1975, 2138, 2432, 2311, 1723, 2310, 2358, 2137, 
         1974, 1722, 1310, 1991, 1721, 2435, 839, 2209, 838, 1992}], 
        Line3DBox[{1748, 2260, 2261, 2212, 2259, 1602, 1747, 2007, 2364, 2323,
          1746, 2004, 2156, 2439, 2321, 1745, 2002, 2155, 2001, 1744, 2320, 
         2363, 2154, 2000, 1743, 2319, 2362, 2153, 1999, 1742, 1320, 2152, 
         1998, 1741, 1997, 2151, 1319, 1740, 1996, 2150, 2438, 2318, 1739, 
         1995, 2149, 2437, 2317, 1738, 1994, 2148, 2436, 2316, 1737, 2315, 
         2361, 2147, 1993, 1736, 2322, 2360, 2005, 1735, 2328, 2466, 2258, 
         2211, 2257, 2256, 2006}]}}},
     VertexNormals->CompressedData["
1:eJx0XXdcz9/3L6OsrOzM7B3Z4WZGtozslRCRlU22MhpmJYRsCtnViYwoSUOl
0tKelJHE7/XuPu/r2/v98/n+4/G9j/M593mf59xzzj3d+3q3Wrhq8uIKampq
56uqqVWU/p3xwdg/yekC09f9NXHPiQXM6Fd77T/F+aybf9ZL9WbhrERzif72
Ae7sd7+WvY335rGqu9uv1E9KYm0sJ82MaObF/taqPH6edRZ7f0y9i2nzDPbb
zLG4x69HzLHlopNTX31mrt7nv8T1z2HD2p1p67HHh71y8/ZoMTaetR68yGLV
tTz2e93j928b3mXbZwzKXnz5PYttFqBR6UY++xCiPlQt8hbT3lz5Ch31Z3Wc
mvo+KshnZu4BqfMMPZmZlY5FzTnzfIR83Xdcvh6Xp7bQ/wP6N3D95AI8+sDj
z/FQDPAnAP8Bjp+qY71NsN5Svl4aD366VuH8fOf8kB74DG2lxCcdfLRj9j7X
28x45aFFK76dY3eWHh/dKCOfLag7v9/3ge/Zj5Y9J5q6+DOXk/aBc2zzWM/R
Vu9zdRPZo94Nfyyt/45dHHKo96M9WWxDu5qNo2JT2RIqXH1eK5LZh3bbeS3+
M9PPPVJztEsm01i2L+7ZlWg2svDWFEPLeBYx9lC9kdezmZpuV48hlz4yxzYa
lTf/fs9K9vUzH3Qih+2372fucCCW+TRK/aF31p+Fne0+0Scih7WcevLp0+ex
rLr1r42n1af6qMr7cXn6AP0VoH8f10+9gacq8AzieGgL8K8E/gMcP+ljvb7K
66VZ4Ccf/Lhyfmgz+OwHPu9yPmnEESdj17lX2Pmnx5f/PHJL5jnFrW6Px7Gv
mP/K0yYfs97KPLe3P/N0wdQPLLdz08J56nHsAng2Px9zNcnwE+vY4FNWyo9k
dgQ831tSZOv9IInN+PWitXPfNDYUPGfVGf7yZdsUZj/7TbsLFTLYcfD89WOt
F/MDU1jtR1YHDoRksFvgeaFx6axzhSmsUuspiQGVMlmd2xvuWeya4PNFRf4G
eBb6naDfFjwLPLOAxxA8WwB/V+AXPHfAeguU10uR4Oc++BE8dwWfu5T5pEb1
e1WpvdiR7Zi908lO667Mc0nnqIUXNW8zvwlf+va9HCbz7HZnxO0qycR+Lp39
W9M6SfbnVrMvbBpw6gXTeX8ls8fldHYQPHcZtDi64ZjXrLe+wZhJ3tlsNHje
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
UZTH3NjCJfNig9jgA6U6nqf9mW2Aq+vpfvns6UzH0w51gtnvzlNNoovG+Ah5
J8gbcnm6Cf0m0K/O9VOTZRzPknYcj+gvHZx59nyVkQ9Z0jL7bh2s/GScLj77
xyveX21xWRP5SvFOFPdU15xWv6p4rzVgxKD4BYEp7Bruqa6y//3nWaVMdrKf
vbV7YQpzwHuN1ZAfCHnx/sgV+rdCv3gf2mEWx3PDguMROM+4t32/18SdDVto
PG3Kr2cyTuc9nXqxSx/ZivRq1xX3Xo8B5yzTzYmHD8SyWbr31AefyGFngfPp
sql96HksC2+nlqu4Vzsa7/5mQH6msjydUtEvcNY5z/H4A4/AaXXjcY0DJu60
pfBG7/I477f91tAh/ZDfvZNl74Hkd835DdqaVo4/7De/e9n7ISbusZ/u1vnK
+OZH/Jr9VfwvX35vO8u0k5K8uMfepCC5TP9D6BfvBRKBpwh4BM4vbd7tV/QZ
Oxu82dC+nN3V8z9EKN7PfN55f6RiveK+/ZSOxUfsD8TSbJ8aLop7x1eA027O
zgzF+5ynrdfvUfBZB/eTTVTkLwOn0J8K/eK+vX1bjqcQeATOca4LNyv61DPe
b7g/qdw+curg/Unx/qRz9pWW5f3Tftb3QYp75++mrNNV+Nt94OxV2Oe44p66
QUHXx4p769rAKeRDIf8QOI9BfxfoF+/ECXheAI8hcO7G3zkc6nrcXxSi4yNw
Gj7f56t4VxDlNmfJnalB8vtfndSJQYp3CGNM7dXCBwXLfG6b2LWq4t0Cc/p8
1mFLMKuGe/Wq8leBcxj0f4B+cd+7Qi7HUz2kJPDNx14+gs/xwD+F45f7+UOg
5x3XQ/+Bky6r4DTkOKk2/FPIG0NeFWcQ9Nup8EnAI/9dFf7ZhfuDjPMo7NKB
20V+3+QIO4ZwO9Ij4OwNuw/gdqd6wCns/lZZno4q252E3R2U/VPGaYP9tYnv
LxmnJvw8ifs5nQLOudgXM/i+kN9THMU+8uf7iPYjfs5SkRf7qCr0J0O/2Edf
lPe7jHMn4ucIHq9knKN3tm1cLi7J75iKferPLBdn5Pc1K53+XFXEpeY8LuEd
0zwfVXkRl3QndC3T/wD6RVwqAp6nwCNwbkU+yuH5SMZpgzhsxeMwuQLnMMTt
hTxuy++triPOx/A4L+McAvkFyvK0HfpXQz/iCekgH3nzfCTjPI/8Xo3nUxoK
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
TFr9ZnmZrAvwDNhe7VHelkSadefwi3rjspgF8Aw49aKmuUkcba5hb3iZMpkz
8HxN2ro1wPYtBVzZ8baTpr+MJ723TsPv7WPJZsGjSXdsQ2U8H9612uCnnUxX
LfupX54Tw0YAT91sHefYsGzqu2+tccuAT6wn8Ow6z9LNh2VRymqDAdMOJsr2
StyepH85L522+w3s7KeVxFyAp/OhvZVdA0Pp+yeHdkv+2Mp4LCY8e7XyYgKp
906M9Sq4IuO5PPlLQM83qfTOflT7Rtd9ZH5eNw/IzfLNp7rDvr6v53RD9p+a
+yb06ReVR+fO3o2Ore/DlgJPvoNJxXbfc0jT+lObozkBsr0s592uff1rCC25
eGj2Fv3HJPC8X/roye64eNrZwGylXtQLEnh63QvdLe0jIv354yqkB5LAE3nx
zVS7ebl0wcnwmqdJNPUGnlVWu1KNJ+RSfG7rGk9XRdAS4JldZaBZtyE5dPfE
tpcaHUJJ4NnZZ829Lz1fUkLM3F+tDF7LeCLPV30j7Xc62csw2ynog4xndavj
3XosSiTLCvdnrHeJp2HA01Gr+v5wCedYz++p9bzTaSjwNLQP6sGKU6nFsG5j
pP1Owl7mKfENThWmUsW7vbpI+51cgUe/BR0arXOHEqc1XiPtdxmP3ouYVnod
n9Nyb9Pm0n6n88BTsKvdqPGeoWQQmP9Lf81nmR9fdjvhvut7ylsVtUTa72QI
PG0c3d40cYqgQev7zZH2O5kBz19LI7ci5w/U3XrAZmm/y3h2X6MOr+wus9yf
ruuk/S7jObTj/mlS92IVz82Kl/a7zI/n0N0da97yYGva/Lwo7XcZj5N+n0G1
jV+w7G4vAqT9ToPFfv/TLV9/7xPmsODXC2m/kyXwbLu7NraGxVXWfaaap7Tf
6QTwhNTZryntdza98QWtp0OCZDwvl9qlOBi/Z/v0pqq/vPVRxjPW+czZZY6R
LK7Cko3Sfiexv36HWV7WWJzMHs5bck7a76QHPMMbqxfmbklktlL4qT8ui5YB
j/+pSgfNTOLY2Yb616X9LvuP1423FaX9zoZ5ZlzvrOkv47HrfNzlW/tY1iKq
Z/O7tqGyvb7sOt9Q2u+s0u41da7MiZHxeF4c01ba76xahXW5rQI+yf5jM/im
hbTfWcyXkr/SfpftZaO/6e6lvHTW/ceqBGm/y/Z6lbis3z6/UOa2+YJrkzHu
9DVz8ab38Xlsrkaj/h+OSfXA9co9zbZ70zSbTTrp97NZ4+GPz8y+n8quZ080
227/lCabnj+d3DCdPbeceHXvzXxmvWiMV7Xf92j7FKeZSW996O+KeWOqeEt1
euNdM9ZeeUam+85fMPwUQqeXet+3e5/DKmwIcosxfEW7zz9YP2Dk//DM5XiY
wLMQeB5wPEzgeYa6ZT/6HqJuaQKcdhwnEzhFPVOB1zPsLuqZn+D5y64ynuU4
FoL3sNr4Hp14tyvGdVTGzfCuuTK+UyfeXy/EuCbGxXc/3MBDtHUZD+wA54F1
Rb3xB/VGGq83mC3s2JLbkZ3hdmSdUA+0QT1wGuNqlpx/Lc4/W8D5l/DzOscS
dc5gXuewA/CfIO4/bAX3H/YXdYgO6hArjIs6ahvqqGu8jmIP4J856mX+yWZw
/2SmKnXOMIyryk+FPwv8VYB/JvzHFjiDgXMO/PwM+IwBn8KvDoC31sq8UXP4
yR74yQTuJ/QbdeM91I1DuD+QJfzQH35owv2Q7FF/HkD92Z3Xn1QKvyqCXxlC
jxHqwNGoA8V4Dvz/Evw/l/s/HUV8qM3jg5x/fxa3GHznVzQz13zu6JIdzp53
bGjS43E2m4M4FsXjmOzPf1S+syf886fKdwKFf8Yijp3gcUzUCeyuSr2HeMIm
IB7u5PGQrYSfTEbd6Ia6UYxrhvO46sXjKkMc+3/1p/ATIX8b8n3gJ2LeXZh3
IfwhCvidgf8k7H4GfDYAn2c4n7QedXsv1O1i3Ax8fgSfwl49UD//Qf3MMB6G
/GLD84tsryFfHQyOPgpiFRZk72n9Oo69gL1KlPMgE3WCupqa0ncCxXc21NX8
/zley5vnwa48DzI32MUW9XAR6mERN44in9rzfMqsYZcpqKvzUFevxrgP8nIm
z8tsBOwSq1Kfi/EnKvKiDjymnMfZctgrDXm8G/CLvBkFPm3Bp7DLb5xrxuNc
I8abDeN8bgCfwi4zcb5oj/OFGL+nXJ8wkX89Wjtd0au73c96on7vloUJ8v7K
Qh01kNdR8v5Kx/d53uO7fGJ/5ap8r0+Mf0Ud1ZPXUbK9BuO8sBHnBRHPG6Me
G8zrMXkfGeDcMRPnjrUYv4u6Lp/XdcwIdvmO88sOnF/6YVxVfgDs1UhlXlGX
/gD+HsAv6grBpxb4FHaJwblvMs59YjwDfA4Bn2J/ReL8NRLnLzHeHvXtSl7f
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
x2KGwo7zYV/nlg57du+MollX52u3mZ3DfrmFaB2sHcYO7Q1Y9s04mh4lPhvc
fUIu6+HX2ffPHX/mr/vO2dEmmvbfWmMTb5/LulZ07d9u23yfgyryelyehP45
0F/A9VNf4HkBPMKvGgF/T+CvAb9qi/XWxHqn8vVSPPjRBj/qnB9q+HRJrOtr
N9KOb+lbzv/p5EZJOP0NnUs0mXou/Q3TOLPA3etwHvu1Tc2lcf8YKp1RmJ3S
L4Y1qTMl95JjFtvrsClB2l/0oIvG95Xl9mnhuUIvaT/S7VZmyzdJ+7E59qlH
8NEb871TKa1D/EzpX2ba8MEC44ZhrFHrd4FFK9OoRZ2Z66R/maZl1/VXHvmz
akMaOp45l0aGfdINpH/Z4bjHPmp15vgI+ZbK8nQJ+tOhfwLXT0XA4w08Ij7s
B/5HwN8Q8UFtO1/vX6y3IV8vHQE/J8GPJueH/KcaJEpxjGzjIzZW/18cI7+P
z1q4Or+n973SNz7p4sumWCYdPSv558Xo3EC2PZHee/R2z5oWxJY4vau5T/LP
xeEbPs4fm0bmxvlXHWzDmN3aX3kD/35mZzst84zomkUzoiJt1wVEMl+HhQ1W
3Ypn9pXPMclv6IaehueunVHsO/xT02rbCsnPaIqD9uEi42jhb2xAB6dbkl/S
/g79njjYRLNnY4b0rqsz1UfIm0Ae/kwO0H8T+oV/ngeeucDjxfHQMuC3AP59
HD9dwnrDsd7FfL30APwEgp+pnB/KqdcpRvJL6t7ibbDL//IR/cH4cD5OIm6b
Y14zPi8dBG/uwDmd46QH4E3gN8X4XeC3gJ5F0CPwf4R93bl9SeQpFf+nJvB/
4W9e3N+oKfz/u7IfUm0VP3wIPY3ghxOwT3X5PpXX2wxxoCuPAyTi2FDEjac8
btAcxLGhyvGNpiKetICeHtAj4snkGj1IEbf38bhNR5F3Jru/+FQu75AV8o7d
74ufysV/EvFf6EH8pyOI/6HhzelwV1925/muMCkukYjbGytdezPFNIhlLco1
lOIYibhdDfm0P8+n8nqrIf9W4PmX5mG949nWmJ2Sv/aZn7Bc4b9/sS8uOC/y
KpT827e0r4vC3/thX4R2cY+zl/bD5HO34xT7o2lg/6r9K8/xOf9veRL6+0F/
IfaFFvBoAI8JeNYC/kHArwWet2K9OViviNsB4Oc6+BFxeyvqlkBetwh/oNCl
p776SfEo70NmC3cpPom4rX23QVyj/jHM5u6nq5/7xVBjxG0t1EXTeF1EOvDb
Jaij3vI6ilrCbzN3t6uqiKcDVxn/UcTXaYjbcaWfWyjib4L+8GbfpHisjrjd
rtODNDcpXrsbG6Up4nfLKVvGH1ox0+c/5CkL+g2gfyLi9jLgCQOeutgvtYB/
BvCL/dIA692hvF56Dn5SwI+I2/dQf+7n9afY19Rj05w6o6V8edrnxe6ELr6U
9fxs7DXJP23qbzguxTE2tLjIMWdaEIm4PRT17Ute39IA1MmFqIe383qY2qFO
9tbQ6kJzc1gN3X4B9bZF0bz6HWvlVQ5jW/zVTY5NymXtv6wMNGfRNPFg9Jps
yT+nXYppbOWUy+4Uhti0XhdNLX07zg+ymeEj5Nspy9N96K8F/VO4fhJ4bICn
LepzUee/Bv7eqM93Yb0jsF4Rt7uBH3fwk835oX44R+zl5wjZP8NfpY151DiB
7em8rMOkzW9YzeodY4y7ZLO0ycfv6NxOZckuzTokGISxohCr/aWeqaz7rO5W
P95mshUd7nQPPhrJ0gZvLFjcKIH5vJsyMVE3h2kdjQnUWRjFdixO9zpjH84c
ilfanh+QyxKLm17bbxDNgscPMYhvEcAmryup0Nkxl5mPrNgkZl0066Pn6ZM2
1oFp+iSeMrXNYT3quPXbeDiK2Zx57PAiJpR2njf9ttApi0WaNQu4HB/JKjaf
45/TOY5+BHQyH/5Lqj+qujUu/RjGfJIT9A52/Ux3ejynLfOT2ITXFpYVuwSz
pn9+H1+bl0njkj7NuxcYzrYYP2i+owsxvQ+hFS90y6NHBTemBWreYckL21Ta
kODGNlbu36ujxE+diPRpiyoksonavdkDg0Tmcsshr/+6NNbm1P6QLwtS2I8f
npb39qWwAw86hiyZLp2L1BuOsJySyhwr9jf5sTSVWVmm2QdUjWSHHLveGTUm
jUX3tPLtbZLGrr1dvazWghds9a6jryu4pTFT2+ppJmfSWJ8ep1PaTjvH6txz
atTI9TOrGN/d4dv2z6y75YP01oEf6dkgrzi7usnsonFp42PJSezS9IVPSi1T
qMEJ22/mlePYmQexRgEbYtncPy1t7hll0roZQRHZeaHMxmi69raBoUzv0jPb
ty9y6U8Rtax2LIK1sfky+7pGJmtntLLP0PpJ7OHYQ4fN4j+wfelTz267k81u
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
B0KeJfxo2O0byHck/P8DrIdd1A==
      "],
     VertexTextureCoordinates->CompressedData["
1:eJydnUGPHMd1xydUcog/RAJDsvQlAswpgCXHCJCPECBAAoemjAQ+BoiQa4J4
HScBdNtDLkHg8UKmRBvGSpNYaJuSMJoMmSGnSe70Nps7HGk5Jx/tQFP9f4X/
r6Y1SPbAxn9e9at+r6pevXr1qvjVP731J392YzQanf7uaPTFk3/ff+X1k1de
Pxs7ngZ+dPvm6vbNu6DPA7/3BXl1H+VXgX9r/+8F3m8Cf+0LeNIGfnf/ehd4
T35lE/jhnv828F9+Ufz254HT3w44y3n4OQ0seZ0+Dyx5vfwqsOT195vAkldY
8gpLXmHJKyx5vd1246F2PCxnfrq8U8g7hbxTyDuFvFPIO4W8U8g7hbxTyDuF
vFPIW/bTw+2Y5eRT8gpLXi+3Cix5/f0msOQVlrzCkldY8gpLXh93u/HQODzc
T6eFXE7PT2/fOdp3jvado33naN852neO9p2jfedo3znat7Qzh8fhtGg3yiXM
p+QVlrz+fhNY8gpLXmHJKyx5hSWv283deMiOHrYz06Jfst0ol5fPT+/PK/Tn
FfrzCv15hf68Qn9eoT+v0J/LeeKwHZ0W4479ku1GuYT5lLzCkldY8gpLXmHJ
Kyx5fd7bjYfmwcPzxBTtcLcYd+yXbDfK5e/np4/fBuO3wfhtMH4bjN8G47ec
5w/Pg9PCbtKucNyxX7LdKJcwn5JXWPIKS15hyet+y2485MccnuenxbxAu0m7
wnHHfsl2o1zCfEpeYckrLHndL9uNh/y0w37MtJj3OC/QbtKucNyxX7LdKJcw
n5JXWPIKS17H2Q897KdNi3md8x7nBdpN2hWOO/ZLthvlEuZT8rpfvRsP+dmH
/dBp4bdwXue8x3mBdpN2heOO/ZLtRrmE+ZS8Q+uIw372dMAvo9/CeZ3zHucF
2k3aFY479ku2G+XaFc9U32k86/37Pw0sTZCu35N8H0Z5YdL1XpJ3FuWFRX91
L9Ai6MKiv7GX90HQhUV/cy/vo6AL+/trvL8Oemqfy6ALi/7tPb+nQRd2vVxB
f1dB31f3+vOgv7yX77PAoqu86NJn6j7XUV74cL8t25VPveHtPg262k9PtZew
2kdY7SEs/Tt9HVj6FZY+vR9dBZY+qE/RpQ+Xb1f0a/bLoX7r64tSD3xKH8LS
h7D04fR1YOlDWPoQlj6EpQ99l/QhuvTh8u3GHLcch16f/PNZ6GOoH1APfEof
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
n8T6WPV5PLVCPLcBblG+A78t6JOYv1SfsOpzzDzWBrhF+Q6YeTmTeKr+B73f
pfp/tG//f4v6bvTlua5Vfe/25cU3zZMfBH+Xsxp/a6+PnwV/lXd53g/+3+7L
i/8/7cffL4Nvev8X0F8V/FVe/L9h5TUuquCf/IJPwf9TjOdZ8Fd58ffyXZT3
78/2Xn6I+Kf37+H7s7338l0vz73gn9rjIezfw+Cf9Pkg+N/py7v9ewj9Pwj+
yb4/Cf7ys8Q/vf8Y88eT4O/lu/EP+vLiP+rfE3/5beKf+t86+PuzRfkuyrv+
s732fif9XEL/2V57+a5vj8vgn9o72+fkT3bon9k+q7yvS7N99uekX59dBf9X
+vWg+Kf3r4K/you/l++ivPin9Vm2v1oPin96/3nwV3nx9/JdlBf/ZH+zvdV6
UPzT+58Ff5UXfy/fRXnxT+33Ivi7v6756kXwV3nG8cRf5cU/9e+3gv+/9OsF
t3P6q8ZXe35vo/0z/Zt7/nfC3v/Dnt9p4H8FTvb6p4Ef91jriU/6+oTPzZ4v
xn/Y1yf8V2aPl718w3Epxft8vfL+WOsVny/qvv3fCez2vgE9x2XcX7mN8fx2
4Dd6eZL+N0EXfq+XX/Px9629GNfYFPw0/2g99Ddo//f67xP2PMRq/J09+efR
XkmeDwPf6bHa42ZfXvi3ez7St+KhwprPpN9U/38G9vmvAb0NftLnrb5+6edd
k28b7S39eHn5fVXo49Wev+vrw9DPT/b4E/g7+Xmjf0oft/vywq/ZfLyMeK6w
5mPpI33PR4F9/m5Ab4Of9HOnr1/6+JrJt432kD68/Cb8AenjzZ6/sPZrpZ+X
ejmlD48z8Vxa+fwj8yeWEY92fd0LfaT2maP/cP2Z17viJ/3c6OuVPm6ZfNto
D+nDy2/Cn5E+Hvf8vT8tQj+p/ZehD4+78Zzeorc3y8Bvmj+0LJ7yh6SPJO//
BHb/qQG9DT7Sz6t9/dLHI5NvG+0hfXj5Tfhj3l+WgV3+qm//R6EPj0Py3KLO
J2X8z+bPLWM/QFj+nPTBp/t/Deht8JN+9L3Sh8u3jfaQPrz8JvxJ6UP8fbw9
Cv2k/nyB/rIusPTxbl9e+JH5o8uIkwrLH5Xc6fsvoAfGI3L8Q/ykH32v9OHy
baM9pA8vvwl/WPoQf+8/2d9O4/Ey9OFxX55rVf+5xPi6DH0orurjrA19pP6e
+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
cwf+ffqbFXnsnqfNvORjebnH8lKP5WUey0ss8/K+PA9tMZiH5PrOeVvJvg3n
6XxkcZH/67kNniNfFOcEfP5g3jfznLWvNZTnW+a5Jn45D5Z5nsxrlD0U9vlo
eSSPa4H5alnEtZL9fYH+wXMr+dw9z024f8A8eOZ9M8+5zPNlXivzODVfCLv/
UGM+XsKfKM/ZuHw8F8I8Y+bVMo+UeZP0X1g/z/036I8t+leL/tSi/7ToPy36
Tz4H699/O+i8h0DnVtJ7OS9f2OfLDvNlh/myw3zZYb7s8H3t4DkmYd6T4Pa+
gz3nuV+e4+G5E56zOHbO4Fie/bE882N51mWe8Zfn1TKPtDz3pX1I4aFzXe63
5HsyeK7H11M8p8FzCdvo38K+virz0mU/hZmXzTxk9yeZd7s9kle6wfpteyTv
chPjSeVdX4on5H1I7gvKfgrLfno8gPtkOR4g++Tr/xbr97zvI/vp+0Q5viH7
KfpXe/vFe088nvA5vk/x9wnGK/MgmZfIPEHm7TGPjnltzDNj3hfzsCbFvQfu
H06Kewp4r43nYeZzasKep5jPIQl7Hl8+ZyLseW7nyDvLefPCvCdC8gjzXgfe
y8NziMxb9faqgLmeqI6sL6oj64vqyPqiOrK+qI6sL6oj64sKmPs1XF+U6w3e
m+F5Wfn/jxPmuUWe0zt8Li378zx3xHM2ksf99+yP+/cxL4x5XczLYl4V86KY
18S8JOYVMS+ozHvz72OeGfPEmOfFPC3mWTFPinlOzFPKeeryt5iX59/LPDjm
sTEPjXlkzANjHhfzsHgvDPOqeI9Lea8W8wpdnrbI62NeHvPqmBfHvDbmpbk8
bXHPjcvTFvfS8F4wt2/5Pnxht18d7FUH+9TBHnWwPx3sTQf70hX39Lg96Yp7
dXgOwOefDeafDeafTZFHzrxu5lkz71nfL+zzzQbfx3MDzONnXj3z3Jl3zjxw
5mUzT5p5y/kcBc8t8BwB8/qZZ8+8d+ahMy+cedrMmx46xzJ0b5lw+v7y3i9h
3pvl8Zby3A7vYeM9aapPmPeM8R4w1eflT2N+5Dkh3vvGe9lc3gryVpC3grzE
/H+a+f+nLkBnXmiZN+70Mo+c99jxnjnJ5/Y4xyN4j5rXV+ap85483mPn9bWo
r0V9bZH36u3Xof06tF+H9uvQfh3ar0N7deivG/SvDehb0PM5Mp4D8PVUzmvV
+k9Y94SpPz8GTuvR8t4d4R8a/wr8q9j/Ej7ry3v8Ke+P+ffynp4O+6PS31sh
j8dfhvPohP8+/RDyJPuVx/dfG/9q/Hvf/dV3//b9v/uDhMv8ph/15TXefrXn
80P4r3k8Sh7hL8/Dq6G/GvxqxEuP5dkx7495fA34N+Av/+utaA/Xd24f9WfR
hSW/8F/05dV/d/33ME+beY889+nxgxeYH/N84vcG5HvDhHWvndrf89Ir5M1W
0EOF+Hkb8SmVc368d6wr8rh5rwzzsHmvCvOo0/jN+ZBJ/1vgnN/o9/hUuLdo
Mf5xTxe+0X+38K/7dhX2/e/yXh/eY5P6V85f0/cJ+/5/eQ8Q773hPS++3897
F8pz9Z5/wPp4jw7vjeE5c/JvoI8W+mjxfgN9aH78JPqPsMaX55OU9/jU1n94
L0J57v0Hvf49nyefK5A+hvL2mYcu/Xv5nP/DcxXMs1a+iPrrP9p6qcxP9fyS
evyVHnve+nmMD703svcWwMvAbveEtwU/tz853qb3/Tty/Mrfy3m87n8tgJeB
xd/xdoBfC34t3m/xfdkOup464Ap6y+Pd5atRvsZ31Xi/hjw19JbXqcKqj+dq
fP5oQec5h+3gfON6Luebw3ppgPN6gHr2/lahn+X+4vQK7bwAXgLXA+08Q/0z
1DdD/1ugHfM6WuVdz+U48feX8f7hft9Cnx302eF7eb/nFfRzhXI5juDl8/6b
98s8rg/Tea9G2a7+/eW5ONffUD/Icnt954Ud9PYp+43LQbtY9itvJ+ppiffL
fjjUD6jnw/bjWL/gPShD4zD3I9oJ11dX2A3J4+2b40scF95v8jzieIbvWAAv
0a48B1UXelf7u17P0S7VoJ693VpgzlOcZ5qB/lDeO3d4HuG8wHmP81ieB12/
50fG3XG9+/u8d6cebBd+j37/X7WLYkg=
      "]], {}}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.9, 0.8999999999999094}, {-0.8999999999999774, 
   0.8999999999999774}, {-1.0999999999999621`, 1.0999999999999621`}},
  PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9312604048269424`*^9, 3.931260438047924*^9}, 
   3.9323851606139812`*^9, 3.932431895960949*^9},
 CellLabel->"Out[8]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvQd0XdeaHnZ8yr24AAtAkRQpUiwiCEEgiN4BoncSJAj2DnZREkVKlEh1
UfWpPkpPr41e0Xsz40wSe/zGMxmP49hR7JnEZWy/8dgTl2Qsx3FsT7wSJitl
pa3s/N+/+8G5lyAlvQzX2oe4556z7z57/9/3l/3vfWZOP/Po+cunn7l09vSm
iadPX3300tlrm8avPE2noj8TBOEfBEE0sSmI6W8RBNmHPwyC4if+Nf8ZbVq9
evXg7//+71eePHky+LfO9/+K/0xmf/u3f/uz1157TVy4cAHlZy+++KJ33b+U
11399NNPv7h8+TKu+flTTz01/2u/9mtBiE9BxH/rf/+dc+8X/Gcu/Rv4G20K
uYW3L126FETcPv3vXzl1/PHC38f/Nz/++OMg4e9ifEadqOnWu++++6+d2/+Z
bAJ+Lv2YaHZe1o4acCdO4Wu02HuSfyKrQSvw9Loa3IMeLsiv8RV+BR/wC6gW
D+Y+zx/JS5v+5E/+BHenG7REfv359evXdU34Af1obk3/0PYuLk+3aRl/nUfF
+Fr3LR4Bl6FHgv/Wqe4PZHW4FdfgF3Ed7kXDqqQ8edWF8hw+49F5DP+lU+Xf
zx5/tBDPf5+8HV/hdrdK/cw8zG6Vf3ehOOBefA5Wy3tRvakvkkf9RPzU/41T
398uLh84t0bejmbg55wqYzwtnhwFf/8Lp9a/acXFFVq0DJc+4DdK1ifPoV/M
g7tV/p6VmyxBftBWyaDkXrKNR5W4VUFSVvk3bCuzhHqjvF1jwq0SD4FbmC3c
Kj+3rcTP6iq1ED3kV8kCk5Pn0Ns4xyP5z50q/5oVoiwxr5a342ucxqkgbwUB
D87n/tip8q/IKrWop3ntYb9FbpXeg7tV/mXbyixRf8SOLk7zUJT5LWcW/a+d
Kv+S7PF0C1ky6v36WKwL/lNz5/5XTn2/JZtYTNQb5O14WkOBBfvUmoG8Kv+i
laC0nKOepowqy30R4HP/zKnyL1gJypLzNnm76TD8U1W6jBv8U6fKPy+rxPVZ
EtRhq2Thc6p0qder8j+wEpQl593ydgNk/KuQ5zz+/SdOlb9WXILwM73ydt29
/EkqC59//7FT5Z/NliDuuP7i9Xnk69b3y9lN1Pp8UN7uasFgqX1qw7//pVPl
T7IlCD+Nxxm2T5iqcgH//pFT649krcW0/hi+DfFpuazfY123oh/Y5mVR5IS8
3VOKqkqPdf+RU+X3ZZXFDIBpebunFFWVHvm4VX7XjkuWgO/KqLJSnvNY9x86
VX4iqyxmDeyRt+MXjF6ssucM67oW6cfZ0qMpcq/tt3SV3oO7Vd7iP7Otgf3y
Xk8jrpDnPMr9B059HxSXG5w7mFHlff5TMwb/wKnyPStBWabAYXm7pxHvs09t
yMet8htWgrKk+5j/kDwOK/2fYdb9uVPlW7aVWXJ+wpcWrnKVPOex7t93qnzd
tjKLIuf9KhkmqkqPdd0qb1oJypLzM/J2Tymu9oeMz/09p8qXZZXFTIHztkWm
3+6X5zzW/btOlS/aVqblHD9/sXiVHvG6VT7Pf2abAo9ZaTEyvcY+tWHd33fq
k0xVVM6VnespWdnEBaz7d5xan7FClGUNXJG1okFGz66xQ2Ye3K3yKStEWaL+
tLzdOIT4t1ae8/j3bztVymYUtQaesVUavbjWdrGhIbfKJ6wQ6Z91Rf2GvB23
miqVC+Dx799yqnysuBDhZ6RA+HpxnTzn8e/fdKp8NFuIeIRfsvXx0zn1eU/t
1nc+u4laiF6Rt3u6cb085/Hvf+FUeTZbgrQ1cFPejl8zVT7oPzWj8T93qpyX
VRYzBd6wVRrd+KB9cENDbpUnbSuzyPIt2yKjyDbIcx7//p5TpeTsokbBO/J2
TzdutP1r+Pd3nSqP2OHJknOpl3wfVFXp8a9bpdR/RY2CD22VRj1u8s8xE/0N
p8r9tpVZRsEtv9/4ITfLc/hV8+B/3alyjv/MNgq+5dfHGNnsPzUTiVvfnuIS
hHPflrd7uvEhv3P5qf8zp8oZK0FZRsF3/SqZwmSVC/j3c6fWaStEWaL+S7JW
Tz1usefMs7tVTtqGZgnRDzKqVA65x7//qVPlmG1lll3wYzsaBimqSs1EjH23
yhErRFmt/Im93bDOVr+LWTj+mlPloKyymF3wq/J2T0OqKj3+/atOlf22lVl2
wb9nqzTqcav/4EzBbpV9/Ge2XSBdVN8HrZHnPP79T5z6pN9aVNT/nLzd040P
+0/NaPwrTpWdVoKyjIJfL16lx79ulW1WgrLk/Dfk7Z4bWivPefz7HztVtpSW
oN+Ut3vqVoV0PP79y06VjVaCsoyC37a3G12mqvT4161ye3EJwj2/k1FlnTzn
8e/vOFVuy5YglgzZ575u3GZ7wjz1X3Lqq81uopagv2qlJV2lx79ulTXZEqSN
AkkEvm6st09t+Pe3nSol7RU1Cv66f7tT5QL+/Y+cWjfbhmbZBb/rD0VgR9Tn
X7dKaTcUtQuk7eSHaBtsfxj+/S2nyvV2hLJE/W/5VfIAqyo9/nWrlPZxUbtA
eh6+QyrR4fPvbzpV3p8tR9ou+Hv+7Vxlk5Utw79/0alSepfZdsEf2HEwGrfJ
f2omX7e+FcWFCOf+0K+SZbDZ7wlG2W84VVZaCcqyC2TMx9eNLf5T83j9zKly
qZWgLFH/x8Wr9PjXrbLCtjJLgmQ019eNLb5U8c/8BafKMtvKLKPgj22VRje2
ynMe//66U2XOSlBWK+Wsha8eW21nmAd3q5QzP0WNAjlP5esyFa/2+PfPO1X+
GdvKLKPgX2VU2S7PeRQsNXPw//Ix2x74N/I2Ty22+w/M16mq/m/ZsGLS/Se2
Eaa2DvushnX/Q1nb/2lFRjdM9zB+/N/hWw7ISnNhAc1KYyb4362YZAnz/2hF
wihAWaHPsKq2/7W0hPxP8k5P/XXJcx65/vuytv/ZCkeWvv9fitfm8aqq7XZx
ucAv/G/yTs/HVJMOHqWqefn/IVsuGJ7/h30kU1WPrd5QqbRPg/8+u2FaLv4v
KwNGI/X4j8lEqmr7twvlwtXt/09GbWoixONQOdGhZuyLqnUh7/RUW5//pHxO
GvdqcryoOufaQr8x3FF99nENi6gq/4Wsspg65yoTfxi5yh1+y5k+f0VW+c/t
eGQJMVeZ96tkqVXzPx59yvkdNcNXVJ1zlWqCzNNuqkqPPlWV/zRbarQ65yqd
2SfzkAO+APDP/FRWKTVXtjrn+pZn1Dcoz3nc+RNZ3z8qLjzccfjWmY8wsjfo
PzUTjKryD60EZalzrlJF5j1tOWif2hDpZ7LKn1sJKiriKprsBVpllQt4VXrb
KiJeVKM7Rp4fax2yUmCeXVX5d2xDszS6Y4r62k3N+HkMK6fzVHy0tKirQJsX
ax22o2ZoVlUpw3o5fJVFjo5Z76s6GXHwufaHssrfta3M0ujW/2B9J6MhPtPK
qIqKQWUrc8cx8tXdqP+szLWqPukolRZw5Sd7EVbVRI9wpVCpWERRtc5V1tkq
jeIb95+aYSjDU8orLy3g2+3tRmWN2wc35KOq/J1FyI3yRzwtqGZ3PdaVs7fK
Ryuq7J2Ygu9FTtohM/zzPVnlbxaXG9PKlDXpVumxrqryN7IliEfQCc74GnHK
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
EfTBRDFs+xcPFY+vv8TmGLa+G1XxMM0QWzYVhwuOUntFBlhYba2JUVuKXoHa
qjabxPvtPEOEXi2TGiS9FgX0gpl1w4KMWDKpHmNU4obqTbbpldL+lo0qJbaK
ouOHcSeCW2xm6ZQVwp7w3cEua8R6otCyDoJIizl1gW81pbFezBvd39hasjyY
0j5WzOD0oCyYOy7Kw+wVMb9xJAfP/6/AViouuuAEQ4XNjChHoiudFF2Ixhby
kAvgkonzIuNhnVH0+groFaOs7khSVlawSiurZHbFOevRNFUqKqdALyfAlwyZ
08qAYA7rKpVIeNpOJHQKMnatvCSQaf/qlR1mQwgAaa55NtcchpkLhCEMpiD3
1JZedOuNdqLcm+2ZEvGtdryX3gTvsOjDNPnwQPok1+zeCObRz/V1pt7r9BW9
FiwYZmWMwTLAD0ti0JNu2StbjX7jAD2I98zmSot4aXGuZXiUeOJZ8A7SrZg5
h77mC8YbK7FFm73BfCxng1mssRcgz/bGEpCnx8fcHkHeyTl9I4MTQnP2JtnI
S+tkRFShSeqlQtT7/PPPOYoVRztE3RHXotss1oJSIu8h6V/M7Lrg8MDpaOEZ
1StcTbQjWopxtl+fH3CYhcdz7xqG/NMBlzhaSnr1XgzfiuLmS1mni3aCOOl+
lRcUzYoESB05viBdKOBg0GvI3dRaYQGuOG7rmBN0iHjziPqsLmPry2wY48BG
371lzOvdouN25s3TN6YIpzWaJlzUmX9WO/NemGwyy+DbZDNcc4E132wgXcAs
pRlWTpf2cvrIN9vLxYUtssT92KY+fIdPGCsvBctc8VY7fdBbu/DF0Ju4TzGO
rj4DzhNf2b2OqWYY5yt5Z6ENMM3hmocr6gJlrO60icYxVjDtuiXDzG4UKo52
oy6b/imNNHHDEunpP7zmEuWaeTbPnE5EXA9bxOU6/TE0w5iY2Qk0WzWFwxGx
Q/kUylr5WhxKc9F/ml3aHjsR3r3+ffO6taadWYs1Qpmj25nV5pNvXWqYJjef
dKUd54KRNWK6McFod0gAbB5ZGXj9McF4L9BuJtKViRv1GZyjTGhbPUYOClrc
MOjfH25l+eAWHe/pJCck0kl8kzvPdBzezDldTnjU1I2WMWblIhzdLXi2OUCc
2XUuV86+Z8e4HLb1HU9m4nPzW3D4yzTkooDzOAif1p5+lG8Sb57BW1jBYQOa
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
Hxwb7JX1fMhZtf1TkW0yws7V1khJPaFNGYTYKktG+lFGuuEssxtmo5SGpYVI
w8isEAnGBY0jxexxdZFdsmfvkJ2cUf7boQo7GeWvwLgnFowl+cAoDk2PTons
DhvLDBt1EObUnGpxYFZfsXfmALFjxlCxYdpIsXxKnZg3UfMvAxaK9dNrRduM
kaJj9lBxdsFl3NKqvcFQ+z2O3EasL0CjCfWtKBVnFR6tSoerB9IqLEIYuhx3
Sclm1rVW5ddUfbtW5MhwkcPJabew4SjHYafEc1szPAjEDAPhrAu20SmzjdZR
vld4O/3KjnLeSXOtl14vrJ00L0T49Cb61Z3E3rZe4ptrB4mbVg4T+xbUiW1z
6kXTFHUyfBGrQtx1YuFocTM95L71g8Rz23rRU1TRd/CO1ooai9hDMwU78A4w
8sYVI8R395bTb46uFeK9vURUTUv6JrD/fkJx8vU9I/Q+fHcmBWCmYgjpApDs
KjqX0rVMy0devLMOdtGBkah04/NbKvlXfifh8KUtpbyDhmaEe3j3in4aiaaS
Ao1o4dBJ1o3V+XEYcQxvWVzNO+Z9s4ZzY8fBWUN1QGZWgTgsD3bFqATbOFwS
PIWJDSocVn4w1hRP7KBMOmavXKVwiPlKeh4c9s3N3KemcNjJ0JI8qpHJ6AKM
0X603LRMsTzjRJ1zomcogYvzxtWCi24BAcE8vbOFHW5iJuZ2i4VlOTPfjs6s
Fh0z+opdMwaItulDxdqpI8XSyXVirsU7Yh/dT98jacFdM4eKk/Muo33wZflD
zqlQ4feW0ES3klgWoup7qkna2EESJhWnER1T8g1EogKhZ4PQ0S0cORTkkkgn
eWaPNWJadmrkUjCvl2gRkON96Lko5y2xtgxRzIXcK+J6L4D2yKb+4i7a/l6/
bITYTsAj8EnfkP721hDHDhAbv7J8hPj62iHEzD703D2AMPGdvfRUABzhbqbE
HTGOwEvXtHgfuHt/Hz3kfTwO7ykS79GHfddaz+yZzvx7Y88I6Uhqpu7JgISS
h1pAvrMrEJC87U6BjJ4hIzuO9IsDGb9lk9GqsWzDUcMaiyunNYirFo9Q22k0
7VagsBJSiqYdJEVCsURvpcM1FZftxJqwSoxBYlJR+fqFvRmJKCrf3FKu1eH0
AnGoTi3AffyYXByGYoXyAalH147KDcoUWXtnfSRLhToAAY/THiNqyKglKx46
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
NJBU6vBjTSSEpty0tlYkwJ5xXO1vn1TMImFSczG3X61YACIBzaPvzkzI4m8M
tZnF3+ti9Yt/wjOLUAzgZ+hXe5Z3nZXZrBShBEZXyhBaBQsjqkvVQe2YONOR
FadZ8FkG5Ef5Q0EZ4JtDzVMlzqnMIT7bOTeuVUnJAN0bwmKP69I+fLXPzJ6d
xfjza2TPaa6Y0LNGzO/TSSwfWBxKFK7DaTYo9fD9RQqAcKJgkwLI8SabI8Jm
i22h0jhbiCr9TVOahH2h6cErqjKv9G6w0vPVrznBplXxnUVepbfwVH48mT1N
pedCny8D5gIKmO+fy8X+B5eWm4U+s00/uUDwHKrzK3lEzZtPWOWdMWS4QAnp
AhX5LtAa1at6Spkyzi/7xR7jA68dya/1FhV71ZnKu32cSzBCArnRh9q6vQS3
9/AAhRy37/AnqNzwIaF0i51Qze++qAaqObxUII7tLLHFsV3wlGNU0nfCR3kX
t/hc17cunS/Wzpti7OzvmlNDO/7Xt6i6/tY2/D6gumNxV8vGIm9jjXdk2Mx7
ewyaN+EqNKs6mUCWa2zqvaqeD1W9QNwN1Xw5VHM9GjCtn+Zc0UPOj1bRm6Wq
6DaWdKuTUdD/89IiKuijoKA/EizoF8cnAo9FJgJczO+ZxtHx/nFtxP1yO3/D
ON4t7h1djo5PYbOnrMFctXG7rix/VdDlALMaTaCwgBtQXc/dkY2nSc/1t6Oi
4vxQVKz27qpxaERNBZbxTKu4jUWcJhHcdHmwpRXuem+vbnl5cI+4PDjXPP0z
ywEE379ZJiv3gl5tsGIra2b0ebVieq9KsaRvy5Cxn6bPNPVWveBU4uDAHHJz
072JcvWDR1Lo1btt+ubSOOMmWL/VLj3jnXqOX8DleJkq4o9dWi6njfPNY4WM
Cl6oW/mZZb9a9XaD1dsOGPh5uoHvHzth1m0rVeG2qRvICRv4MYWbHBrLkclu
CS6KdEvUxvzoDmNjTvUcXv02lPJ3/EW1HV797q4SrOZizbju4p65Nfn4QrF4
bxdW//d2wZ92FmOht6jcW0VY77Hc07ph2UXikWsm0J9/u7qd+OrCKnHpsAav
7n91QZWq+xQUvA1f8lukKaD+u1jyOTambf2btJVHiydX/NMPA6LKv1b9W5jV
/zoOh++e3VUsHNxgOP8RpV/86ZrmWP3jaj/8PUD1h3/7eu3/dbD2dzRq/9PB
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
A9eNrxNXjeou5g9pEBf0ZYlpNRNT+/cQS0fCmy/oLm6ZXSvuX1Ajvn1ptXh8
WVfxn8u7iN+t6yj+urm9+N/tbcXR3a3E+3sreDqDQmVMgGWz0udyYa/sl4fU
rpj3x4fLk1hvoQzeDA9QbuH9qNjewkvAwobaJ1d2bYUv2PAA75eq6MIX8ci6
KeT5Y93lT3aISu0hLxKg7il2aPx6a7lyZL5ElVyqtjTzQaYMFlvYc5+AGjtc
/P5aPrf9FaivH3utTelqbKFXY/+xoVQ8OLeKaizuvX+/qlWqGktW/9/Xot1v
broN12VlFq7L5aldFzwfZcWwGnJcdo7tbDguatP94DTPcWl88MJqteE2LuHS
S6yNJgwHwAk8G1IdUaIMllAb6xB5AiP+X22zM2hjDR1EcoEstqPrWtvePtsh
y6VATO1m3rA4pTZf9O9Ry+/Q0DFVyZXxb7Nsdt3hm0iist+S9KZ8dMmNCn9l
ze0dGq0Y07NezO5b9a8z5U8r/M28u0iruRbf2JuMq7lccsu88DdVYxGW22eX
+yUXD43/9uL24msLOomvzO0s9kypFteOqRPXjq0TFw1qgF9cPr0Zy+qVI+vF
ePi3PR/+fGBGjTg4o8YWDy6oBGh+++LO4geXdRKPwXryyg60u352ZTvYBFeI
P6yrwGOvoBq+tKkcN8Ll8Nv19y3l4hW5/rKxpfgrrk0txd9gvYRrc0t4Zivx
d1xbWsHzWsGP4dWtrXAocGMbeG4beG4b3F1vboOx8mbYrG1pI36ztqN4Aer4
T6CePw0L6/sDC2vE3ml18Nz1E7rD+08dwMIbvzNXHhYyDV53xagGsXFid3je
7XNrbfG9pdXwhmdWdRHPrz1L/H0bbuXf3NUWt6Q3toS6XI7LctQjbLa/4AUf
FB5dLP62xMAtaLvcQrbLrVz/n1vbxWqJLzkmBdCYx7J/Uxl96DLxxIYJWPot
W2tNguqfwW4bKKxX/0/1DbctTu6Xw3/kyNDCHiTcdI9AIIjfr2YcvL+zzE+B
s0TC0c1A8ZVtxTWj6wkL34ffk79fVxKNBD39XRPwYbzktxkjYUWUD9M02odZ
Gu3D4MHy142sErvHdSYk4Kb7iObBfMPrbCUP5shXZ7aNGt0zN9zGqMN85gLa
9uxy8/EhkVwYLg9DxL336C5B+8Xfdtsp7nKHv9oAGvw9OKOhiYEGXBfUV5AJ
0/ds+BuqL9XRYLEV39rYjae4jJd35Oek3ZF7aFgaNuQtduTdIBtshAP8QMJ5
bbgvKODI28gG+IhoyE/vUyOm961BMkSOeI+LMGQmRBgypwOGyLQ28qiqDMFQ
FmvGBNuCosjwo8vKxcML2osH5nUSN8+sFCtH14lZAxvgd4lvv1w6vF5smdhN
7J1aLW66sErcdVGl+BZsvHED/sQVbcUvVlaI36wuNbJZ3HzfMacqyn3Xzz00
+39Q+vNQ3Ta01V/bzrPaNK+9g08I+edOnlcAiXx0F47RldJ6W04qvLOn1G8s
5UYf7vNxzT4fTl+hmB6/oYybSQvQdGHLBdYHeyvEB/sqxD92tBWvwfqfDR3F
r9acJX4GLPjuZdVIBnHH3Fqxf0ad2ETAmDawhyuPDcXivnlSd+rtefSKavHs
6i7ilR0dxHv7W4tPDrQk9z2BksAieYBswIXQuIUcGgDEl9pCYOC/ZgRGOwUM
jRXEnjLxzOaxYuey+ZZm0zhSLpSSWrAzpAZKhhIKoUv0BlYHgQEPGN2e3Ity
4Zcr+Yg4ZAXaM1kzYovPCOwQekBKB2TF70A6GIy4LsiI5syI4Lhd0JdZHvZl
4icgTMmA1/peN6pafPei5mJKnwaxAySD4sO3JB/URYrAh+cfnFZqRc3WmYAw
RhQkIHAqT/X0xAoH9OZxjSI4nIpwSHjj2IoQY+paBx0a+IzDGrg5FcNZDGpD
SLCRCA7phJJYnRBlz6RJZ62UTaL5IZ2QMpkdF0pmN43IM0bcEAaTetfG9Iie
6Wi2aXbR7LwIa35hCms+ZvI6igQPL2gDOr29ODC9i9g6oVpcPbJOzBzQwAWs
EIu/2HhBN7F7crW4dVYlSYMfLGkb2xD6O/NkQu4Hba4b8cQDUAvhJFY1g/oH
4NpEgoR/7i0fRiinDQAGDtIAG3Z2Eg9ovYnTBUd34RHlb+1mHry9x+fBu9cT
D3DQgGDwPjfj0PpwP/XjYLX82HficZMvJ6dV3HrygDc5jcumfpzm7AUd4sXl
thxNINII7+1rLY7ubite3NxJPAcYQBxg/82y0Q0O/bBzmBaTJS2WAS3WdBFv
7m0rPjnU0iLJ4CIEgli4rVycuKkl/SN9YVNn2KGJ28oTyAb4OgWZTGVqKWvp
19tGijVLF8WlupFuUiwoaJAc+39KcJHLVOJ4soIoASQETIgfLa0k3+0kQOLE
niAoMNb5cCeOqBig2EaggLcBJuDj6KDAIYb/uaaVaJzaTUwEWNw2s1q8vA4T
ZMCEVW2CIqW31CzsLcUEuspbihpeWDuqm1g5vEY8Ni+Pbtgddn4P8Y0Lm/uQ
0MJcFBI3XVCsIKFmCGguTkJikPkmGi+QjZ90AC555lXYk4mIyEVEeIDo072G
XXtQElJBxAuI4EXryIcc47iOid3yFSOo5ZMQYRMicsXk2nzRtwdPBI7t3i6I
CZ8SVqRysFJ28zQN8SJmpsA86LaJGeVKVqwcKHlhekoW+/huMMe1kRbw01E2
/pYReBgUHnTbT8zuVyXG9qwXB2Y1ibbxT4cV/84YN8CKI4vKxT2z24nbL+wo
9k/pIjaOrxbLRtSxAChHNIh147qJfVO7iptAIHz34rbiictbGDc+ZTI4EMmJ
HIMTqBfWX1AnDs6s0Y58SniceEVxQh6SLiUDQeL1bf68szrjieed36BOTqkf
mBfMDDJ0EBpHARgIjrf2+OB453oCBzzn2F7s6AR0QEEvFe8jOPbjKgN4QAX9
6AYPHo20MMK90Tt2g5IDgsZBXjTuzMTAdh2MZg+X22QjuWQjCX9Rmw58gScO
thRHrweSbAGSACIQFYgNwIdloGQKoGRBrXhiVVfxm42dxZv7ACU3tcQPfBsK
jvcPsPv86p4O2PRze3kZosNFdCA5MNoFXIhfbx9JJ0fhn1FiuAYwSqOAYccB
g9pFsUu0xGFMfIpi4lOMez8lTHznkipx+YgGQkRqTDSLwoTnNwUx8eamQvHk
0k5Y3Pr2sGrFT69oT1oiqCc8LRH0m1aZflNcxvurmIxXHd2xDhCBZ94+Nj+P
tASeF7VjTOdQ9KCuyQUt0eGZZ3MkJYzhgmqDEsb97LLVx6PE0C4FRpePFj3g
XMDooIqIGj7TtIPJBlx0qmB9O2IDm0u5nrk0vp47txARaCpJPDgmGxx1f21D
3KBZ3EkZFZnaSdlHDbqEcAMSIo+tpF5Gb+eC/pVA/Yb/98FutgdkaET4yuw2
4uYZHcW2CV3F/MH1XPmbIATEpguqxY3Tuoi7Z3cU31jYRjy+pDwQKlCGC38x
zy3HzVoGOa7F55q7mRIBp8g2ABUOzayxgmNkGhGCnf1MAzqHyaFzmJJ+7ef6
j9UfZYODAHCw+kNRfPt6rv3vQL1/F9YxXPtk7d+PqwxrP1QkGkKG6i8+buR1
HKs+l3463AIlw8mDtLBPPjAXVs7F/3OKD1AyYHzwJbVpwmMSK38Sd/Pw7wo9
oBOHAQFQzl/c1kk8CeUdyzyW++mDengEGNRDNM6uEw9fViOeuKareG5dF6/a
t8Vqn8BqTxkEFvpbPZEg/rBrCDUNOmYE4Zf8RHr3iAYDSlgUNOJPX1V7G6s9
fuv7SsRDC2rEvml1qA1srPbY6BRb7/tkVe+x1//V9aUkDfC73gK/Mn+6ttyr
95He0bW6d9RM/DEmbv5NirhZ9462jasWCwbWi8fn54sfaJLgoRklRq7wNX+O
eWKnfUmt1mNrZ0StV039dCQ51/qm3pXl2rFJpAZUljCotqNuF52OGpD9PKrq
y4qf8Cq+8ozg/zT+hXpBT5lNUVCUYZyQSdpcEacKMjzLItZGUnkCJ82u0d3j
XX/RgxiwdBBbocpB+r8eMn91bhko53Zi18QuYsmwOrmFrBJT+zWI9fArvA9U
wL1z2omH5rUxM4SUx1YUckPP8gwaelRH/2opD0wQBA6sKDbOG7fFnqndolOE
EpIENs0Qu0oUqP59db24Omn8TTpl/E26WRzDhKPMAkSBjWLAJh64pAeQCXLZ
CAZACaLh3X0SDftxlSEabPEBYQHgID5q5PUxEoHZcIA6Ow96WKClRrmwKCMW
sH/zc7VU276MmGXfJrxO4SGJ5TyJhR11ws0tsdqLFzZ3Fk8CARpn14vNUwkS
Ft9rlmBKzKkXT17bVbx6fQdx4pZWoPLEHeU5iAgXP5KtIUKiQZy8qSMphEBK
bctx5i8PlyIncFmpYSEHyJAVsPB1yInPFCeaEB9un91NfLq3mDwkEgVBYbBL
B0XvCFAUpgTFPzfCb+TyNmLxkAbykR5ZfJYZRAMkQt5RTAhtekdNQ95RUBRs
l5D4IUBCiYKL+teL7SAKdEiocOErU3Ia/7g0x4oa/TIpoZr/KWDQzz86r0d3
I1QYoR2kR4TIRA7E3lIxidqPaPQLq+DI7h390S946oS6Us8sGtO9HeMhEcQD
NiJp8QK3IbniqkFJ/SQKnhFuksmMcOCsowTzIZu42Y1u/uwVbv6PSRhU8/9V
Q/iCi+2jm8c6Rv8WNsTkzDdNaye2T+giLgGZOqxnD1UphvfqIVaM7Cb2TOoi
7pvTRjvZqEvsyRNxePiZwkMG/Z7PBwe+MsODHANuTvECQEJcD+vl0P16JWrI
S88WvBvAHbrdyNGPa7U4W3A5b97tLQfZYKNYYCg09aCg1rH9uMoIDu8BEd6H
9QEuoMKHmC98RNECAEIcP8DrE2zrP4EPJw9h0QcsiE8PExSwVB7GzlKiATUb
eTSAx4RJA1tW89tbwKb+jhaALCj0BAb8TXx4aTcFBvW3jS/etahWPHddpTja
2I64QO9ajHBIenCAV760tz8x4cNDNZQ4xLQuIRNgWbGmEacMrs4Idos+Q7cI
uGAjF3CkYX8JSMDuJB8+3Qd7AGADlLFoMhRpZOiVORk2+WR45boScf+crvST
+gr8/29rSsJ20WomgyEfdLsoInqOtYuACodhzzWtbwNdAvs4UAHlw+GJ7Uk+
PDi9xIucv+7d3pdzz68uSUZNhBlQcNE9wr8tTJ7xzxw6OzQGgN2qPheSoq/s
/MdR4FNWDrmRygEHgvFeJKCDAsOY+naeTTS5rpDB4OiHFFl2QDm0zUg5zIs+
CS/b6WClHCwOoN3o2TA3K/MoPBi8ehgfFL5ldEnqo4kCUcLdsJE/lYng+xkO
NpLBRizAv32EwoGp7cTOCWeJK4ZjtNYgRUGJuGpEN7FpfFcSDA/PK4+Pm1MR
4Qp9AiAvkwkweC4wAZ776ygirI65DS9CMECdUHkzAmHThDodCFYwcFaHeHtn
pVpO4GYieHSQBfAGL22mm1XfJsGgwgO5HKQCnhkhxcIxuh/iGCXOigvv0dzX
+3T4A7HhRl4foWj4mBKE4weJDbROABNO4sLc4FPyj7SZL8uWhPj8ZibEF9Rr
JNtPb+GOIpkVS1ZgcW+RxFoPNfzOFvBDf3GnbO65tRW+hv6PUHhufaViR7Sg
2NsBn4ue1Z34Ee8sz0V6IIfoE95WLl67oZeCB1pRZQSQgPGEHVI+QJS40IQF
6Qq8QbbE1jmBbbw/vqIShYTPiUEmJ3YbnEBK+K1K2yM4IRnx1uYgJwrEG7B+
eTWriJWj6sUfryk31MNLEclzpM10teJE0xRTDbjf60TH4/0IGEHqARjxnTm+
evjWrNxgnPD8I3OS2pyYNwxmMCKJegJ1BUYJihNoNfHlq01osqF/7VmeyzS0
qsKLEiL1Q+qmpPRKItfjxfDuZyEuxLDunsOEMw1OFirCBIWMGazgJXgLY2CR
JnyOs5n4GAk36DJx06obbTLVBE0mgoVSEdijtH5EC74qb0Qr6lZN6TClSxiy
uB3i1ukVYs/EDmLN6K5i4eBaZkM/+MWvFdeMqgaFcJb4yuyK7FuTYlhBCuJK
qSAyOC7il6v07Dn1cRF/MA4SSnFMBCiHmy6sIWDIiIFZkYxihX8zqmvcjCqP
QEWxgIrhHTojSGbLMl9+l5qSVM4gF8EBESFlw/sBRHxwI68PEREfYT/Sx5Qv
ECeADbhOIB9OUq786U3aTPDNPJ5mY8epTWBwvVZTuRJSQtzWwmdDgtjgEAPw
d1DchaoCHxPixG2txIu7OoknV3cNGU748qPLq8VzG0BY3NgOn4ve0l0oTCQk
8OOzYoGP//bBHgSItw/gx5D5dJkToTNckhcOG0+yz5WmI+h4CttjBJSTzxtL
EBS0kBI/W96ZVAWGEh4pyowA+gyRAjsQNhZYVeLPq8splJjQt4d4+vL2HimC
4fOLEWrCO2A1Qk0Efaa7ZjC78bJVXU0ckmrigenFwSDi2Nem50SNuhmUyEGB
ofIJDJ+RFEgOCiXm8HO88+kGYC+rxIVsTbLojlScKHayUhSOz4U8dbCQ6HV2
dzGwoYbEA50iUd9aHXlqBZXEzAgl4QaVBPckORGXNji6zWQZN3GbQsLigyb6
ZRlDh7qT4k+ZUEaThghdS2AIvXlUCf0FXDu8bcq2pIxNppgA+sbJrcV1Y7qI
+YMkDirEhD4N4vJhsDsc30XcOqN1dkPF6fHAlzLkmf5SNB3gbwL4AM8NdyaF
6GDxUXMBfykDOmD6cPMsJoSZPiSC6YN/Pjb8NmlswHJHSsKbYSAl8Q4pCdW7
KpdDnUgJL43WYgds7cE7f4AMeLjQjZ6EQBuE7vcBRIiPDvL6GO2l44dwNPmT
w4QJWieBDciJTxENn92sJMTnt9CybDnGdmu5Kso6HLCMY0G/CwmBFEBVgC/l
a4TA6o8UePjyCAVxUT2936v7OhAhcvD9chAOLsIBk5hDzIXXGnshKRwyo/DL
KOMsm5cbOR7x5U2luDio8P0ogAXZUF8cKCUT6vMD+LfkE+PjvTx8QbS4oYSI
8dm+Yp8YuRHEKNKJYSMurPM0YBSmlRYoK17fgDetlsA/o2oCxg8v6Sj+vq65
aT9FyIpo+6mpeP7KwIkUUlY8OIun/P4DYPEjggXLiiMgK/B21Q0jK0OBxH1T
cjrcfMSy+jExjHE4gxi5SAhqYpX/ITUw5UaSIDVms76YOG9Eb56K7lpKwBje
JY+Pq+vW7jT1RSLKjOKhB3ibAonXrFSHlePMyQvmR9MsjSh562l5prcxpEuw
oyfi2oXEhYqv6dq6YR0yb18KuFBRt5zeMb1IbBp7lpg3UNKipVgytJvYOLaL
ODyttXhgTtFpHUcRnnnQz6IrTZ1cB4RFBi1M3MFUEptMRB6CHSAHagqkx4ox
3TVy5OmJhH/unG9AETVsooarn3eNi+5VQK+JBx7k0MMx0heqf1Uux8cGRxKk
Lz4gffGhZkF9iE2sH5EFJdEhPj6EqxwJIo6jxACIYLxwEyPk5M2EECSI+AwF
BsIjKT4HYfGFXGqI4cvbWvgaI8fDSFJi5NEV1WLZuAYh7m5hFdBjE3HidhAa
u0ForAGhMQ2ExmAe5sb/48v4Pvh2eB6LDPgEd5UTR/A7u7mGEPLS/v4IFQc5
YiupUxawo+g8DmzGKo3SGTRPh8cw4cMB7CIGeCA6aL27m8czXt7cjqwpG9Fh
DVHwoGz700DDq0GPnVJvyPQic3wUePh4bX2B+Pr8LoSPe2Z1BVQUh12paxAf
zQgfUZm24UoF5iEUOvAi1KDWuG1yW9Ya04o5tZjBqcX9U3Imlm1N9jM7WGlO
TpJjIL/JmI7gq4FcfB3qDaQHwmYWm1eNF/TmcHkYUAPpIVOMDNSG3+GqaYyk
pzGGy2OK8OwMdXidry24w8nTFlbgLA3jPA1H73K1OMVuat7akz7J5iDbjR5/
KAxRIuac67gjNdiCah99WammL1ST6/DzG8TSwZ09fZFRg1NEg+vOC9qK1aO6
iGn96uWGsK+4dEg30ha3TKs45WOtY08tWpIir0jT4KSOz/gl1Pd0DU4vZNDg
BJyA7xnPqkvGcYJPKM0R986rEisBFaHg2sspEh4mpLggSNgICfSc/DtGLboW
gS5EsEhUMBzohlFAA07I7eNGV9ns6iAeHOQCPF8GE5Rdk/WECfYBiQZeDqkL
B+lACuMTCq8/oaMxTtzMiCBMIB6YEbdSpo18uK0FcgEz7dvQctL1BYHBJRI4
4uErulHFx5dKNDq8ur8Diwz5dkUHEhhAjaMH2tGzXfnB7sLifyd++g9vkXS4
oT8l3zK2IKHBMuM26n8KmVF0dFOpJzIULr48ZNhSB/HaVlQaX0hQvLyF8883
trdhfwp7oD7DyQjAhDUwEhLHM4XE1hSQ2GhC4udXtiFIbBpfx5DQ4u1YQ2q5
bkg1NQ0pGW9/cy5/f4/MLdH0RR7pi0cuyiN9sV7qCxVZPDA1Z37e1oRqdvIQ
gP9VGYRQsgMhom4fRUJ4/VGMh9ynBp9bz22ymrDAC3iksCBCZCcqHF1UWEyN
HI8aQ2VSga7UkIYq/8q3UxcVc43MIimBEQq4eTqiOP0d15nZUpxvd453pYYG
zz717xAN6gp19tKIng3i4oGVadPtKEdq85gOYunQatYPw8XFg7uJ7eM7iLtm
FqWehjgTs9SnAIus253SdsMW+8IiGhYW06IJ2VFfAWIsGtoQpAVfc7AjeJA1
GVF8iDUTAuVE1MU5/gz1+/vUQkKQnEAp8SEvtJ7wCmrucUL/6WO1yH9SJpTL
eYWPCgelRIAUJxESn1KE/RlAAsXE5wQJwAUU2tsRCIAKJAV1O7kmM5JY8aFU
3wMPd11c2xL/BFLr6MF24rmNlYaQwD8rTKCIsOW7Slbg4cKAiD/sHYLQ8Owp
VzlSZQE+yFP9JB5otqNUmlCAB/gaCBAH5ZJw+NMG3ll/vK8cwYCWFN2oQPbT
/mLCA0Bib7HVPwIQReL4rhSAADjEAmITAqKAAEFwkMdv/GZ5K7FocINYMbJe
/H5leYQB1SzagLo63oB6ZD5Poz0q4fDjBawgsCP2+3PzxK2gIIaCgrh7SjnB
AZOKB6fmNv75Cq8T1piNM+FgzEsk8FU2/pGRkHesb31XOkwD1cKgGqYUzk1r
XlP86UsB0YBZtX81DmUS+OHG11WQbgACpNENjq4bLE4nHL+/qUGNSzt+f5MX
TeSkiq7lhMQ5IQ5kedtntv4SXSatS4eog0+n9qkVCwZUZ5Rc7xzfWqwZ1UnM
6l8rJUJ/MWdArVg+vKvYP7F19nMRpzgpnTa6jjzoOjMSRIYTa6LanApMEqyP
tpe8HifZ8Pr1xZVi8dAGnooDQujWkq4b3t5ZqpMArzKwCATqapv3tGtt3t+n
TtLAyYf9ZB7t9wiAy8ERCIsoQH2uH5Nq+JhUA/W8HlQLyucnpBq8TIJ6mU7g
FPRJjKw/paD6Uyj9n6mF/hFywBVfQPH/Uq07WkTV/wRVfUc0zq0Xd11SK8S9
LawKfHQkDk7c0Uq8uKcTEsLwldBTQlWBOHB87YA4YBjsG0Iuk+PhwFHdspqn
5MmFUoIADk6UkkZgaZAQz6/h3PY4Vn30kVJW/n5ZVf73UlT+OFmAlR87X/dN
7iYWQvX/nVb5Pe9oVQrvKCgLYP1oMTcOHbmohXhiUT75RiFZ0K9erBpW5UUO
D03LfeoHFzWXRV8PoQNFH8cevAYnbnPNLTzS3RK9utdSqyuWexx7QIPozO7+
E2JSNz5jFXuWLqgrxck4eNvAHjW2V/1tLP44GGfu/YNb/6bxE3He1IO29VdX
cLYJdSxRyY/oWKKSH1H2TcMoJzPDqNzY+m9NsfXHMHpWvxoxrW+tt/UPmkWb
x7QVVwztKgae10MV+oWDuol1UPwPTSlNPwwtj1KK9YrOXBit97UGepUKU95s
kEGvEvziQMmHipSuVwmHoXkWrihU8NEo+gYW/WEN0Vt/lULv8go+b/u53OP1
NWrHj9kzn6PnF/xSOQVtjkKrmbePcOf/MWYHx2kUWmtfRSeItv0nDvnZ8wnc
9p+ktlWVH3xKgw1c9D+7RSv6t3LRh4fbVeX/4g6q+rgCRT+JtR2K8L0V8KE3
T+8uHl7WjV5y8bElQSAfn0PV/9UbOohHV3LqoPtGL2zrjNXfltYTHqT0zM6x
8BK5Q3dhqb+z3PEqP4mRMs8yigsXdCGQFF9KEfDEVV2pQwmFwBfY3/o59rcy
Bj6X+bOPgYSJAXaHkLC7iqxzTQxsT4EBzx3izf8bGxgDanb6r4CBvQoDK8oD
7lB48x9yh670MfBjiYCHZ7cSTwICvM2/TJ4fhc3/LZN4838Xbv5nkDN07N4p
JVETcCYCUA54dyEwAvInrjgHyj7s9rHsq93+8KpSI1keIymQyYY/jzb8WPAx
M8Y1sbbQG4WGko8gsOzUu/7cUFowu7sx1RC/6W9GAIjrV40xf6yUh+sFZxuk
9+PoZ3DDR4DqDwU/6P1ktuXPozwZt/yY16gt/74LCsSq4Z3EjH61XPAHYu0X
y4AB28a1jb4DM920W7qTMALeT7D4/wcU65g8OfUFy2kaVf87ffGXrUgVWTeq
RhV/9H2+f1lnMbFfj2DxpyEGPC1P1X6ZIb+727/Kkuo+lnzzKksbaz+UK9jy
815fLaz+cr9PpV/GAmqwjfwemm6Lr/4OFX3a6XPJp7ajz2hW4fNbW2DVp0Wm
zxc42QYFH432O1vQlAL2p1LfUELf74t7cJdf4Vd9fN1XKqi4P7muCv45wUvN
4QEjaA8HiIIn13Y1IwRQDvi6a5cswPqvcAAYIC2A9pBt4sCWCfPtZQFzyCZz
CDVBKZlDtA5rqgC+kUeWVvkkYBqILxp1YZAPRCgWnzMRkAd+ZrBHEaEIicBA
SEQAARteAAdWXQgIUXmyB4TVPhB+q4AQyJMJCKE8uakHBITB00tK6af74IVt
xZOL80OaALPk783JE7OlJiAnaDpqghw8Vlu1IBnjbyYR1GiDRoRE44U1DkUC
ONPQq6EWRYHWnBorB/yLbzQ50NzoMEIyjK8tJRlAc21ACQwFFB0wEMDXZ6kJ
kuYpSb4mYCIUBiVBhlMMSTNDdqOHGHLTGUE88VYcAYX0igDj4+VDO4kBVPWh
WvWuZxBcImb2Q4uni9gzvkVmxyPJ4YXYY7bTHY1xpsOAGCDEn5oXVgORYUC8
GhAvbUoNBFQC318qobDDVANHd5Z6RFD9qIHztJEGjo+BRBQGLDoTzybjx+XD
kXzzhwTBvwUECdP4d5EDSSz/LtZ7eDJW9Oc2V9JLZfiYpzPg6CEzG1iwYIHY
uHgK1X/MDTBq5o99d7lruj+0/S9nCXA7JQB65edDllTht8gRwnk5Net2iNcj
l1fh4eIgC6j421j9odbI+o/Vn9TAqdT/HVH1v5brv+EJmWKA6r88OO8vq4vF
9ZPM+q/EQMgTWh7tCT23tMir/U9B7VdigKfb2A969CJfDNwJYkD6QRO/t7Cf
LP3YXupdeGmWfiMf4NKf99T46qZ80UIdp7SDAi2mIASsjJWAQ7VetghZPNec
NO5YwHE17DCdrtd7OgjPapJOAUREv47v/5yDr8PzUguo4FOxjyj4KU0gmm3G
CefcdCZQyrm1ZhlJgOthbR9TIq4eilOMDdLJP19cNKBGrBnZQTROLDjlYYRM
89/IZqFTMYDS95OmPxGvKHAiXst/SbXHrf8PlvKxD//coQ49StBhR4Fqz41B
WuL7PvUEBcr9B6dU7jHnPSjn0njZWO7xZG05eyDnD+yUtb88o9rvGP4Pl/0k
lniotvdVyHNqnttSSS+1xEd8Q4tcBECCAJAnTtzZSuxYNldcOW+6mQasrCZx
oNIArfo7cdXfSVn9bSz+6ABB+W+cWSfunFdLbpBe+m2s/OgA+XUfNcA+HEH4
TNb8iLqPZd/Gqm/1CNZ9MoGObWUj6O1AAhy15391XXOj7r+wvJz2/ClNoMCe
/+eXc82/Z3oH8ROs+dqeX/WPYvqLFyJfPLBWXDG4RtX8xjunVav9vjGkZhZ9
79xsv+i7x4ZV8oUHaP4bnaHZbfWT5jABbO1xmw+lP6ry4zDaqO4dsQ1I2+mH
On/ojh1HP/IosNPXBglyTeMnvM3nwDc/08CXvR9H937gu7+Gjj4KmP/s/TSP
8X7C23x13xpOoU3tI72dSWJOf07Hd48rSTtGoM8on/IJeLFJb3Ou+xeHt/mp
fJ/TP/0uzRY/Y8M/fdFHv+epqzhT5FNPS72irw6ueAcPunuXps28Lh/d5/m3
VHza7TtU6F2/vYe3+dThY6es845nw1Sw13MP+Tyy7Odg2Xdl2T9xN5+18sLO
zngi6n0Vjlf2bbnvv3fNLPHo5ilU/qPiAGwrhf0/Vf4I77/Mr/d2sN7fbNR7
l64JolqPW36cI/hS7fMd2ud/cQMtrPNQ7fNpn//53mKv3p/06n1RuN43aPW+
0Kv3ao//dnCPv9Hc46t6j+2gWO8XaPWe9vipPJ6ruN6rWn/vDKj1F+fTHv+J
iD0+Zr43T2xDz71zcjma/U/dPblVYLqM2jxlqR/AbzJmBKS1Q3nvwOrW6oY/
MaD2LLZ24Acu9/dY89Pv8G25w8cy36dHPS7LianzY7pTqvCv2uHn+NepxZ5v
52Zl6ZRq+/sc09IZLDf4Wn9PlMmvn0ixaEAlF/gp1NaDG3wMeLeN4cMqtoxp
lfE0QHYJ7yncYXwqfo5Md4NTALGFPhMvxyv0Ea08RqFvFl3oAw2d6OH8RBb7
f2zDzkg8s66pX+jVfTjXlwYrverg8QJdbIVnN58uN/h3F3rsn7/dy3Nx0UER
tpzmCtV6x6z1Sbmdvx/f8v7tbfkI7AMdseDfTwW/IoFVP8FV/+vrp8O/U/gj
1n9vKfdfVX50/p/b2AU2/S2pI5RLv7/pd73SbxsWfynlvDjijHc+L+8qhLR3
vqQ7E0634O/SCn53s+BrKa+/uS8wTJ3XNpib+1e0gn9Bnx7iF1e2zMDUaUoF
XxX7r85qK56Wxd5Ld2lzn+dv7mfnicWwub8cNvdfm557bN/Ytmpjjxt6byLM
rPYGCLjaN2loPM+s9sPNJk6v2o+lwWF1pmkGm/sBDTW0uZ/cLZ83945e9Dnc
hdfhqRP4eafUo4+mNvhu9AY/q67OmH0+3YGAvZ35MR3+yWCbT3qDJ8c3eJqG
ejv1vs4tUP/VRh/PvB7bS3r1V8LfZ6XYNKoF2fmqpRM3+fjD2TCqbeRGn2r/
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
PlAFwGEuAM6HD4AO8uwEfSGPD2w9JYb3fE96QtggpNAD/eAfwRvr11J4vr0S
X8O3pQql8IMuzCz6ATpMKmU4/PdQKYP+jA+fmCjYAt0qpJHOji4ZQvkCwoO3
mMd87IESGS/byooLpIu38Cv/Jgb3nm8Eb3stG8ydhixMl0FBgJJAD+npfE4Z
meYkIUNfdtQhucbSaAUBnxnVEN3DOkvJwaWlmB18dmcbcjqELf6Ls8XvOVt8
ezn7Sn1wVY5vxEAZVPaxxduULe6b1A3ZYhijBKADGRDka2yhzRWwl80lW0z1
scXUcr6VqDJHFQ+XVrIu00lVeUaviIuHEK/IFx8k6xXdFuSK/ilkST+m1Rb2
y9W4wr+vwsQVa4Z1IiN6M8VwzbB82U8kJgp0r6iZliJEekUz/V5RC80r0vdU
tEx4T4Vpk51/mkD1isRI8lMLCsiEATX09Y5JKwdtJLkuqBz+GEc5AFf4lcPf
xdnMer7mVOUKyhNfeuPI6hhBxKlMuc+UKQdoJ8JTmWyGIFNIBxtYAt5MVcNZ
deaMsoTVUqYHQjmcU4iCvJRDjm1l9juBZhcDVUR5RQBxAJhNbh71HCKkBYdX
+RgTf68L2kQxSQYuJwMQC0cfKcPXYpIMUnX0t7nZxNE/xtH/4+fG4dIieM2V
asGV6G/70f/bHP1BmryXS048w1KC0w1dAPzpk4MEAD+Fz5yBaAh1kRgBpCIB
QIwMwQGA/6xRteTY9iI0kUDHZcIwG7OQZH/pF/s7NV0vdDToBdevF5iF1JUT
gCcXVo6rJk9f3oN8dpcH/sGOIh38T65rRa4YVk220prOD/7CPzKB/5YJBXAF
TYC/NlTGwb89vkyppi/eow+hz6f8/6fSx2U/cxF98Ql9rrfk21Lq+YeqPwV+
mZb4bhd+I/j2gAYlyCKWcUaBq2wm/QFDCdCjNKqqUGWUkTUlOIswp0JIj2g7
KtlIell0JM12312n3U8Y0quKTO9TFJxRC2GTdcNbk9kD2AnxOfTH9SPb80w6
TbYmbTHsuRDJQ9CHap60DxW15CIwj3Bl9JKL9w0+lLoP9Y0VrCPk8JX5cWcR
jHPMvjw6SnUYF1x4bGIDlVitdDKhRNJIiUQjE0okX/GGVH5n02KHNl3/oc1I
D8r1e1A2UElYP5LrEQkjExuXGznIJcd3oj5losPC2EEQiVFvJEoiJq9JLp1Q
9ljYuutky4FlpBPPeop5dEJfftyFNH6P96c+3cOGN6TC+1JkGpEvNYbPlrIc
Nut8DGaekVE439gGvgGeyzNJjnDSSSUN9/CU4mguexjp+FIL6VJley4VSy2a
K+uSGOVAYtFweylSTv2VleT/U/ce8FVVWfv/+Zx7b0KoobcE0kkjhSIqIEVQ
qtJRlKKgKBrB3kesgIpBQQEBQSyUGcUS+xDrII6KxoIOthlm/L3vZFAILTek
rP9ea+99zt6n3HsD6Dt/P58DcnPTk/U9z/OstXYY1aOcaGiUQ9VYwUGjzW39
Rpu7E3KwD4++E1elwmGGm4NMbxzwxE1LGzdic96m6ZlwDrsl/Pyqdko+HRk3
d47IsnFjYuEXflRrYVUJWgC9fCFnkvj3OPqXUCLiMXqGyXGSKAiEj2+Tr27u
5z6XofyXQH+GcDQC+2ORefg3eWB8PWsrYtDo7KYuVYMMEl1RVjvUpPymUtI0
EkJ6AO4WNdGnI9p6ul+SQ+f0zYYz+xQIDsVF5NAlA/DXun+fYmMWXDawu9Yi
G2kPq8v9Gnf8c3GbIrhfL0Zwv6Lt1PByv7An6qOr25GqWXdhlueSpUiK5icv
RRNhn4bv1j3V/WK/jkfxZDdGIVZkpKCpocEIRiFc+GCf92zw0z7jvU77dOzR
aFxDlI/1FbQUTQNXNFjEsBgKELHaRgaWrWhOQg4S8CBSrL5XQHYw0UalFLwM
W+XYWAoghPDrLbi097VMFCC7kEmf8ueZyCWH6MGhOvwwPsQP4xge/iO6pORj
u/84jHBU814PI05mKC4SxaskorGKkqnsR/LGnuSAmSI/FxSySeTlf/G8JKjl
JQxEJs3WxdNw9d4nUqFkQhHxaM9j6Y7p6gSn+eUFIuOkaZ8US/uUz+c/Qr+y
3yQEERpf1CjlByLl2NA917WmBtpnp2XGDKJrzsx9+/TTTxeyRzvJp7tGJEmU
IgdpkCtIpkTrYYIXvsEU+6mBUvHq6214BYvEq+8Xr96UqyU5q4EcQjYhlzCo
n00vbkFIGpndShvdk0hCSYTSSCLpzCLSRAbfANjMHtsr0DqyGI6C1r6nGUWU
0RvRJ7WdG2GRSyGui9irXHaKcjq11Ee3W1ySbMLeXTrL7bT2vmy6blALmHwq
10VTTst29e063TZ1M6xMZrzOlztet21LBLct0u6OSGMbXm6b7Ne9k6n5u8bl
eesjlU2++qhNlKm9ttH0ERxeqrGJBFK1IpBqhEA6pgikuhMQSCG+4kmf1jMi
NmXpYGqQYGpCLtueleL0zE3dVYX0W5hsvt253jSSAYztuZG/RhoJK+ZnKbDn
RW4XVpZnmPhAvEWlgKCXSqWQFF/dCE1BgaEfXxhEGDpUXmhYUT5+KiqGTNJB
jIF/FnnLqmyDZzABVQkZPgFMFxHAxGuNuw4xJMa7kymv33IjPwC+7PYcCOOm
LtV/Y2qo5lmn/9bht1ND3aD0vJ6wcmoeHLmnFRzGSzHfrMkNASDZqavuEN90
IVdDXy9oLXL6ZvB1BADNGFiwrX///gJA2gifAFAif1GiSpCgLn9I1sTroErx
ex7HTDwOgFDHL76LGTNmIHLwXdMR2BdzQhFrRuS0k6zhB9c1J9SMKuA/IBN6
JlrKZ1RRqnZgnbobyrCEj9wqGMN4+OzesY6Hx/kJIBMpY8yFeac1h9N6F8OU
fhmenJl5Om/MOL1PMVw+MMnVBWz5cBFSnYc8Uh1fH25KbD5czHMhMe8Fcftw
svt3LdM/Y3AE6bp2Hktmj380MIr+Yd9eRhmjFekf4oxgzNFlDs4wxtSscHDG
agQ7HhPOc9V47CYcYwyW0ue78iCHXXvXptuY4YghDw4rTlkSMkZeMbDGlB1g
27tZHWABj+bfWF05hwYKeFhzISRLABnDXrzzqRwu6D6iIRGVO6bglOAOtQsH
RAOA4I5B4IGfX+kvsYMfSTeHAjJtBRRHymfPMyLseTVF7qw15ciIiH3i1NhH
kiea8OHQCdFOkYqHM5nyKYaFFxZC5Ybux6F6mkRTPSbJnpCI/DXRI5qGu0N4
WQc+m3VFOhy5txWHjrDfNOA4RkNU4HxSwruxyi5KsRvDIgBn+CnFC0aMGCGT
Hm1EUCfOOEENJcoJDBaPlVrEMfHZIY+XJghuqdMlpv0Y9iDTvzhrWhJrzsrt
RMOHsvdYnH4E5/YU3QIFXWG43DnVsynCprEu2wm2DgSJM/Nszpg2ZG6mxuPR
fXPh7L75GmTm9e8Ao07hhxGdf1qWNmoilxHaJlsT1wIq22RLcDUde5lsaxph
skVeQXLyTDaEDDYcvzGPhz5vXZnsL2R8Bw8jCBnH4KGXkDkkhMzhhxyQYYCp
ZoDRIMMAc+wxDTKxHIjtea5RhGVTHjqmuVPHQMPzXW3KvNAVKjcKh+qJdIsw
pGKw9iFeXrWuE3bZOGGCKmE8eo1dfPkr9YypbWUhiy8kavBNfp4KZSvyYcro
Xvj/7PmfI11UzvC5FJ4GfULdZipxTNGl/FE3ajpgT/75VU6bfW/25VOKQSsF
Skbm0KiKEzxBKLs/F6aM6CWtN1OnDr6C68SMoISO7Dfg0U9AQgcvg1tuTeQ+
Q7qw5QwjIATQziVZ9sBKRw/2eIkdn85kr16z1W0dvWYp1Gu2ZyFfUvLvOzrA
UQGeI5bdxnMfr5lEFTw4k3j7KFbnhhdoHckcPE018LwyvSW+PwSP4A46WlbH
sc4dqVYGK9xJUdVPS51PCxXayMkWostceqz5Z/369YNheV09yTIhj0uXswv5
fduZxdmmjRWPnrQiDHZOuH0g5N0+ENRimysRLAwpxhUwrR//hb/89NYElemn
cbUyvG8BlAzsIJabxGsHrN7hARXLHRsVvW85Fndso587NrP5SV1qEskdQ6h8
fG07Ui7rp2dFXmhy+3EsNIkys3hIUS1H6CTVoxTbSNUSptiGIcWIt1RLrT2t
KGMbg3ehBTlU1GW2DbTMVgCFX9GX2TbQMlvULU2cusWJFNk4IKmyZ3Wm0n1m
WmKFUIIkSY4BIMdpjFHPAAmTgIcdxsGBiEgleMir9IZCWHdnAREl4EER7FVD
b0xgw+JUN7zoX/gBEkD2vdWXAMJAYtBj8WpngTdFDJpzp7xmy135CBHTMevi
FdwEG69eEq2NiNg/gJYZQgR304RxW2V09dIo8ZJpi5dV2nQLlF2ZDZMGFsPR
+xI5PxTxUqXENX4TLZIf2y/lJtK7l3b14UcC8eOFC9rKtedSuMhKT9MsOkBk
2KICRNpn2HtmNLGhwl/FsDoK1quiR0BFTseQNcahEoepEQxnUDlHhwrfkcIb
1FCl0HlLBYkupjhkinFSuwEim2GcKTdR4oIf3tR+GTCsL992MuXULMeEZHzE
fYmeTtgY7/7mR5XExd8Ja8adsGhzML+xEyaPW7p7XB7cPT4vukiJMBXpK1IW
ubejHBQi5ZAiUo4IkXJUESlhIVJqpEhZ6WCKbGq2cdKA10nAiU8vWoJmg6FI
wZQFbTCBFNnU7CLKcdpfNlt87S+bLV72l6lTxm1/KZTBf/E/K1KhZHoxyhY0
dypItKQGdeYEhUP2aXcbPFYygx/uoXcKCTI/vjiIjvzrFicyGn5eB+eLacUz
pL6SIVzOv5gVG3qYOmTwCeWiRW27c5ayEUKlsyZU5EzM3jWpNNk05cxi2LMi
3YczsSoVimDWkjXmVir4spWkUhhpSkYWwarz8qAaKXNfK02pSIssGmX+ziiD
27RmDS6CRefkWc3QXpRZPylJbtASkJEjk3QwUyMhw/OY4ALDbkVD4AgLTD5M
fWlNhfB5+OGHrRXtgjPrzzjjDDgzrxvnTK6LM4OL+ZY0TPqnImIw6A+oQb9h
H+qkxS8xhvwJXiG/hRwR8htRNYyJIzXGdRTB4MeLwLm8fwfXaq5bhuiumFf0
4nTFHpSu2DluVwyjF09XbKrtijVq8YriirkWr5yAKybbn1HAoJDRBUzriEOX
/2TAibx0pa3v0OXBB7mAsYDDYHNkmQM4DDbhFU7gdIRauYoxpLWcNawl2CAu
6OgmxhtOG0mcjZ2iH92EvAlqYzTWAa9Ba4pG0y9BAk74Oe4uVizPcrAGn/Ba
kuqDxcqck2OISeKYYseKqmuIOCYCJySMsAqETfhjrvJ3PpOLfK1IjUPOxOOT
48SrUQeAypmQtb6LxI2NmpcGcaETEEKnBhf6ihbqQDT8lC8XSdB29tm8l2Tj
xwjyAwWtRmke0URUOAFV4dAtATYDOI7+0KYysTFgy/WiUeDWHAjjaS2SQJFa
pCPLHIPrnHSXzsFbLDoxvCQDqhclMgJx+hy9hxPokOiPpt1dMdDnmWmZMJb9
Vn9yRTtf+qye0J3mL4dyGGgjON009Cw0lDjfgZ5tNnpC0iCTTWbYp8Y+ZXr+
fokuRedoR4Rw/rRAyw4G90x38sdaAHaWMM6YyJHHgvgPdGrmWawNZifinN1K
k5w4g4MfI15X9W9hZf5y89fNMcQx94k4ZolHHBOp5zmac+be/2I7Z577X06y
cyan/V+5jN9cfnxtp9h2v3hMcEbb/eICD4POoYcc4GHQOcp+/TTwMOjUMOgc
W2mBx1oBj9RpwGstOmgNFPYz7nDqcPLEcK64InMIOuLMQCwQfyTiyNlNTh6T
pvzjLZnDG8qSJHkoifFSOY0KXnx9M6/2Zts3M60NXzZfEC0EGVIqqSHBl6oP
xRLgN7PQVPsC+VLBVU4KkgYvimkU5hgEHWQOXoaDPgFhr9Xs6EHU2f3cMHzL
H3WjIR0XZnYIzOBzPkiG0gUFsO6WnnzXPDZSC9Lgx6CeXqs1AwQdzQAImdfp
e6Z3oJl2C3TQKXNMGv5sS81nFaUZpHRwoVvlum4nqHKa+eUxUHE7h3vlnR0h
TIzBdSqMMkYnzhjy0kQWE2HcUzJm99WtiTEbz8vUGLNTYcy9o2juJjpipDxR
EZPiRkwT+RjaZrPE3/jyhULtNOOvin3M1v55QRY082BQQSZtHFabmCVZhhbx
jt9xBZ0ikuVCdyzjsVGyl7DQ2DdfdJXJvTK6lRbSrbSQZqUJxhg87y+BEuUI
knGn8A9XRjWzT0/iC8fO0O00r4jmLgEaVwPzaH87TY1ootlpUdfKHI+dFsOA
p22nJVqDNZ9dz3s5npyZZYEm8koZpm4iDne61c0BBpkqAZmDQt0QaCieYZgx
WlvqplpAJvyoChoOmdrVlp3GQWPLGxI3J2SmAe0WUxfNc8pYWwIMjpkEB2b4
QA0uMClflCO7ygwv0vx2fprNHNtFM8UGSeGiidZlMtH4FbLYYyJs2LvZU8b7
mhmIcGbyC8RTRSrxxyF14nTO8P0kiBcUOtTJ1i1oqRviDIU1tG4gGcLv8Jub
nWuyTftMQ+SLMvZ5kpRMfCQlg895vpPRDirXdyfC4BmTe5anuSnTOCXDhUya
JmS2zM2lkCa8OJEDxiFkqNPsTsVGiwIY3CfwNAqZ04rh85JET8DcfnY2tjML
wGDJx9LvARipTUoVwGgNZyKjQc3yttQprWxuWaccXkZ/Nt0/uKgHra+c4EES
XEpMO2gKu/mG+74U8W8Y8whiPOkxz5MetxA5sC0Zu8XQF5t7WntaODOoTxGc
c0quazTzFo8w5k4RxsTSluy1HmDVxNi8sWcb6Y15d4y1jN0bu9btjcmW5BlD
iuC+CXm+LcmeEuWu2JfMVKn0UCTKYSFRjigSRaOHkCgaPeztMgQPDg6pUBAg
tF3G4Yt52WIgTzQPWieaQwy2WJxz2gVKJhbj5kTSJ1TBkrgx9hoVwuNBh3mi
ncgOY8wUW2bqcRn9rhT74l1jgiTEipAgSfkTeTBlTC+AL1Mx3v4ylfQM5TVB
HSdSEO3qbjPFFKvMblowG3ZtHik34ftjJR72bBZtym+k2GdkcaYYxy1a4txj
M690jlG34NAMdgHgIZWU1DySdgK6JcNTt0wZVAxvXp4FNUsSbawwpFRLb0zZ
HfCL7B/zQcpPDCk/MKR8NI83ML92cTJ8UWIj5X2BlIvOKFg4fPhwgRRtRFNH
ihzH/ExBiozzUxSkbBPPU5FidSjbSInfNrZPJiHFKU4m0iZkXLkRwF33fOTF
EidNPPL9oDpZeVyZS18kS8idubA3YaFFHXi5hsiCQ/+4hEaSBVvHzj81A05n
tLl6YItGGWBeycvSCMnLSo/k5fc0wCKtMfMywOQhKKhLxvYvtgyw72+LPFT5
c4ShSlWX7Fd0SZXQJQdtXQKHlznowshSjXvuGVrQURGy5BjNujC0sMfq7NQl
svfV1Ol9EVkAL04WdtGJt1yVBJ2qxKSIv7lnxK+iBcUIntCBZzdZuUtA5C5K
77HZGAtMZcr7gileYYvDArNJEsCKH9LdL+KGSbgIQNlj+RTq47+aW/AQaT95
YRUEHhUjARHACIzQKAx7jUU3z4IdT40lnhBVcNFAt4DOEFNIk7KlrFSP7MU7
ymQv2fFKky7+bWSdHW1kQTve57KEq5Jm1uAlZixRGIIf2cb2SCxvVWJSwJJm
IaTyQW6P/nBrMuGjRuAjfJ+uSviqS9X2agH/I/DxL4GPf9xo4wM35M/Ec67H
57jwgZvxz+pH8y4CH1jjrQFLgQ8+4d9koWG3E8uusFmGbXnJkEQ8NIsow5fR
DDaU/8Qcppx7odYBHqk0XY/nCeJKM6thTBBllDhB64zifFyfHC3Fn64DRU3x
Q06iOOcnmylKReNJBKPrD3DJqe0JJAiUK09vDgvkcAu7MManCf7+SZ59Y1GN
Lq0XOUGf1B+nGl1NtTNUIhldvhtkfkejSw63vD6Pmw+7ru/kaXTZUsUd4/9b
m55sq0mV/fc7gMJgcvAhB1AYTI4wmChAIakSZjSpWWkRhaRKrb5CH3nCI/yg
M8LnQy0hggk8LUDCYYJlYRNVmM0iReFaRQ9SuuhBStDpcJn2vhg6/2/LLflG
rDAhlZIslQo+xbsj2QsrjXK5TNmRrBhbQQRHSGBl4ZVFsO7uAoCvUtHE+yo1
3mJLvA4TIyA0DuodEke7kCif4ju3sLJ93Thhfck/u/GU/6/0Wf4VPy2VMvhl
3ZEMJecXw5Z78u00PxCzVmnM3EtQbSezUGNahzWK9crqiuVE9tPQEcrv7MFZ
83BaY7UKlyrptlRhV9n8bJg8sBiO3Z9oc8ZDqliD/aJVmSJ8yRlrzKU5tSlL
zjw8IQdKhhW4OPPGLBpvGTx16lQZ32PZt+ZbNNCQTtlmyOVmfDEZCN1C4BGk
kfCh5wXt2N5JGjlKQzMvnDQtxl068jRP0gzlG2GsMxsxtkf9cj4hZlpB0DrN
vcjijHFSQpWQbYsleNliFNzPETuYz+6Lv/Dz+8cZl+knuLBrcJ8iOLdfrqtl
rFHT+mMiTOs7QhVpi63/b7bFBGu+uJGHKy9flkas+SFCf7KncFFssV+drBGc
qRLChViDW8oYaIw2NmoEZqofVVHDMXNstQM1em8ycsbpiAETLoCOGJAjZmmW
k+mIiQzFhHXX9KQbZ8sR0/0w8+T5YbG2JpuWijFlqLIrVQ1VHJKG2GMScgJk
iJWvz6N/tbAAFBTS54sUB4UwtkG98ilaYSvums6JwycvY4COKdL9ytd4sL1n
S6ZI94P6KfK+/WNdI212prDM3uzslDeigzmgWmT42AudjA7O88GsDubyhdHY
096DPe10jZNA3Fk4sRAen5ZH3Dm2JNGhcVqxD4WRh30oXhaZe7xS585Ls/i4
5oeXtdO4UzbdGosZqrNAxQ5f3BxCtKBQKRUXCRiRz6cYPOonOUN9Y16jL5wt
zVLmzp0LI3P4BrKJClvo4HjGlwliWv/cwq7CE4v3ilo88eKZtvjhJeRMXRRf
7HoXWy4SpwWfe0q2tQnTyRaMXC44LYO2wODWMS2wj9IZ5mWMLftvMMYasd/f
zxhTd/vPGoIniOW6dcwd/jpG2wKjGGO/KjrG4ouiYw4JHXOYwwUbZJbj/JoF
GKFjNMBg5MLowmqBxRePrB6eJLiYSBcsLbqOUU0xkdWHPLJ6Kk3PUyuYtMTc
thifeqGBiyREDJReXoCPvZaElguTMuGXu0PVthSoeiEFKremwd5nM2DPhkzY
82QmVKzpARVre8CejVnsdfZuzsAK+3w6VG5Lh6pXqEv4rRQbOOghdW+8RWbK
1i4bLoaDLEHBDiJLeJfoTN6Ui47Z16hqBF4CInhR8RK0Jmq66yLHFE1kG5ZM
g7JVk4TakYkM/tEtoFNGbJUpe0hYZzuSTeecjOKfmdFGZPC9ubaXOXvH8Iek
jO4+9GSf4yWg4sVQpY2GmGVpjZc2aSRtwo915Ce6zM+A2gcSbcQwvNQsshBj
SZtDyvbm/ygJjHP6Es8T+57h5cPLxQqZmclWVzLi5akpyXIeRuBFG7oUeOnN
X6QNr8zjftdP5+Q21Sghp+1HM/UxNZ8H82cVZarBiRsSsQcnZHOxt2N1C7tT
E7tj+AYLDpNP4W2QU9jf1sEvXqso2XXlQG52XTYgyXs4MqZurv//mFwIh1hM
Lrki7OGpOTB/RKG38FgY4/YWJxwYGA4I4VFlCw84tEyDAymPo5iYVFNiIoVH
DSUmjAysSkvhUSdn7LUsHkh5cDA4lEfIqTwUMMTSxNVUs7iqNnenkUjsFcYm
ri235JPPNWV4LxOmnNWL7p8CuJGEqZWS84ph4SVFdJUuKIR1txTAulsLTHR1
TMwQMP5+NBd2rsuBnU/ksHdY8Uw2Nlf9qQfsfSkT9r6M9+GVb2Swz63qnXQI
70jFY9/xsn0sag4O6LE6aYkQVfwg1njYu5330Ve+n5WoF32Dqj4WfbwMu/yj
NaYMVNrl35QQ+LQ7Vf+tD081iAZBCQFa/t8NL8PJgBC5Wutu6ynbiOXEijqQ
n6QuUzbVHZZcaBhmhCg+Uojil8Mn2fqCNIa9zyUyBCJqDCLAnnt5T+mv93Yk
AtRyApiIAKOTBoBqy9uy1/djhuI3mvI9nRDTDGacUQSPTuyhAWDtJBpJOdMj
0dCLP3YRW7GKKP7bpuWZVvGfpGyMnNiTT4pgdE5hR2NT86gZR8gr4xC64F4t
L58gJkMu7NfdXfod58TLufjBfYtg/Km5jRpVjKkda4LdjmX5TlPUdqxmJ8d3
uuz4fafPfHwn2cj71hVcqVbc2EkLzC1d4NPIq+qCX0Tp//V+R/lnpb/qIUf5
Z6X/MCv9R5Zb5Z90QTWr/eGVVv0nXXCM1f7aNR71P1rt93GdmjtdJwhvSoLK
J1Jgz4oMWoaPR0JuuSGftj2VTCiKo56ROGrAQhlQMqkYiz2U388K98PZrG6v
6sF+EfaszyQFgFfln9Kg6qUUCL/enV3s7zdYua4qSzXx/p+Vs71bmVJ4Jgsv
rPvre5iwc3UOAmF5LpQ9kIcXe8GWu/PZYwwaUHp1IV7ssYWXFrHHsI7ifTS7
2CfEPj4TT4THE11H96IzvxbOK6Kr9AZ8pXV3FrCXbXmgJ5Svy8O5RKh8J5Pa
d+3kgzSCiXzAP9KQRK/y1vjw5+nYnLU7jdXh3ciMWszWd6fic9GWU4mCMQnS
QyDElBOS3QMCHAwYBA4UEDGAA9/+zm4Qfp//gCIs4cNkSz/gM22PCt/ge0li
ISUlI+8kqT4VT0eCajoij7GnJi5vmyqiigh5mVQ0f9QRT7KXEBnKIFKa1jgV
kQBlC7Jh8hnFUPdga5sfuopg7wptqvYEkSNKa/AvojUYTSpPgFzHAXLPmDy4
8ex8DSCLxmTh9i1jGMeENnCSrBFEmxDhBGm2YH4fk07/kgTB9fYYXsjThkcX
cSxOLWiqhhcRQnL2bbbcpWjhhQdFLHdprkURPHMeP4aL+3XWCOLlLEmCYHIx
/XTuMuGZX9Jd8t3YFWnuMAZ3SU0vjm9jVwtPd6mxp0fG4i7hsPtH13Slr2l5
SYqHgLDdJW8BgUskGEOMzjZFBEEOCAFBFBEEOfSwgyKMIEcfVSnCCVKz2kER
RpA662CVEEXkjCGcINxaMri31EzzlqrWJcPeFanst5gx4oFM9ludDVuuyYPS
2QU4DGBwSCTQatp183vClhvzofy+HJIKe9enQ9XWFH3mg/1I71yWTTDRI3Es
KW8lY1rBLx6KG4ETCMR5VoEbSxiKPkjl119SoertdJQYb6I5tbcsE/Y83wMv
RNJmxrWdGwlJaxiOlufjhUh6AKMWxhMovbEQFl5RhMQJ0CffhIILmZ5jc9bO
Z3Nh71tZUPleJlpPAeFCoSZhhCHKSNYwukDZqnx8E0Yr/FcQCUNwicdXC4qA
5EsUJMdwilFoFkpEqMkraAGHJAtlLt3Jntpw/zQrIwlExk2QqTAx3LI9FVFj
KvMohBqOG/OkTjlyxrhVSidbpST7qhTs9Cq/ww8ykVVKyegi2HRRDhGmDglj
qxQ4thjpgozpYMkUryl69Kk8B0+ERNkwNRPGnFasEeaOETRwogDGmgzRAYMv
ss4zFoCZdWNfk7ZCSsBggoEJuQTM+ALujI2jJENNxwud8UVAjS/YYxf1CkWk
S3uNLmoPFpJlbr/mcFaffDi1dzH1XskhQ55ZeFtTjCzs/TK2GHNg/iBuU11x
RpKPPeXOxWMbNmzaqKl2255q7nua5O9pT+25jQ8bXjS0CFacl+teoxKloVcu
F/5F0ScWXRR9otHlkQ4mosVoY8NFyBMNLgIstWstuEh5QplFeG0X2FvKwPFA
ugnlt6LDs2U+48Ysxo1zilhR5qWz5NwiYsm6K3vSKED5XdlQUcoUxeOMHc90
525UyDW5bscUcfoG4deSUJtwZWCRJaCSxfAKw08IMAECTPQwXM8rAtbqFJPa
d+Mh/EkaVL6bSWOGiBBECWKlZHqxoaKmZEYxlN5cCGUr8zHRgL3be0DlB1mo
V0xECILq3gJ6CuKFXeyO/BtJGxIwu8kjU0FjWqAJ6WSh/ZUp3AwTF7JlxV3T
AxZcTJm58/jDoCEUWHd7TxJsImxPFh1eYiGl3kJsuV8eLcRdf7MW4oAKFXzP
WzsaBQSWnfdm2WCJrlwgvIqHHp9dnwb1SxlUHkzkYGFQqV3iCEAYVMKyr0vp
H953u+19OaGCuToezvLKRXxh0PuXtrWgcvEgGjkRUNGmGHWoaGMjHCptBz/Q
3yCoYMAhAw9s8JVQmdKzKamYkUXpkWLx2PZz8cgjoEYeBi5ICRnXq6dvEVCG
9imAgTgNcmprHSg+WYcqV2RT75C+RTDh1FxXGO51RPH9MZpe2gS7Ayp+mYfn
1vqLT9T0anVcppds6l0yMQ+uHlnoK1esFSmOpt59ix1QYUDZL+TKAUWuHFyG
0+sMKez7LeXKkRUUilPgIeVKmAIPxhQmIzSqMKL8+lgyfHZ3Brx8bQ7cMaUQ
pgyRpTCAGCGcrLsMb9DL/5CNN7H3M3Q8mgZV67uh3WXSVpSQHXT8yRl0+PTy
BvXjT+y99BWr+F1yuIyIoDZZ4SvZnbwnLFsiUiWgnEusQMVmSsDRXdWEMnAU
JHteySZqID0QEUgYRpWAcPtIy5Swh8byv/eW94BwRXobJEi8hQwrZvkyFZEh
r6DlglmiBD+R7evHwaJbZtk5ugMaJkEjjmkz4XY9kcN3fdHJlMchRYTjFed0
vNjVJZoa8XG8uBppFlGNYE/WznsyOTgeIpH3dAc0Xn3USMVdfBnVgUWdCBr1
XI2YSA2jsxQjxIwaZIYQI3wSvqUyCc9nTqgfSxlXlMzYeTlvcNpyQQpnxpwE
OJvPmUirS5tTFNDopeco2KtlXEGPNU/ZNsigFVuoRNSjtSQ0sEd3WHE2DC3O
dRpdkhlRp0Hcp2mZxItFnhJkVJ9ckh++tBjAaeGMR1RaYEQys38GHicMt5zZ
MqaV9F4G13LnRkefnSeNiUmkwfXSHPdGx9/a4JLEePVy3kbz1U2dvHed+CTk
+wQtfrnfQQxGiwMPacQgCXKI0eLwcosYpEGOMlpUr7SIQRqkhtHi63vT4C+3
ZcHjc/Jh8mA8OxTrWDyUjCmCzSV5sHNhFuxdlgpVjyejvUUJiYnWFmJBb5yi
dJwjI+hEhqmczejTN2Xtb8Sn6T25sOcJMX79QkpM0IhhpvC3gkZQdEVxy+qr
NMuyQgMrjQuMONQaUPXXDMJDxYs5UP5kHoqOIH31Q0QO1CD4cOVfspAgWDu/
RXvrG3wj36QSTILRYKLoEPw4u8OOZ8ciSwxiC1ldAR0mBo0wQsWzws4qx89N
LI1MduzxUjt9k46/0zfojFDwx4C69PhsiQ0U292i+w8hQ7r40gQ2d1CJEtHb
2nJFLkw5oxgaHmpt00SXISaZWx1sotyrHKSinOAlrS2aXlRpgucTX9UMpp9R
BI+MzyKalF9sTZMImGiHdOkwkQ26NPxxJT0WtEAi8hITKcJ+hiRHUHigADmP
YpMoIGlMYhJ0eloyLJl2Ch+Bm9WvM7XiSp4s8LOzPFnCW3GvFtZWyaAkbQNK
o9bROwOTCOMeGwVPXO24MyK149qByRsec+rHZWndENnSwo6rj6/jwck781Oi
qg+ytCgsYTQx2ts8ESzZL9QH8USw5ODDDp4wlhx5VOfJV3enwRvX9YAHLygQ
yiKBWPLSNTnwzeJ0OLqmCz8gyw5KKCYxo/ZZ+YylKwcwenPE9DoZS+zJwsDi
6QyJEiMSRxzzHb8nR8zoHAmJrOObNIOVoS/4ffCeN7KhckcW7NzK5MnqfFh4
Fdch1O2IeoT9e8uynvRyfB57PexU+xYTlm/oD3pfu1PhGE/q8SMXkJGtwApk
DFPHTEBgZtefRtJqFS5eZIbvxEwA1v2hJyy8rIjyE9N2uQLasSum1umb5NPp
29Xd6evtcpnW9GJn1/Sin8vVQseLxyr8nXcLxCxNky4XfuBPtsdpRYaY8Boe
LOy8JoPw0rBUIsbtcmmKxcPloin5W22Xy8mXLxlf7hqdB5cPLSC+vD6TpkZw
jEOqFW1a0RswpFYEYH6amBsgwIi8xAmY8YVqbIKAaaIkJhZgeGJSLE/9jRKY
zFPaeUOWUpl5Ch/quIARBuN4SZdIvhaRRQyq4wChuv0Ew5KhfYtg0mm5sXtb
57i9LWdg4orjYwxMno8QmLzuEZho3lbJyfO2kC4YxV88tAjWz8gWSqWNl1Ix
ES3sl/Y/QqjsW4JLhRha2HfWggsHi4lkYU+12EIjHows7Kn/+2BX+Oi2DHi+
JAdum1DIUcK+kLPz4c0besAP96eQqVW7rhPUPcEu+3BfjpaNnUT+HvKa7cCX
+U8OhuzJQXvbCb7Ki1RGxApGTaIk2BJFbph/I5mmOWjD7rMZSBbjvxktZnS0
mMgGbOh6gzd0VX1CjV/ssRAxZ+/bPYglyBTGFqEd4yzWlD2eDxUv5UDlh4w1
X2K48jf0wL7FhIW9eeSNvEI6aIJ6kELDKSkEFtwDyXRMUOcKWlU0udiNrvAO
YYStzzHlmV/khyUTYbghFuc0xDQRg69ie2L4KuU092Of6+U0xcQ0SUB1xYyY
lYzRK6o1JluJJW0qFmW4xEzFPeJA6sWdIgmZmEizT9nH8i8xp4hZyp5r+aEq
SJqnz+M/8eWz28Km85Kxf3g4J4k2m6hBJohNYfgiHCBBFnFXLPj2+T15Lo9q
ZURhKudMnMWZqQU8STm7OBMpYyJkcH8jJvSSLzNJyKAZdp+7bVjhzCV9tC3z
miV2ab/mZIWhJSaHRnD1b6QA5Y5hHhJGgQwGKBcN4NbY7cNaWkMj/qc0unu+
9BDFP5mPHKI0b3SIUu4RopAlNv/ELTHZNXz/pDy4ZmSh71aUf9sSBv6z2CKN
JWF+FRJmvyJhqgRmdt/ZHd6+LhMem5kPkwYV8yrVGv8XVl6UD+/dnAX/XMqK
hnDEatZ0hGMMNccYajTcMNTU21t/Y1QxTSJNi9hT6iEvN8zgrPEeUWc/9OiG
0X3/hkyOGtPjUEbTY1jwtwJLwAIL/oEQ+ZoaspAp36QFBU7KN+YRIhgNkKN/
I5x8yXDyDsdJ6a2FCk7i6bn4GOKEJA7DCXstOPYVnVPPTbFUyuNDSBBbNKX4
SRX20t0vDyeY1HyMMzQMKQ6pgh+aQErFJuGFvZ1qHbTCz1IhlnxILNGTeckT
M0JncQ0FKf6dxd62mOkZsqBUeaETDaY624otkNBPZEfcH7m5gwdM0jWQbLmS
u2FQ2joSSAxuibVnIGkVG0jIFhMgucYGydtzeAPAny5IhuXjMj6bMPAUQ5BE
G0PUSBKSkyiSKNTyxZP54LbpjBnjZCJf0I3jpImFE1y3NZQPpaiBvD9RIsQr
GMnbRBGRfHsiCsqWIRjF9y60uoivjEAUTbY4whVGE/a2GU+MGbRn67oh3Bxb
MCSpUaaY69gsQRQ1lo8YsrBri0IUVxexx7FZ+ox6S8/TSz5UQpbjNcXkSuAX
53Kf55tbOnkGLP++TxKlHScKo8m++x1EYTTZz2jy6a2pUFbSAxZP6Sk9riXn
9YQ/XZEDFQvT4NdHOsPRlR3Y1RGqV3UkkoTpiN8amku3aEJz6YwlrCBYNNlo
0QRZ4opWNjujleNI40N2Gm/7YQY3xOJIuMCbyTZNnsyMeDTW/w1VqJ6ncrXy
FQkIFS0hgRbEAmKiZGYxtgNbaEFslD+VB6W3FSJOBFqChBV8XCCFCBWyaBK0
aII4SwlaDGFftZ+394cdmyhL4SfQv3+KmH38vLvpIEmIKFJ6XSG3uz629qn4
KBNnVM8pYkaI6k1X13DUnN6M1DXcRedHBDGCzV0779IZEl4n7K5rM6LxIxo+
9seAD9xM/9fLW8GoU9kN3cQMuGtU9rbpZ55qnGV3bdEQI/6XpOIjXh1DwdQF
BQlG+bT/hO8Fbr3w8t4BCyPjerbjGb2S0yNHxsjRlMLERmYrIaf9Re4XJfWc
IpeTJhnbJ5s0ycX92usUcXQKy5jelyKqJhlmdwqf2bcIJp+eG3H9r9rY5XUG
Fo/qm7omGp3RimsWpZHRSmM3NurmV2LM5hdSZNcNPGJ5f0GK5yQjUYRiFcYQ
VhYkRf5nUUf4+OZUeOnKHnDfZEEN9qWakQ+vzO8Bu+9KgUPLO8ChFR3g8KM8
VTnyWAdOETxnsXp1R6M5QoTkSM3ajipEoJbJkboNnXSIxDK7/tupkSAxBPuE
aSB0TY/I/LAbumx+BPSDrn57fgR0fhA+2PPQulp3XwH9i90s70ljX7bKnVmw
581sCRD6JPF5Ah4ByZ9vLUfLCOgcIVlEoiQgxlF+fHMwbH9yHNx09Wz8hb/0
UvZ137p8Kmx4YBqsuHs61HySYwf3NlNMwZTwh8Lk2pDjzZSdClPMmPP6rv55
fZfIeX2cn8vFtUlCJG0iuYLvYRP1fDnZcl86VNxrm1vIFbC4wjjCoGJ0tv2t
xbJfuJVnv7AXV8jfuk7hSkkz+PzKpnD9Wflw35gcmDqgaOH15w6SXNHGGzWu
NEGOWNMn7D/0wvDp2CKGfpg8bfFqnHjMS9TbvxxomVTIu8/GF3VFtBhcn4S0
VEXMoqhzKM29uOKwu0JwwSl8TfOFpyTxNSkXeZLlaidZBjlOU1T3/8r5E9H8
NWdgBgzoUwwLz2qpu12jHQ1gMYb2rljFI7SPLVZpcUKxyice+xljdbvkjPzs
M4vgyVnZ8P+U6cb/vRdpwrjCvseVTJt8fnN3eP2qTFg3KxcuPUu6Is1gAhPn
yy/Mh5eZLvlqYXdyu6oebg8HH8Grg4oX9joMLngIFhMoDC9IF6h+nEQKhCVf
GFuOPaHzpY6xpd4+p8Sn+avziSuUJl4KRY1WTGXEccrZvaB8aY414mj6tn0F
/U/t/Y0RI8OUoBWmSG1BiGFQ4bX7j7lGR4GY8FfphBhEjwsxO7JMD8SYenRi
hMQHkAI1n+XArm0jYcOD0wRbAsgZ2L5xHPz4xmB8zS/wzJWaT3OINRZvKgRv
yA0zqeWYVhPjaCcvvu+mUn5vyqO4XGaYX4Cf5Arw8amkZAg6RiQ3zC1lOkd1
w+L8iGOSHZYroNPBtaRl552Z2CoPC7FlHk2wZa2dwPEae+RpSmOII7Y+/u2a
ZvD1fE6czxhx7hiVC3OHFODXe8E/rssTwEF6WOOOAjjFepMxTacEuP+FoEGB
gzBC64z3k7UYd9dpARiTx6EyMb+pJ3RwUOX0XoUwvDjbFzqz3NCJ88tYuJRh
L+rbmr/fvhmy85i9PkOOcbGd5Z8uDbE4zy6xm7ygM0wferzxTG6MXTM0OcLg
Y2xZ/uMeixutiGWad8TynLKbS49YWujnyDsiFlfXMUUsrXwjli8cp5lYhtit
bkNMzqgsnZwH140q1AyxHdemwPNzs+DuiUKqxCNriDlvLsiEPXcmw6/CC9tP
hyoeWIZBPudNBzi4HBnDaIOjKkzKHGZS5shKGlVZ1dFItHnDWBNe6+ANY03t
Bp039U91VrfNm7RqPqSixnFkb8hLyxjHLWbiLDGDQ48lk4uhbFEessYfNQGI
cBLW7wSbgAdsTKJLgOhCrQnv9sCUYE9aM4Dv0prQS5vSSzF+2fJwT4s9JTOL
KarhnWJpCB47aDGJNwH4+d0BsGPLWFhxz3SLMxuWTqPH9n1wCjWM4adFW8IO
7SziEHpyHH7mFU63DIeSLiiG0usL0TDDp1jtyEQZIk2yac+0BFSjDJ//fpLP
LjDTkd/XIEa88ntTm4Xs7L8JTHHLmirRvZdbZgEG7506GKkWYyg5n59l8UX2
htWdDL7c5MOXK4gv4j4yMCvpwY5SphheI5DeoKH+MH7qVhAfQy4haBA6l3DQ
FK0fZMCo/E5RQTOiOBNO6V2sgCZAoIk9fWnq2gF5ySnNKHEZ3iefg4bDhrNm
BrFGD1901qg9Y162mTrZgsHLsFOKYGr/XLh3pMcSsBjj/NUKa/7bwpcKj/Dl
WyV8cdpmcsD+5ct4CPMUEzl3jRdsaQPLzsuHZ+dkw+e3dIef7+tIjtm+B9rB
Lw+yi3Hm14cs1iBp4ADjTNUjeBFrSNccepT9OjHQMKXLUANHmKw5urqjGzXr
8NJQYyJn2M9YPVM19fyArP9TVRO0SLPw4kIkjdnoJrHfiTKmLmkCFmWCgjJ7
3szhIuGzTHzV73Du8bu0eEEZTGdk0K+SBv/GfuXKHZlIGqIMn6+HH/88GLY/
PR6xIfGy9dGpsOuFkVDzeQ4+SeQypmAM5jA+jDFo4z2EPxK+2ZM5NmZMZe6e
jDNunpnujWFJRBmTcv2gM9c3/deFdTH91oXFoGSKHUrGJ5PxkDKYydDXmMmY
MPv1UjFzIjKmUsHM3yVmruaYqRCYWT2R//af3a+46PXPQtI404Yldbxo8y1x
/DEru8H/5nC2pLzG2DIin3vzeOavH1vQNaODT4o7Gf7JfhNiS4Q+MT45OYfQ
MkwsasE2MQUtxx/sO05idLLlkjO4gXb3iJbuSMa5X9gj2D/+SKa55wKXyJFM
S3jnCj2S2dHISOYbj0hG3S28+5ZOsHVOFowbIFq5mkDp1Dx47tIs+PSmbvDv
RW3Z1Q4qF7eD/yxh1/3tTIQL+8YreGHfeBQybRS8dICq5RpeSMYcRras7Gjz
hbGleo3Kl05Q8wT7NT22HplSK1RMHfUjM7qwX3jrAEY9kjEbk8gEFRHT1Z5y
Cdl0sTWMwUVMvCZi8CotKYAtd+R7HV8SA14C+l75kwsVh3QJIivIJsNPcU86
ooSu8qfzYco5vXAm47v05giXOHyWSb5aU4su2APgpks+7HpxJGx4aBpHSZCD
gtEFKaNOU3KkGLSUkhrF8In4Nz8dEr8AwiHDlQZbhDH2Hn0un9DuSfvcFNUg
8/fHAqo/ho85ov6usUX9avNxZ9F8HHTGMiZyBT9I/ZQuaZCZtMwl0Uu/WFQp
GVvEful6ElXKLs/2ogqfwg8oUMFTUXDpZFv7VK4oUPleg0pTWgW2YQq3Tm8Y
npv4S4EhoaINTepQkeMulOpfRY+F9o/smUTNxAo8DH4QYxMLHucXNiVhMro4
XaT5QWs3cQxh/iVqmM+ef24fvn34or5YfnBU8sLI8BCjkpHyfBIljq3E6iDL
bcNp+gfmDspwjd1Hy/NXeuX5saYu7JKpy4teqYuAh76opeVxpC6Jeupys566
SAOs/KoUeOz8XAmMjUyPfHlzEkX5/yNai//3Pg6Ofy9mwKhcgsD4j9Al+x6k
mZal6HmhNvmV6ZL9tJ6FocPoYsODgePgow54MHAcWc3hcVTCg4EjvM6CB7ID
jm3opNKDlEn9051Vepg0yhKyPTB7kAV/16NMsoSckyzKUsmQa5QFhYlJQywh
a5/kuht6MoYUHmcr2G9KjYCDGgGVGvjk73B/ctmanlAyi91Mf5+OBPkeH4Pv
0xAjeKFE+Q4FzR7+ptgHhkB5b9MgmDd7PMycOVNqkAsvvBAeX3wu/Ou9fjyE
IbUSEKYYfJ3Cm4+/Iu31FU6yfIlpy67nRhJKfnx9sEQJ7z2W+qTkQmF/4abK
T7udgA0W8FkK1tUV8ZvWuGQX/6VgnX2WgnVyj0vGR3LB8CN5tgP7Qlet5Tfm
FTenwc7ruE74x8JkiyINborUaBRpEztFxELJr5AiV3KKbDqfROD+x8ZnnK1T
guZVdIBgym8ddiIA8tPIojQfgNgn+V5AjtaZvXIZbRWA+ExCNiV6zPGYUJne
l7to5/Xtht1gpn2syaWx5fUqOfzy+uGOZS1nJ5ClhYcYL/Za2OKT1z/mIId3
dNLst41OrtKjk48bGZ18fXN7eP6SDNobSTHSyEJ46bIMawRSyeoJG5WLLXQg
OaASNcd/SHPsE5rjF9Icv9L8I0MH7Gea48Aj+BgDB/udsdDBsHFopYYOjFEe
xz5iREc1oQPFBQOH0dxGB8NG7UZER2cbHQwbDf/XogPBgaJj4cVFntBwh/S+
8AhYR1mdDHiYHpLD9IBHQP75fTosXFAE6xYXYm/x9+nEjqaWBsGOrreHwPZn
x8NN18iOrgTY+thU2PXSSHhlTTHF+VKS4HqXveW42oU0zm57h36K7Wqxtyk6
xNDYIkOLiw/s/5I+1sYcfswK34z/CX1Fdf1hUjof8Njg4uVqeUyrKPoDX8Vx
SjCeiRPG+wn7lGDV2TK4tRVQrS2Di5AmHiJEY4dJIyttNBFSdmMOT+UfaQ3w
cGsondIT7ji3AKrZ3ZpER73n2vtWKjqqI6ADB+v/ruwixqUt2Aq2a15TeHlm
F/y6byufnSbQoR3Jq6MDvS4rSuHoaLNtdL8CmqVXjSsyrRTjCidSxhanUgp/
QVFTX3SwL6v3si8MTETaPqJPLnV72Qvtp2rHongm7x7tXp7Ju3ocinIaFrZ6
XTuUd4PePLxLTMn7o1ry3jR6GnJB7GnIqwo+rDRE4OMd3zSkVaPSkDeu6I4n
YlktWk9Mz4Yd13Sz1w3f1cbZ6kUNxP+mBmIGD6OjxAfSA/7zIEqP9pIfJDt+
XdZe4QeXHVUrOrj5saqjLT2Y7Di6BjnC6IFZMJMdYSY7augoFEYPPCpL8oOx
o+5pjR9GbLqji3r27knQHXHqHnuOkNlFXhshY+ryCljqoxEACYizc6MBJKAD
BP9IDyI2AkJkUJ1+Ls+SHPiCH9IT8P+CFkXYS2q+zoVdL4+EDaWybSuEMCGo
/PzBAEpQ4G+pvA2MVc+9b2dRRu8Ey57Xe0D4c37wiimmWARXTKFFanblULfx
oltnUTBvaRH2soo/Ckvr/TQdLW4tkmz7Wh5DkB8kOcZXAipTqHOPbjP0qXrT
jkucrcadI3paIS9Pi35EOxqtPUP5MLtdwvbiLXNyLZ5gezHyZXtJlsaTuvtp
3HEJbQBz9BbbQGnpAxR7S4sKlE8ZUJ67gMrkgmN3SKCgBrEmHnWgYHBinZzC
gdJy/YgBp8YElPMKea/xxOKuCBRuZMVLnsQUsA/uXQBD2CU7iK0dkj4Bu08z
lytgdzRzOUMQdVZ++ClFcD5TJtECdr/pxrWT9RDEa4WkRIpvCDLneEOQVvDX
q/UQ5HOPEGTLxRkwcwj/pZ4/ogCeuSgLflQCdnXdlzUnj8tYsHE4SI3DlU4x
0oEDhcFk30MOoDCY7H+EA+WABAqDycHHdKAcZjA58rgFFBIj1evYTRqjCfs5
qhFa5NiTUo90ljzBMOQZCkPcg43IEjNqG9dxiJEmnmIEh1HKl+VCyZTi/yqS
BHQpIrqESYnsSTcIJ0EBkPA33DDZ+0E2elY/pMfjC+KQJEFBkp93DIAdz42F
FYuUxqzSafTYvo/JtdrDJ15MJEpQBcqTebSAUgKl9JZCqHghB4FiipO8+FEs
KXjRZ4BfAImWFoSWDQ/KIZZsRAvtnkR3C4+AsQ6GdLlcAdXlMvxlS1CixWOQ
JaC6XD49xZwu5nH0FLeIIYnnaKm4Xyyau58Q9HBr9iYblrUmrCBe/n0XAx1j
i9EZyeLYch8bWWgH2I3u/ZKSLCt5AD94yqbuxgjOD20asquGFm1qRaAFF+ND
/+ICGy09vdGCU4+oVc7slWuhhYfrLaKF6zCiN989fDHTK4IrQqdMjCFdt8Hi
na7H+6frZHPZJ/deNigDBvYthrtHtvVN15dHS9cj7JI82QHJX2IMSN66IhmW
Tpa6pB3cNyEP3r0qGb4TnVsyXVePdNd2SIqEpHJRW4ssIlpHsJjIFSPDJguj
yi/LHGRhVDmwgpOlSpKFUeUQUkUhy5E1Klm4TAmvJ6kCNRItTKbUPtXZlipM
ptQzrDTofVum5yZifPh5EiVyg6TdtYW/pi/Tbq/IbVu+IgXRsnNljjg+pZH9
wQE9JDH1I9tPEC6mh8/lkCkmggR7uLaLHq6KTKx2P6SHLLigxfXuECjbMEmx
uIKwddVU2FU2Emp251oBio2WOEJLUzK7XGi52UKLPBky4MBJE1InqFLK1kwi
nIQ/FsbX0zn2kEpQkoRfsqMroHZ0GbHrFJm9d42QvXfRsnfTyks6+zcOd9Ib
h4NOiJg0mBKyOFJ6cU8oGcHE2SNtNIZUP9COLK+1F+RxhsTZjpdgSJgzxESA
4OiXH0LEQL1zhST2b+2cm0CDj+yLnVh/hiERog0+CoQU8RdpcyjzOUJKhwwZ
AgOL86OqE0TImOJ06Ie9wMVNXYehKAjhqoQTZEofvj//wj6daMrERH5wfFwS
Ez4iz8vH6/m6c6W9go+FI9oSPuYNzlDy9YQoU40RUpLzI6UkzaOmJG+6UpKW
us0VKSVh19MzM2D6YP7LOoNpkVXTsqHixnbwN498nZp+BT6cKYk88Vfs7mLf
oP9Qur5PS9cZPdjvusaPhyU/Okh+mAgP9qoKPtirMngY7W18cFGi44Oho+ZJ
jo9jEh8MHXXP6Pho2NxZVSXGSZUlSUKWNPWVJfB2N6hYJ05IeSvlvxYfvtok
IBhS/iy1aQH8SH7Xj+kEEu6GkeEFNd/kwq5XRsKGZXY3Fhpdm8bDzx8OwKeE
9O4uBAo2Z32LH+o3qFUq/5KpA2UMB8rOzbnC/NJAEqf2BsPOZwTl/oJv3jr2
UZEkkbwu05W7JzU6d5ej9W91iTBaz/0utyLpZCuS5noDl4ciCT/Nt+buvD4D
ScJB0o1A0lDamv0+83Xtn1+fpnpdgiStJEksJeKFEtpIrOxm+e6aZhpKPmFq
ZOSpxfh+RnJUYCpiTTPqFJH2Fw2ZcIrEE0UGFeV6UcSgwxrZ75ykyNSidtLn
Mvy7tfS8/YI+PGOf1CcV5vYNKQZXSMnbx3iShAcm/iSJNTBRt66gwzX21AIl
b0/QAxOPvN0/MGmmBSZeefsLYhvkiQYm0t16ZW4yLJmYwzVHR7hrXB48NyfN
PT3Cru89JhX/6QES55koYtmK4ezv5Vk7wwgrEhIkvzIRsn95B1uIMBFS9RgD
ysGVCJRDQoMcprVdR2htF4LkKININa3tYhhBi0uCZCNenVWQoMX1LMacHCSR
jkNpnAh5JZoISXCJEAQJHhRPFe61VOSI4QJJY1t8TxpI7LjECKog0fVIULCE
0QPK1rH74IuKsb3gx/Rm4gU/7xwAO7ahxTXDtriWTYMdz4+FfZ/0M+IsioQs
igQtigSIIgkRKMJkyWep0uKSa1tCVj/wOeecA+vuKqDIJBJCTGu0JDnCaEmS
I4QPqCE8NU7QeVz6pnsJEFOE8KJ1yz+Ej6hGcn0trbKbc2DKoGIIszszmZI0
4CUIgk1bL8/NhikDi6Ga/WI2xEiQgxZBWhBBfpYEoS0szfhySDFM8uGlrahj
q0+fPoIg2piiThA5R0LNXE6C4IrhyVEIgt1aaGcN65UbgSBxFkEu7tMMBvRm
z++dr867C4BY5zLa8+4jXSej+DVtRUrdPSMSBSI3DOcJ/O1nd7Ejkgip+2pM
3ZWIJNIpW9EiklcUiLgXrPhHJB9d3QrWX5gB0wbJZSftYcXUbNixoCOPSDxm
EMnJuk2fQdyrpu52REJO1j7rJJSAdRLKLw9Qk++DuLheDiGKgMREhDCY/MqU
CEJkPwPIgUctiCBD4CCu7TpEa7sOCyVyZG1HFSJQzZRIeEMnHSK4tqv2adwR
XieESL0QIg0uIRJ0ChHTeb6vrUOM6EIkzk+IYLlBVOzdmiERcpLwgWYNPvYZ
cuK4sRGwSBG0SGEKscEwAeuWFNK/muCfcQIXP743BMqeVJ2rAGxdPRV2/3k4
1Hybi7JMFR1GQKbtlLibFjhCYrtX1ccZUL6BwMFeigfQB+nfVR+ly+7fgOjh
wr5fXBL5/lNDRcYetEMQQgZ+yX07t0yfsZEkz7GRgGpdHX/E7rHNS1UdQWfH
lkljI5nEDDyVessljCfL2/jyopr92iEvXr40mxRHvchAPHlxtz8vcMZd5QXO
uGOH72bR4ct4YYy0m7HQvPIABuYe1viIAAYe8EjGlQTGFBcwmmjAkObV9OJm
eo9WnB19CF6c0zsLIw/TDxbzNFicFTVPv76RebrqW6lDhWf1K4ILBuT6DxWO
98jTY409ZkSLPVq4Yo9yNfa40o49Xp3bBe4dL9RFd7jjnDzYfFGa91jITc6x
EJF6eLDCmXrIM3t/cZzAKBcE/7qUunofQjjsL7U7szDy2C9gcYDDwkRSGG0k
KxAVcOjxjjos1rHrCQcsGChqNlqwQFZALe5EqXsWf0nrhdhosHei6Aeb+LVl
BQUouuoHm8T5aQ231LA9K3inG1S+IBaM/ClDsOK4G3ttUmAxU858P05mBOSI
ulNdBAQzwt9yzu3clofHLNJjNX/Lg12vjmKK4gILF+RQbR6PysOQb+CHtARd
ZzjAEXCBA4MOPPuxbFW+AEeAFEflexlyZISEBlpUKDKsiRGX0OjWeK8qSfGq
4pyrUthF1DC9x9i7+CTnnf2Tc4UYzXyT8z2P8JG+ysVdJTLYR9igmVRyLuTD
Bfxb9ffbkgkZdTReyJFRLZBxNAZk/CCRMd9GxuKxOWhS/dS3b19BDG2qUCeG
NhQiiDFr7NixlJbHSozzhFE1qbirLzEYLWb24Y28U/p0cxHjck9iDIstKB8U
W1DuTDrUScJ5Q3hovmhU25iC8uNKOmZFSTo8iCH9qTXT0uHqs3tyUiRD6eQe
DCYdtaCDj4Mk6uMgDmL84JGT+wUdSIxfGTF+5Se8IyEeQFWxX1kpz2hh0gxh
gMbPD/CMnD31AG3ROiCURRVt0WK8YLLCIgajxeG1khidODEYLao3cGKEOTFM
xAX7eRPAQF5A3abOOjFk59XvqyziiRhoTNHC+WezkBeSFoqq+L9ihZe+4Kxg
//tTOlR9yXc37d2RHcAHQoIZP74/BHa8MBZWLFYcqYcvoMf2fdoP9cgP9NZw
8db3qDO+s1anwJ5UX2Yk8nB8dwqEP08lkVEyg7x0KL2pEPb+ORPCn6ZCyfRi
MqTKHp9EzDj0YSG1XUXLyE/EmuoqrKmAak3hYyIn73JScvIEFzK2XJtHjhSs
aBMFGYmUaZRO7sluEgvg6H3tLGTUxIAMOslX3aR1tUQGHwbBnfOXDC5QkKHN
EarIMNGrWsBBUTRz5kzq2CVQKK1VNigSNVDg+MfpvcmP0tp1L+6lt1WN6s33
xFs7S0bZQYYbFtFj8QhdVc6xcy3MELCwdmEJWNzDIHEGg0XJ0IyosXjEMGOa
X5jR3BVmvDHX7UOpYcYLszvDkgk9OCB6wNUjesLTM1K1LEM7h0SBhXYOyS0y
zGgdUyouw4xfFrUjWOxnsNivHO6+f6l1biIc4HuwDD5vHlAHPwweibeQtCBt
cXB1Rzct1uGl0QJTDdqEhfqihmmLY9Soy2CBbpTExWZ2bbFwEePQx/Gpi5CX
uqAQtRsOvP2Z9/1UbOihs8KrS5c6f7rrK7DMaP26xIyANToYKzNMP30RRC6Y
SAjsqyrniXP4bxn4if4kgUGe1LUOT2r7cBQgBoElHt8Uuli4SEsoDS9q2NlG
kKjRyqIGtupilrF3eyYsvLLIIgd9Nf+UDTWfZtMsCDXsfpxNGsMUGxkVZBi6
zEjWxz9OxJ8KqP4UpVpdfCbSTdpsEu88wFeVG4ZLbyA42BXe1IXLvBszVHAQ
NkzEBrs/dIJj/70dYfLAYtg+LwvqGThqBTjC0cDhuxurKXw0l6IMuH9s1rb+
/ftLe0qec0Wxty42tKkPITYS58+fD317FUdgSIKLIWN7cYtqBlpUWpbRhBhi
KY3e3ayRD5GGU1+VMTxmhkQPxOPdWYYWiDfRsgx1ghAtqnNPK4gYiK+OOEHY
zHOfYmOzjI3Tu8FVZ/UUOUUePDCxB7xxeQd73GOBe9zDniBM9MwyVIg49yn6
ZBnkT/0qAHIALwaRAwwiBxhEJEDkkYhVfJmiwSfPA9bk4MHHSGqsRJioBtWh
NQ6IMIAcXa9IDiY3wrTuiiEEVzUwvXGM6Y1amhxkCGE/hvVMbxBEtvLLY+zc
+E0VRxwpDniXX1T3nuwR9eSR3xUgvqKDNAcreWVP9IQp5/YiBYJXzZ482PXa
KFQYtkN17WzYvmU8/PzRAGwM+hGlyQ/pqDuQG0JyBGT3L9JCi8MDNjJ2k6D6
OoXVURQYKjb2lGVRIy7iAg8rqflrtowz8NP7lAQeVxh2nmG7UsZJsKUCwpbq
QqigNAO/G3r+bfoPDKKweJF6pzzmz3cuFp0TD3ayONHAOeGHCVx6hYhAVPzv
H7oQJo5FwcR/LEw0t/aUWJi4EosXt7pWTUjDMQyJCW04UMeENsHBpUYcShMv
RHBCxLsIcX4xt6QmU++U45h2lBeIj0v6CHkR7+yVsvFgeVGXa3hYEKVf6mYH
Hv5wpl960cSVXjwg8HDLWTz2vu3s5OhRt89KxFjTC+lFIR4wvdh2cQdYOjET
zubdbogHeOKCVC29UKNuxMMnntOANh6+8Yi6veOLNq6hDYkH1BcqGqrwYvqi
ip+WizggN+qgPEOE3CgGB/atVwfLD8mcu4PLjEJ5IelwlJGh+kmLDiQvap7u
rNKB5EUdyguVDr9ddhFJXQQ5G97rBiXnFUP58tzASW2x9abBV67xP9ODBg45
wWnAPpe/p0PpHYWw+NazYMeLuue09fGp3HP6rB+XGi3wNQNi5lygIKSjIM4a
AyQU4MeUwgHQguJsdJyw+EvdUHpjIXy17VTeULthnJJnUyqBn5lHoI3fip1E
a3umT2gGQoBpH5p7YjYTPpUi7c72KsSI8URIQ0DJODz9IA9fb0UbfFs2Anyl
AqbYR5mav2NsAaw9Pw/qBANqFAYccTLA2lXVXFs48vVVnAF49tRtI3JhyZis
cRMmTDBG8UKvTfF14Qwo5C/SRjD4jt04VBkwLj/R2Tzrx4CZxUHoj9vTqftJ
YcBFvZtxOKA8EAxwx9chRxjR32fDSFzU+DpyGGEDYInHTlzUB9MH5nrG175h
xHnHH0Y8d1F7uG2MnLIrgPvG9YDnL+6shREqAHZKAFxjA+AzLb9O5GlElPza
aTB55dfSYKpiAKh6QBb/dlT8D+LFtMFBfly6idUfO2LtRbjsU2LVHx+z58DZ
Y4dpKZUiDdhjrPzjsJECgOqNDgCw4n/sWQ6AWgkAVvzrt1oAoPpvYv3H30p9
mSHVf5MaZUP2QhF7Xg9f9hpJBUTAGxYCiABYMKj4qNm1yK+VIXBEQNmDeVps
HSsFKIowT0r1D3hoAcs4+mAIlG2cBHPmzDGsMTxW9XeXD4ea7/KQDgn41JZy
BOOHdCz8eOHNuaoGTDGuJ9RA0B6x0NWASTBoTiYShR9MFeDx6nvfZOrgiiKY
MroXLL9tIH5IsH29BQQuCIJOQYBfQLr955GD4/TbJCkJPNaHdI3BO4pzekcS
Btw+ivOzj0znalyGg8oNQjDeliZp0OCiQVCjAR1IyHBgdIRvb+TDFZ9dnQq1
jkNuEQZHBAx+/YMNg386YPCVgAGGDY+Oz4CSofkpc+fOlTDQ5vF0GGiWEodB
x/VnnHEGjC7o6uqDpTk8ZRZPpYH0jWb2ambN4qEgGCkEgcfBtZHi6Sttt8ij
ockvnnYO4sWSOND4xBg+PoGpA6YPS8a01ROHCbElDpEG8V64SB+fuGU0d3tn
DSmA1eelUjxtj0+4B/E+VIigRQ4R8um/eeTTf4+QT9uRg06Eg4wIBxkRDjIi
SBocwosR4RCTA4ceYVRgPDAS4LA4sFZutz28Sqyasue3kQK0ZuqI6GY6Smum
GA/YYxYRnsJ7shrqe7WIsEkSoQvUcSLgb9cf6ddZmkW6HjhJcqDcKQfiLDmA
QcPCS4pgy935J6XZ1bR2EpqIgBgI4BMnWO7PIxdYBED3Z9KkSfD604MZATLi
EANNrfv/pvqtv1336dbftG79A1Tug5QabHmoJ01EWFN08RD+JAXKVuRRvcf2
JGxs3f3iMMX98S72sdz5e4zPdfVc6HFy/B9TaWXdcr1IlB9t0+gy34FakV6e
k03+z2H2q3ZMK/MteZlfyMu8tRNKjF1/f20z+FZs7nhpBncutl3YZf+U/sWj
eRnXZuX0Ci8nHcgNEhWeGlfPLMxsVIU/v7g9v7Xv1dWq8PJ2f2LvVMc28xuj
x8qn+i/r8IqVLc9naCMigVG25yNn5B4Y24qK/PwzM9wzcscdCTTXIoHlk1Nh
eD/u76ycmqqPNziKvHYy+XwZCbRyLxX0yJW/jZQrR4gE/qNEAgfELf8hVuAP
LcWLFfSH9AJ/GK9H2MXu+Q9TpnyYxqyP8HP84MgqOkOW3fU34fuf1sjBBrsD
6SiPA0ws8exposjT7GnNM531Ir8Z21e3oEavF3f8DSfzjv/NRt7x86GGdbcU
4GWcxBJP5xNZ1n/EUm/qN/tB2VH0gbOjKI67Oy+eA/s+PxX2vCPGmL/GA2L/
kdHEKvnNBCx+THO4/9ikmkpZccC+1Wea4JsUeatPWTEFpZtylI5UJii+6E7L
nHADByJg7sxz4KYFs+HHVwfH5PuYrqA4KUJQHFRv9l3W/5+V0m+6Bhk6+8xO
d3JOMYS38ky4rCTbLv2szC9vLUs/Fn4T6z4SgQ6ApcpvqKUf24qw9L80uweV
/hoxuCBLf5VS+nFM2lraJMaksfSvmJBFd/jvzG6Jfo0o/Zj6WoclaaU/KGcW
0PVHM4gb/h0HT506FYYUZWumvzwTya/641rZob3z0fGxeoq0e3ut+sf5VX9+
d39F5Dx44AkY/iO8DX8+25ZAs20zBubCiH5FVPxjN/yb6Yb/dLfhv/GCTrDg
rDz6abllVA68OLu195YmUfzf85ptU4q/y/D3yYO/88iDnYa/Vx4sDf+DavFn
hf8wXqz4H15GhR+L/SPt2Y/8EVb8j7Db+yPs9v4ITkYfocnoo6ussyvwLt6a
jKYVGzQZXb0e16JVS8OfCr9S/PFihf/YJln8+d19Hd3d19N6jQb33T01cdDI
q4yC7dt7rPxmI86tcN/fx2v39ziigNW/9OpCrP3GSW87dWEgYOW/XhhwDyhQ
n9DGSQQA3e45C2q+y8ebfSr/7Knlm/N5Skz/kn+mU17ALoNEQTMkRIKIE35M
i9eVgRchTCEKcCyagMOn3Ex59l53xIPY87f39UzYXDqenKDltw6Eyj+n+5xm
kewzqZDkiIS9ZEGcc6uG5AK3gAKqBYSvIgYWOrsGFkxqPW0pyWCdalGxTEw/
PtQJ0UBRcANejWMDdg3tKEknPvy/27pYbDjK2HBYsOGXP7SAylsd25iUFRoX
DiyCP4zMhU1Tk3GMWbABAWDNs2lsiJPTCfgU/Bv/jckAX+vXBe0jOF0OKjSC
EeN68TuD6b1awyyhDs7tne46sULrGQrYmUA/6QBdFnMorGcC8d6ZgCMUXuyR
CfAFGpwRt4/gMmvhyGRHJtBUzwSm+mcCzlD4/vF8AGr6IHR8ummhsPdIW8tG
h8JfeoTCVibALmcm4BUKe2UCkhGHGSMEH1j9X9ae1fUjTBscYdpA4uEoXgwR
R5k2OMq0wdFVHYgR1fbheAZfNB4kRsgVTGHUBrzdVIkD0AR6prPRzELEsc0a
IhAQUP8nEgjQwBERQ6dQnFenkH3iasirUYgixm7Yoy87hd5TEPFBd7KAFl5S
FPDvE/qrq0/od+KEOq/2sO4HiW4grPoB5IRkQtn6nlBycTH9K4R/IkDSm1h0
iBez0z8iDlQ64CfyXSrvPN2TyntQA5aDxOVEyJITGBujiWSt0cBX+DKFS4kv
yDGq6I59OIwb2Ee09ZGpcNFFF8H55/SDLUvyIfxhiu0mkZxIts2kgGs1bFLE
iYWuSpQcdC7TMO1NGgHVSSJ92dlnYgF1KbURCWaUjC+ChRPYbcRjbYgZYZxF
EMyofihRZ0ZXqGcPCWbw+JhpB8kMjI+vHF4Ej5+XR8wIM2YcYL/TRxRmaGuX
rrOZ8ek83mH6xOQ0VvMy0BAyBDS0kTYNGvFoM8kuU0wMEBz4mHJwXpufTuvb
x91O5Nji56TGjF7NSEmc2ytdqgq+wS/OCxpyf1/IuElzlPyPqoiLuFf8Ngc0
3LFBk4ixAUFDTLWNP70AZp6RS9CIFhtECpKfOL8TjO/PW+ruGNPDMdXGoSGn
2rZrU20teWzgESR/fBxB8g+3u6ERU2wgIgMExpGljA4MGkeYqGDMIGIcxYtR
4+hynRjVeDFqVDNqMGKYiAwkgn0onsG3iQfUvX1IiY00qGCHyOyxY7RuyaIG
rVtCWRFnU4MRo8EWFb+zpkBolK/IxTyZss3fv7vUtEbaTIsaprqoD5di6P5S
SO0e4r2mf6cE+e8ZQSkn9mZAyexiWPdgIb7DvRnEj4DFj+bWTBzxI87iR9CD
H6bFDxIb+N35JpXwsbecB80V27IRHxo9vlToYdJkdALhY8Vd04Fmq049FaaM
6kWHfId3pEh04Ct8RBGzHTvLYbck7kTFqU6UkBzEDdNqQdXWaXSxsMFdqIBw
oToTNUzKm4POvJljowlho3IjT4j/dlcKNDBsNDwqZUYbE3UGulGMGvWMJPWl
7HqI0YMxgz1cryzrq1uSaCIyjLbw58syYfKAYjjIfodVoXHgDgYNddOSsjkD
oVE2k98Ub7+4Ldw9Mgtn1CQ0tH1KOjTQnLKyCWxF/fe//42PqdB4+/TTT4fx
av+RWP8aCRo4noB2FDYiCZmhQuNSP2jMc0HDM2sW0HBmzXYMEe8bQ9x7NjpR
TSLGEAgN6jxi14IzuZBcem7bmKfbVGg8e2FruO5srrsvOKMANk1vr2XNFjSU
pa+NzpqvdWbNifZ4mytrbt2IGKKtK4ZAaBx9iCmMo7Si7+gymxfVy/FibGDM
qH6UeGEiMJAHTGSEmcgIkxHFiIHuLZ3A3ZEOUa1ZzwRGDaXM9nIlOuDoaRyD
dgQQJDIYMqCWiYw6bDplvMDzKSQx9ADCtPKHric/f4izJAZeO9fkwJSRvRrN
C9PqPDqJnBCtQ2J3Em88VGbUeBTN/gzafAgSH8Lf8+K986U8eoBeFrQQ0QJf
KSCm21SJERTR9HepnsIiCFtKRSLN59qiUgHbkA79pRAW3TKLve4k2Hp/LyLD
wsuKYM/zWTQBbfo2I0Uzo7pGyKiDkg4eqzMCqhOFz38Ff0btjNrKKWDh9EIo
GVWEaDCRDYgDISjqH2EXziTUUzQt6AB1TFDUYTRdRx1Igg6kJ7ADCT0o/M58
dW13K6OQeLC2ZNzUXF+sNL8ZPHhuDuUTOy9NgOkDCnD8TOJBthlRCK3n06gh
qBUV/7uG44DaUWUHUiw4kBPPmE3jh04TbL1bcxwEVBwYvPfoKiWYCPnH0lrv
UVyUZCJeTyaGO5OJJv7JxFh0nRKsTtTSc1vByFOL4JrhGdqkmvfWPX3a+d5z
uMt0Zr9iKJ2YQs6Ts/foVcEDZyz9tkcsvcMjlv5U6T2q8OCBVywd49Y9z2RC
8ABxwIr9MgwjqhkPqh+xWMDq/aMd2C9ImMmHMJMPYSYfkAU1eD3OLqYfatYy
OcFggJLAPlMb6z+ZTnLtd6014xxQe1ANnkjHk+nEeAB1TD7UP9dFBcJvm0k0
8dQP8BdOBH6kxG/UfWrqk2g2A7Dn94ti2PWKugdJ+Eqbha8kRhJsApBAYK9Z
+RnfZL53ZzaKo708oojTGWAQBJABeNHAsyIYAjoNTFsmBPHgVE6YzTkIA5Ms
pgBfvUcwIEx+QegUwYS9QSkB9r3Tl7Lr7U+Mg72vZMC6O3ryuYZrC6HyjTQi
wom7TAHXwEKXCHsx6JBU22UiM7Mzzl+I7LryKS4VKv6QRlKhnkmFegaD+uV4
WUAgHrCfZ7KY6h5KlERAIPCzhmjXXiuaUkMk1N7XCq4YVgSrp+ZBtYisD7uG
mZu7tmCMOa2Ylia9M7sl7dkbw2u+NqEmcFDAXySnE2h44VqOA9qaNLJnN+92
pQg4wBACUXBW71z7UIigrg5EBsGlQQmh4IoIHUpcFsS5A4jBjgDizEYEEKOd
AUSCNrR8xdAsGNS3GJZPaOVawLreAwWrJ3eC8wcWiCC6h7tDSaBADi2/7kTB
CYfUie6ptFv1ACLSVJozgFBRcESgoLq0PZIAOYA3+4+gTggzFoSZLmAoIBDU
4MVgUMNgUINeEiMB+/YfYyw4xnTBMaYLGAhMJAGuQVIOya59ymIBbV2te7Yz
n1QO0DiC3XyK8XQ8OUmIgnqGgQbfxqTjEQYhmwW2MKD2l25466qED5IFFU+J
ozn/nIY4oBL127YnEQ3QKnpniDhRThk0YzoAV3Dv29WPF3IHCujWn72bPe+J
3Rc/ZAL8E7uU9op0mmfT/6CJNpULTSxZwE8eIl3AjSN+mbo8YE+oeFFE0x+n
W0AwfSOHlnI3khhU6Aa7XxhGRNi1ZQRFDnvLMkgloFrYcl8+VJWnuJuYkpQm
plisIzmt0IVQYPpvuhCjCm3cowpMHKxbkE+iAFa1cYOAQaAOLwaCumWtEQMM
AuxmuY5Mo1rGgdoHJAOYSqgl0wgH1bBz6c1LM2HSgGKoEknDIcTAH9yDaj9c
24ww8OpF3DR6Z3ZbeG1GW9pnMZbXevwZsaaRO2sY0E7M5hhoSzuRfLtWY1QF
2LE6h44ttUaU3c1K87gmkKMIrtMcHMsrbjjjBDKFkREyBQcHloztSJ/HdUwW
+HFANivdMILfWyEH1kzt5NupqnPAO4h+9wp3EG0Np7HLN1NoRBDtf5RDW2tx
hZYpCAbgxvkw40CY6QFGAahZziRCzQrcUVHzqI2AY6vwYvWe6YFjTA9IBtTi
xThQywRBLY0h1JJBhCCoo9Ou8bE6MogECGg/Xr0ylVzPU2iTelSbWXoAQdDw
Qlc9hNb1gMEFQVARBN4htD2SLELokFcITVWGtrgxDux9IVNywGUQ/S4xNBLh
7SFQtt7RlbRqKux+a7gYOON9rOQQ0eq8DCSDvGxCmAgFzKSfFBsu6F8SFAl6
MM2e/FOaI1igTMHCg2GLBcmGkpnFdDC2iKWjsCGgsgEf24Um3a6tI3i3a9kg
iqMxV9i5PttEQLAX73wiG8LvdVfEQpKVKjTOOAqoxhE+5jHcwPHAjaPmFhsq
nxYC4Y40jQ11jA11yy0umAgG9iYRDbVMH9QyfVCLjhEDAyJCHN1wjA8wmwgG
ozX861ZuHH1xdTcLDb/+oYU9tnajHFvj8wwPjcuB0acWw0dzE2DDpCQKoQUa
tJE1HQ0yaqD84Dp6rOVPQ3r3tELnWLEwolc2H8WNj9ShZOgtSiHPFqXjDg6G
RQgOGkEGTJtnnZELo04t0lqUVDLcNzYFxp7OE+W7x6bD5gudbazNvXeoXqKn
zX+OOW12k+ELj7S5McHB/8YQHFhkwGMZamgdXg2BoQNxgf2wPtqB3dwdY2Q4
JsnAqFCLFyND7RqVCh2hjpGhbj27mDyoe5KphToKmuuZOqjnZ4sa8lwf61wG
CpobtqI0ELMLonu1i8euipBNhjInGUJqa1IjrKKQV38SORPd2csqXxWbuF/M
RDIgFwyHY2SelNQAi9K3aXBoVzHsenkkHi8tdcGi22fxo9x2DMBXEnmzQyEE
rPofEBW/dGERhsr0rzj8M14Khb3pllAgAynBmnDGt5cW0kOEgC4Q2MdZuUNk
yUwjMAaY1M0ax8+w/ipFMY0IA6YdICRa8kAMOJBhhBj4+fX+oispGcKMyGWl
eZTbLJxbCHu2ZgoOJEX2i7rG4BcFVL8IH1NmHTp7zDrkkDyYMrgYYHVbHQPL
NQxALZMHtcQAjQNwjOmDYxICS1pJEFijDTX3tILbRhfAyil5FB1IEsgWVnW8
AUmAPtGSsTl0oOidI3iyLEigHeKjk0D2rtK/OAk6rh82oL9302oEEqAwwLYj
9IkG9S6IHQXWvPJ8nwMYHJnBIEdmMNQ7MzhRFNw3hoP4njHJdrfqFMyTE6Fk
GBfB84fnwNqp7XxWGPmgwKfx6B2Bgvc9MuS/emTIXpmBioLvBQpi327X1jKK
HBkyoaCGCQRGAjjGOHBsOV6s5q/ogCRADuBd/0pMD2oZC1QO1OHFWFC3jjhg
IgjY0+oZCuqZQKhnAqH+qU4WCxqYQGhAp6iBnCKBAuV4noA6poyP+XSp0sui
7LNL8Nlnpx26IJyioDM14CSIg6q3uEW+549ZkgQnOTnA9/1NGvy4fQjs+ONY
WHTbLMsaWjmV7KJ9H/fD56uHTHs5RQEREhMHpozrBeVb8wH+lYGxyD8xNCCV
sBd1wD9wwO3vGByL6m93qeIAnTMvwMz44Z503DTTAlb1N115QXeRF8SpeYFQ
AVT+TRpwY5/asqmw6OZZcOg96n/6azJ+kB8lQ+XrabDutp5EgbKH8hqhAoJe
J4SKQQaPXRavd3YogASo2sp9mIqFaXbZX2mX/VpakF37ME4qKGUf75eWJrKf
xGPOsr+4FXtZzaJWRhvaWSE7UF+/hPtDv7DfW9xbYU8uNOeTC6IL9fWL+cfz
3iVt4f05Cfsnn158Di/r2CxkTbTpFR8lgTXQwCv+Elx7pPUOqWMKXhVf2kHn
9+4EU3vz/8fDPX06TeFy1RWKkBJb0YCo+Dd6RAN+KfGJVnycT5g2MB8uYJes
+LeP5L/cQ04pppv/p8UMm2tDhZhPiJoSX+ZMiVs2OiX+yiMljmV+zeu8Hb9o
ICwq/jFR8WuXY0RQS4vqalnFr2V3/qzeQ92qDqyir8Y8uO5xq9jj3TxlxPXs
xr+e3fjXU0ZcTxlxA6v4DaziN1BG3EAZMav4AJvwWGjK4ygjBnWFqTq7ZmXE
IS9PiPo8qOy7BxMMlylkl3y3KfSu0xSKJ1MIdvCLCsEz2aLmCzeocdFAvNMD
wmoPu18dDmXrlD6gx6bC7jeGkx9kWhsrzNgrffhHfl++5/0cLIz/QrPnnxmy
Y0gt9yHRVKre7Aesm30q9xgKf8l/Kco35smmISryYgm2PoXQPYLt082yffCe
v2ZnD6r6K+6cDjUfYtMQmngf0fdrZzLd7lPRX5oHYX7U6gne88c5M2JZ+E2K
idtqwwhbbs7jt/uPt/Wr/Vj5qe4fw4vV/mPsdp9Vfqz7yADqFKphtb+G3e7X
iB3XVt2n2t8S9t7Mz5H+fEE3Wmbxi9ItpDaTlo7LoVv+Ty5vCq9c2BIXDhnn
2Pf0VoXXi786fSCKfydsMto/piDJ6hQ6T5k28Cr+o3tl0e2+3F6BZ3Li0tKI
YwZX+td+LQ6wY2HP2n+cd/uRomFZ++8ezWl664g0GH0aN3muHd5DmU3zqf0+
24midQh5zqUt0OMAKxZm15cxxsJ6HNDGfXLOYr84oJ00ffBOn5V72lFXy270
WeGHOtpRV0c76up46afKz+r647izop7V/np2o88qP6v7HaGB1f4GVvsb2J1+
A5o+DWT6ALvRB3ajD2T6AJk+ovQrhznHO7ZXRzF9XHFAyBkHKKZP0JkHuCq/
Kw5QKv+HvPKXP5Yr7/RPLAcIWQz4+d0BsOuFkbBh6TTL6Wf3+rD96fHw8/sD
1FBAOc+Z3/fb/o/plxBz/yeI9R9JwIONb7Pi8AG6/w+IKQMBhGZimk0Age7/
cQ4OPwgeBnyfqocBGA+/JN7wJxknEw2YFCMeUBCUrZwENTuyTHtCLQR7X8wg
NpReXQBh/C5G2HlBLPBdcBdrZJwLVX9UxEAEKBx7WAWCDYUaJgZqmBjgQLCh
IM/lDAsxUM2ggNMF94/rCY9NzuNjaaJf6GerXwjXWyQSEHDFxceXYZNkBk4g
CybIiTRy/HUmICqs4YLrRffo+H55np2jXjzA4YERvbKtfXXjevM9drP7NOPp
cEDFgcF5cC3x4AqPsw0WnCQe3OPHgyitQurY2eBT+AKiSf0L4LFJ7ew2IcED
2THqu8jIp01ICwHmnUg8nOg/cubh/Px8fCEA6QCGA/ZDjRcr/BwIiAOop+PT
6lchGOpXd0QcIAzw5n4tgqFhnQ4DwOtJdjEhAE/hkhjaUMeAgDjgMLCBoFg/
8YoO0ICgNAkFnSmAiwdvOHkQYwjwvjMEiLeAUHJ+Mfci9HD4Yyxz4Q9TEQo0
bGbGFAb8+OZg2LFlLCy6dZad+D46FXZsHQuHPi2OPnIWsPJgLwSY5PiIHHhc
L+n/CAig/0NOEIdAc4SAqasCGwJ2BIDp76xiKL21kJ+UI0q/aR9xICMA/CJ8
SbVe7DnCym9SDBBQYwCDG0FxVPv3bRd9pGvH6cPJIUoAKl9Lo+/BwksLoerN
FCOKEeSx1GJ7F8sLMl1RsG0EGa1gyy1CB6xpG3PZr2Elv2YpagBW9NmblmU/
zMp+eHErE2u+0Uav+nfzqv/anEyYOKAY/nVLB3eX6LXN4I3ZnEIfXNoWPpiT
8NM1w3qeq7f/0DiZXvGt1dVKxZ918dkDY6r4eKoNvsfxvVKtij+zN28SHY/j
Y3bFv0yr+Dlaxcfq/ttV/CYxV/wVouIvH98K3R+Dx9nDYNn4jh4zAjFUfFdD
kEfFl7HvlXbs+6FH7Os9L5boin2/b8S8WKxeP1b8Olbx61nFr8fhgHraVlfP
Cz400La6BnJ+GljBb2B3/w3k/AA5P8AKPqynYo+PkfMjCj7Ve5MEQJxd8Tdr
Fd90ef1dhNcfUL1+fOxlKvqyI5R7/WbU/dShCFZ/yFnwqdybWO7xXbGCv3Bu
EXUrsoLve/Nvevj87KPfXTYcytY4+nlYdUfXB92fSJMCDnffq8QH1RJfemcR
rFvKSvLPlO/+nGHXecp7M3jmu5caQ9Xbfj5vhhUfL/oXFwCmLQCaqQKArqpd
fAQTRYCgALtSSAOY7jige8xxgElbjQIqBgxuDcVrQ8bhd7vDult70m7xvdvS
I0gA77V3pm8U3F5igK7wi9zxrrgzLToHGANq8LI5QLf+4QeQB+H7kQdhdusf
ts9XNvEkAyPRuvPHPqCfbuK20F/mpcI+2Saq9AI9PJ7bQZ/NawplF7bEPiDB
AW1uTHCgJ3+RNijA0+GW1CFKUYBHd6jKgcnF/IswrVd75ICJIDD46TVoCM3p
20waQYYyHdDjd7ztbxwElozF6jXq1CJjBPv/LjD61CK44swc/xV2x9n74xn4
smuHK/BtFTXw/TZC4NuY82oi2f8cAh0QAtDAbvkbcFq4gaaFGQQQAeznnwo/
u+dnv49rOyICGAA6qhAgBJiIACwcHAL8ll+97ScAWBBQjsEM2Lf9sY6INaIj
tPHmP0Kg9JpCAQFhARnk/vO7/U/Uu307AcCPqiIVft4+AHY9NxI2PGh187D/
he0bx8PP7wxQol+vMYGAh+Hji4KAQAGlvX/MJxSEdBQ0cdf+v6fptZ8W2AXo
YAOKA3jp/54sre8wx7DC37+lxlL6lSTY3/pJcJ6kDLs2j+CbsP80TD/nDH8W
dmD970b1H62gPZsz3Sqga8wqwCjyS4RtBbC2bWzVnyp/awiz6h9m1T/Mqz/W
flIA1az6V7PqX60clVytSAA5KLZkXE9Yf34OL/83262guxckwlhW+h+bmAWf
Xt50/zOTu6ClL8q/nBOjGq+Xf21A4EZ6rMVPEws6eJf+Qv2gAiz9YoW1IWv/
9D58vfXUPt302q+1fuJj2O8zL3L5j5QAn2j5d8wK33o2P/R22oB8sTeiKdxw
Via5PyuF6+O5wfQk9vvI8v+RUv6tBMAj/f3GI/31SwC09HdR5ATgqJ0ASMeH
lfsVVO559QcgwwfI8AFe/qn4m1j8sVDK8r9eK/9U/E0s/vicp5XSr5X/44wA
IvV9uiIA5yllyTH2fdqWD17rbiugSVbN8iEVQKfAp4jVQimWGsCHP0+FH18b
DDs2jcVtCdY6oOVTYcfmsXDooyKZB3AK+EwFRAgAAtYBBpF4YGXCH+Sg+yN4
EC/Uwz/TbSgkxACFpjYUmA4If83z4bI1+fbZyRwIZmMCAe4KBaUUkM2hXA2E
xNkHyUQFGhl4aZBh2sNjIWoLQiSUPZhLSKh4MsvQePCewgPTFRN3ETFxB7+Y
GMIv8VvgnbdnRKbBCp0GggQmogDn8BkMqu+3QGAiCYw2xIKjdLyBwgHRCFo+
Nx0uG1rExwJubs6bQa9rDm8JO2jH3Law45KE9a/Oyhpvu/zWNEAnjQPaNIDg
wLbJ/Xr4TgJIDozulckHwpADvWwOYO/nsN75MLh3gRwQjsCB6yMMhzWCAx4D
Yo3hwLyh/DzSa4ZlKEvn8O9E4gAmwRuiJcGCA43tAnpPcEBz/huZBDud/5+E
D7TXcv7bRHX+vZJg6fyjD8QwABW3sZ91BgLgIEAMsJ/3DioICAPcCIrXNYDu
/ONzTqL1r8wH206Qwa2goNP7d3GgUdZ/yObAzu4kAhbOLVJyYCMgPX/p+/Mw
+LNU2P3icChbbXf3lD0+CXa/PJzcIVMeWYO+UbTVQQ4zyPSe/wrp3UBBUf5Z
2ZcBMOoxUf7/P+7OA7yKanv755k5qUBoIfQkkEIIISQIgiAIShWlE6RK76E3
ETWCdDR0RYxgF/SqV2O7SvRao1dR7EZFjWLJVTEiGFRc315r75nZe8opAb3+
P59nIjkJIeXkt99517vWihAnhIz/aFEB+KwlVQA0C/pR8p0AHC4WH/FQqjFy
7kOqC/M4qHUnEFY5INFWDoiWtt40p1JA8a7hRP/vnuqgzLgmAfBiMyjdw3u5
S7a3tiJCWlh14ATbrQC7BbiS3QL0ZLcARfVDBv9xlPwM/L+wW4Bf2C0Ao76G
2McDQNwBnGR3ACfR/zlJ/o8C/ms5+F+azWdDH1nagMdBRSRo21Du/+AKs8fG
xeF+guDgV8L/AvzzJ/bq4BkDNcB/YXu+xcAB/nMiYJSIg47u0DQI+BeEBH63
6RC8/yvqjME/smuWNaJaLCnbLcCPXcHL+qZR9PMmdhPgBX6rAMDB/3BYESAX
8KP4dyn5kvezVC35Vmdg3HeBB8YpBQAD/B8WcEVXsbG5DfwE+psJ9Bz8XP0X
NXSpAETJFQD1DuAeqgjcS4eBZf6odwABSwAR8lAII/uJb3uC4K8OhtDOQgkA
wY8hoPzRudz8iZLNH0L/0X91hUP39Yd9G61AD65yP7hvCDlASuGXsE8GSUsj
DerTvKoBnhaQHoD5jPJQfDsVfXEwg2C+8S6C+dQHHGEMsm5J0X/dYr7fZD6W
ewvm5WhWC4AejuGvO+YF0Yog0f5l7biJNNu/Tr2UDgcKR8KOgnFw6oV0C/Qa
xX0iiPR5/dpD8aZMqMKfqOH2h+L3aGT2JxDhqx5pxo+M5elhEZ6k/fUK4UnX
n8QJECfX12bfPUF40vUnrmOkP7E6Due/C1mPgc93F/F//ZMlFuE/WMAtnhuH
pcObs2OP3TGiiW8oZ7jS26XiXUn6c7w3JHt/aFadgHhHTY8ej8C7WeZFvE8V
2r7fOZn2dD/7biPc55kJTwXvXex4j7Tw7tLT5Yr3PvLgB3e8Xy/wjluJcUXZ
2ksaWuvJbHjfPbwO4X1Fv7QQ8B5Goscc+BDnqO++egb13dA309QPOPTnlC3R
88uWxrSWr2RhK/yNIW9f4P1/5O3rsrePjxUTxlW8c7pHyNVdw9zHv3KQEK+O
/SG4a2IFMUe7iXdO9wiT7qW3ckUrp3mOFPeAg0WDMYhoVW+3jYSX7r4Ujr+c
U+35P7Kl81EAS8fiuxXoIb5r5Oz75ZIvXgx6X6Va/o4u+rxk2OOHJKuopW6D
fQRUvcfPfRT3Yp60EPYRMuyNiQ8+hffvJNldfn+A6m60CXqC/Yvp1AdAsH8+
3WS9Llhf/kAKsb5wfjZUHUTWNxWV3Uh7ZddAPTdzmjrMnP0rhZa/tX71aM9I
fxIvXC1AtK+NsEfUs0/pBE11OEG4jzNXlRlqHnn/5fIEbiLNToSvRLLn4BRu
45TOqI+THebDVfEG75XOLpX3Srif8z4OKwGfXpLb0jXWg7wflxtL/xQunZF4
zxV9FOEe7XxautKxkQvu5//PcT+5ewahfs2AhuYSejfc4ySHK/pxRX/ryDoK
7t3iPKaVL3D/eDXiPIqVv8itkauOUsn1svJdG7k8rPzjkpXvhnus5N4yIYvv
0LgxQfvTrPzGAaz8JjYrX5etfHzs0Wb49xxNXGfLyo9WrHzkPTZz4dP80D29
MWSuC7wX3zQc3nuoNzfy5UYuPfxhPg7b3tXE0cUeMTJwfG6010Wkh6q692ch
5LFc+hV2dgnUayrqY2msg/GRW+Ll00zoa7LC37+N3SMMbK/MgMO/abn4+DeN
cKffNt8hSQtc1Y11VHUNJwcrusefzeYJnz2DnQIfO70qiltQvKdgajuofCJZ
Fvi6Y8pPE19D+3hoqCoW4v6KVmeGfMrvMOCzm4YTDPknGPJPMHXPgC9wz5H/
s5j8/LPAPcb3f7ymFn0Oz0xrwSP8S2rC9qGtSeK/NScWnp4QnTztnk6C+JjU
NGW8Snxj+xi9tlw49xjd9wpx5uU24n27uQ1k2gsD52py7id35C1d/TpkuvTu
Rnjifv5fgPsFF3FBcm2/JrB1UExA3OO0BqzeIu6v7J8WOu6V4E6tkIM7lmMf
qHJbxznKrRqOvVflFsd5VkmTGgzcGwZO+dpkN8ee416XcY+/QPsI75Zhr4r7
uwnv99BoLEPcH2ii9u26G/YaGTe67NeLoq09tIO/+/+imJ/3kIaw/Pqjj3Vl
gO8P264xJi3rsG/DaBL1R5/sykM75EQg7ZNtfVs2uyawS+9p0miqiLfqsgbW
qz61irO1VAXvo0MAsY4XfmFfoIyXtLwk4300vA2q3udxjeJbsowarc22ST6L
Fr3fDnZNrINBh16wXUW7RjHNCDJtila0hfyRuYztSaHUZhuaXC9ek0kyvvLG
JmfKdTjBZDxjOsr39bXZJ2Zw/WfG9Z8509nbGNXZU9+Q8ZXXMK5fXQumXZjD
SNOKQvplC+vCwC65cNvINHg7P/bBj/OjhnFwYxrHDOcLpmepoUwK6F9Bj8XO
H9LnQhieFesayBwugpjjc2M1hDrDuGHYkGkjBvEM6ZACnbErq2NdBemzq4F0
ZQhPTwvpjnlsMtL7OZF+VV8+ZGdZ7yRRiJWQPsQd6ZjHRMPmQob1PXnxroH8
QGGcJwXSQxnFYEf6Gy5F2HDar74SSA+0vMVQ8D8zpJ8wkL7VQvpv2IKFm1u2
Nob8/jlQnN/aQLrmacU3/JtY8YHMGr/drNHIrYmWxLvp1cCRB3vAwZsHw7rl
Ewwf5ta1I2HgwIHwxWPtrSCOLgdxyGcm4r3ZgnKY7PJpYVvwYZk1OnI+QuW8
X3DerMJ+mO6r7eT8lykm5yPVoqyd8344/Kj4UG+mIuM1ymVGWvEbNZOphW/O
R8rmvIx4jYbzRBiBTApnLp83GQ7d3c9nZ3wURfGJ81e0JQOn7K5UY1qDT7Mm
ODczzHlTv1c9Jun2vfHhMX6rJ+NJt/+M8zd/XosGvYR4OL4qTkO++2oQ4VG1
H2OE3zqsDay6JIvi989M49bIqzPrw2szYubXvS7SN0xNVwZAPL6LgXjaKH9p
dlPX4OXFImgzIdfPEX8NKXc74jFzj4gfxlAfKuJNk+b8M0f8WhviV/bheF/C
8G5lbUJDfFFeHUL80r6tAiC+poJ4q9zqjnivnM1/BOIdfrxHudXLjw9WbkXV
/qML4k/yIfw0Y1NG/OmdCfAIwzt681U7GnPV/j/x46PUrH1xU5cZ/CFmbGSD
JtJh0Ly3vxcc2DySmy/RULxjuEh7J0HFE7y9qOyBVkapVVNGLeCYhTfpovwg
8e+tFkh26+I2jRaKDx+GR2ODvOLRMKxD8R287Mre8FWaRfpIYdR8iVQXfI9S
+a4JvudPzIX929sacRstoDODX7gVsJTdeG++uxVfdcubMdc68mE8DO4E+SMP
XkBZG2K8LnS8wfj9q7KI8Yf3pvu8LZq2JuJNCX9TkzNHPOJ9I2M5Q/zPHPFI
eOL78evwYnznjFclPIP8D1fVgj0jW8OSvtkUrNwxrDVMuCAH3pkbC89MjE7+
4X2fAXmluUqFvJGqpHS9gDyN2umbm+Zafe3ZPgt6tc+0IB+jFl8F5DFQOVRo
+WmdaggXfrEr5OfZg/WhQv6iYJCPJshf04dP0592QbpZeA0H8jhaB60ZBD1u
XHHvqQoAeVuY8t8hZGpc+6kE5J0ufGj9VHZrBiFfySD/E4P8cRvkxYR9GqJp
QP7Da8UMydUtDchzxusy4/EXZi810jpc+BqBXHhVx99PnP8HcT4kF14apWb5
Mj5uzPjtxoxG7VSRVr2VXUcf6gqHbu8H+9ZY3U5rR8PB3YPhaDFZLi+TRSOG
Z1Y+k2JwnjiU7OnJEMhacMgr8UktRA8+sEXjSXWNDHcdClflQNEN7RDq+I9/
lcbe+nUaI/jXyHcB+Qjx175Ei0ZA3k9uPL5sabjxJvHZd+LwY1zMV7yazj4t
qdOqusTXFDs+UbLjddmOpzI3rV0Rdry1n8tPtg0i/7snO6iqXqNcZQRF6kt3
85UZpTe1skv6Rqakr3qcS/n9+ZnsqRwfGut3BWH9BpTwtGXlOEP9cYb642tU
zP+El4n6WuTW4CCdJyanwOAuufDxorr0aR0Y0xLenRv7zOEZkb7hqmCnJioF
837DycHiK0p9Tvr4B3t27exKeRyWg3J+Ag7PYXj3ytgg5id1rMv1fMcUTvkl
CuVJxv/JlF/Vrz5065gLw7tkKfGa4JSPVSi/d2QdGNglB2Ze2EahfPDIfC0z
OVlio3ywWmsg8/3DEMz3rxjhv2aE/3atRXmst37PKP+DC+V/FrvZFcrvaGBM
T6PZCbhQqGhilkF5qdhaXfc9KpD7ju/zAKHeEZd3s9/tPVPNpEJrtFuhFY7s
vwAO7hoM65ZOMIcSbx4Jh+7oB8efauestZYmWUOSX+Vdd4fvyeBeTaTaNMVJ
7xigYMl4es3dgA/VorHpeM2F+H6RrEEdzxBv1FyR8mnRJuqp8KqLEL2s5/FD
0gv87AzE+6FgQQ5pevTnxUgF+nLUpe0h2PNJwp6PlO15oe0J9JptjpqbO28w
HqM2B24Yia4aHD/Y1s74KLNtCvlOWcsNmVCFCsAI0HNN3whKrhcr1HY3OZuM
Jy1/HO2a4xSsQcb/xBj/02ob3yW/BvtlsdKKn87ey/j59NqseHhjduz8mtdG
+kZwxis5+YYy4yPwYSy1Yu4G/09qn5dbo3HSAgzKbqSUW0e346GaQe3Z05aR
3rcqIOdxVs7gDunQjZ0N0zvVcHg2IYG+u21NigL6KHWBlg30a/rFwaWdswny
ZrDmEhfQDw4OepyMtvoSLmd3Dm8KB0IA/RMC9E8FAL3beAR7lfXtAFVWuyXv
BvpvGOS/XecE/TEG+h9dQH9SLNCtMkC/0wL9wUWtuG+zs4ncF6WZ83ECWfKN
Aljyjathyeuh2zXWdMz37uwFBzYIKyYKircOhyP3X+DmxpPPS5h/WcK7QHz+
6FwoualNCHZNhGrXyG2wwRgfrlfjd2G8oeqrPuOdgGUvZmKoRlA+xhT0aNiQ
dcMpH6lSnqwbxO2nLaHybTEQh+l5Wr4rQK9ZMzMNdx4//Q/o28KjlLY4ZZLN
offb5uVwymtidr6EeHz/V2nTgbDnjXk5iPp960bDjmvGwal/p1sjMznq0+QO
WSi/T8Qt52ZD1b+aS9FKpubZsyh/RA7sn8vU/G3xwWm/OzTaH1sTZ9AefmJy
/qc1WJBlsGdfjIH7yms56knOC9xjS+zr+fjMx0FefuqMem9eLDw/mZwbifbm
0EuF9pFGwhJFP/7Z2K7OE5XRlKDv2y5FAf5l7eqQQT88t6lmGTjXKi69TPvJ
QtkP75hSDdpHhk773k7aX8JIj7TfeHHMWaH9bZfVoRWJsy5qo9D+wQlqQ9Sj
XrR3Scx7ZWpMd14pwNYJuvkEaf8Fo/2XLrSvYKT/L7u+s9G+ktH+J0b74y60
P8Vo/6sx/5Jd327igd2y61rKtCfYa+Td6AHc+UZn6M5HB3LnraR8pKHo6Tp6
Xxc4dGs/2LdauDKR+Ec4uHMwHH2wqzwMWaMxOH5O/BeTjEE43LeJkpeemMAv
3pJlzcAJ1boh0rVQS6+6cwAOdSFxYW9cgS0cb9iTHw9lL2RyrVrWqgbyPkY1
cGy896u8p+Q8TsDZIdYq8iXrQth7ejfJknfjt3s3WvhWvV+26k1Jr9EkBD9q
edL0xduHIex1k/MaJecjCPIV/2wB+SNzoGByO4Q81/O+5lByg5DyNzc5q4AX
lVcZ8KTlKyldU7kqjn1XDcAbcEdr/r9X1oKyRfEC8Dr8e1pTeH9e7KfPTYz0
5XG6K01RCt2jkOxmSJ79Z/TAUi2WIz7m0+4dchx1WPwWDM1NFFOP/T6O+LWO
QqyBeIxOoqhHzKOo/6sQP/S8LHJs1vaPO2uIv2t0DSgcykvdN45oymOTQRD/
L4F4R2wyVMSLAqyXNy8POvjMhvijDPFfMcR/LSN+A0f89wzxP7gg/meG+BMM
8SdtiMdVJzjvHqdeFgxrB0WTsuyIF2q+oYx4TnhdNm3wN+puEvFn7M03Fd58
lMObP3LXBXBw22BYt8ToUIpEFU+oP/5YNpNuzdV8jd+emdRcRhxIKw5fRWDh
yu7969sara6Wpjc9G5+naROSoA/XtNHF8HrB+AhZ0CPjjQpsLQR8rGrbYOAm
JUJlu246NnhHUMYrEqUPZuK/doQ+09D5Xl1v3m/zbHjURjJsIsXky2ZkyqM5
jzUVxbMhwGsUpawNlY8lkYRHwlc+mgRV7MaPpPs8Jt1vjw9Ed/yUbq7vSwqf
7oLslXhxuiPbJbKrdDf2XOH3G7OTuP/8rTmx82OvNemutEApdFcD8ZpVozVo
L6ZcxuAKdRiaHa8Qvkt7bs2rhF/tWoU1CD9FEvJnRPgeoRF+XNcMOL9DLqzs
k8BjNjbC3yATflAYhB9TgyI2k3tkweSeWcpUg38Kwtv7oLyD8XHmSLPSee4R
G9ceKOHLu42yQcJ/zghf7kL4bxjhvzUIv9Ei/DFG+B8Z4StdCP8LI3yVnfA3
JcDBxa1ouF/VriYuhP8rfPkodYwNw/uph9Phvb0XwYF1I31mV9INw+HI3Reo
ZVe/UnZlcNcCdbrGujrymKwpujobChe3c9I9SMDG6oE6236N5ol3LuEZ1KFg
SQ4UFbLfY/YK0/HfpLF3+CbVEvNR5hzkFJ6t/JLy8zL6qSSbwsuy/NKEvC/e
m0XyHi0dmoJmSXyfdsbmvd9u3muWcx9qhdY6DHDuGQZzKIV5Zz+PwwDbZNG6
L1rGTsa+7WH/NVmWzA/pMKgd+mGwwXYYXEcSnwl9Bn92GPzIDoMfhczHsizu
uf1+ZS34dkUt+GwJL8vePTqN9ty+ODUGfRxxFhh7TeSzoI1atKUg/Up6LIEW
HfZrl6KUZbu1z4a+7TMM7sOE9n6nXS+lb4ymqCEdubqf0amGhtD3LTtr2C+Q
sD+2K7//Wtk7gfqizhT7+1ywv3UYF/c3DE12hm5csO+erIyzQjdhYP99A/sM
+R9dxUuynzDsH7Fh/wuG/S8Z9o/asF/BsP9fhvzvNjmx/xPD/nEH9hPgFN9a
SzsMEfvfXi/5N07sh2nT1wxk0zPkN5Gxj9DXhEt/9K4ucGh3P9hXYEyMiYB9
144mQX/0QBfbDHu/PVWpeTZCJYpKrN/e9aqRrPdT6AaDlYj9/DG5GpTc3IZ9
QiV72kDx9iy82Gv7N7XVoGhVtg6Fy9tpUDAnhx0i+eNzIf/yXBr/ixf+uWBu
Du0CKVqbDUXrsnE8sAbFe9iL0vvxwx5+NBPKn8+A8hcy2CdW8Wo6e6zyrTSo
+iCVTgDHOfC5kPlu54AunQNVn3PvvvTRLA3Pgdp4Duh4Dlil2khxeBxNIVPH
b9E/2k5/CuYY6n//DiyIGpFMcQegzEEO1dH3y46+4x7gTekeQFNaqpq7FG2j
FezjxZBPU5KPPHCBC/k1yuXUJBt/fwFHftEMdkt7R3wg7GvE/XrC5AlA/RsC
Uh9+XE3E1xD5vhoE/WOS+sda7TcrasLto3id9q5RaejtHDs4Pso3kmNdaZ1S
iW/MOiYvhxM/mgYg9OiQoxD/ovaZFLe8HJ16lPo1AwLfmHMz5VxT7FcX+FcE
Af7M7rx0uuyiJuYUs2DA386uYMC/3QZ8zN9MYTp/cFd2+ze+rgl8sywrgO/V
LeUAvlGWZdfrAvhuZVkD+B8w4H9oAP9qC/ifMuB/5gL8rxjwv3YB/vcM9j8w
2B+zAf9nBvwTDPgnXYCPmwtP706AwjGMTpOzggBfl4GPj91F2t6xt6RxCEa9
n4B/ZG93OHjDYFieP9l0aNaOhEM394PjD7WVozca0T7KJXnT3DawTDeBX/kE
oqfs3nR2EJTsyISSnZmwf00WjavPH5XL/jH2/NIg72KMozPUQ/5YBuxZOXhp
ULisHSGevVvRagbu69vy64a2UHwjOwduYlwtua0Nww5ufy3ezR66OYvGvyPv
C1e2w6FgOBxMwxkCMWTRRpFyzp+US6kXvAqvYVJ9UzvYvyubfa7F+/BgeBgP
hoo3W0Hl++k4ntinq0pfo5hlBEn9she5Y1/+emt83VcXMe83MU+1Wr+JeUvk
6wEwf/gJ0UH1dupZwrxb4Vb28xOFn++3t1Zpbn1V1qITKtS+RBX8FznuKYr/
wAW6G+prQPF6/t3KH5gDVehSemPexzkf78757UE4jwb+mjiZ83CMKftjBYz3
jPK+GOL898LD/3xpXcpd4qd2x2VpmLmcX/O6SIPzynR6lfNKtP4q7uuTozM8
u45Zku2TmwHdmbK/nJwcsyZ7nWnY2xM4M0THFFo5SPmZnWpWy8pREH+hivjF
PXlH1NweSdK+WkR8tDfiB1Yf8TeN4L3BGwanwEN2xLs0xDqTN3HuEUsPxL9n
i1iipi9jiP+IIf7ja1TEf84QX84Q/4UN8d8wxH/LEF9hRzzD+483NIBKF8T/
whBfxRB/yob4l1dwPVi5vZkb4p1GfSPJqI+2GfWN7S6OYeKcui8NDu3sBwdW
GwZNJBRvHAZHbr9ArsIi2TUKz9eyt8BC5SPJUH5vKpTdkQaHi1pByRZG7WsZ
tecxok7JwfQFYwHStAatukOa4/x5nD1ccmMmHL6bqelH0qDy2RQova01gV0d
PZxs82502bvBx4w8pbGGyqe51V6j7LVXdHCg6r1UqDycxsU8O31KcNP44ccz
ofTBNngh5fe2xVuIXdlEfnYCsMcKFuawx/In59IJgV8dL+pFU8qyYBGfZYZD
K0uL20D5fzKg4q1WUPVZmnUikMzHO5V/cC1bVZ6Om7u/SYtUVb8mbhXEceC3
jgNdPg7oNoMarthxtX9nW2PkvR6+7a87ptwT/h1rb/2G5HfdeeXowNKMwm4z
+RTAyi6eAsefamu3emqR1YPePw2BWNoa8i7MhZIrW4VwEDSp1kEgVXLpIDhm
HQSk9n8Qav974fcfnJpsFHPvG9MSXp0ek/zeGz7jIFB6rNSDwLgXoMn1/CCI
5BZPTop5EAzMbYHWvkYnwSRyeCZKDk+gowDrtngUjOiYGtZRgPgPdBQsEscA
qv3rlNXl7Cjof3aOAj7uxjoKMJazpG9rGMIU/32X1w0cywnxKOA129COAiNt
/wmq/WvqaXCkoJ4v1XESfMlOgqMuJ8F/2UnwnXwSFPKT4Cd2EhxnJ8HPLifB
r+wk+E2cBD9uE/3jS1t5nQR4EGjUTqVboRzTz9dlnY+P3UdbQtlJcHTvefDS
lktg31VWkubq0STxj955npXJMTZTRdFhUHZrGpRuy4CSza2haDHTz3OyIX9E
rqB8LOXtcBJK0fK21ElZsp1R/rZWUP5AKpQ/yEj/r5ZWCsdvj11qYmAlngU0
xNI8C/zyWeBYPusI4LgeArp8CPhCMPE1s0ar0fbBaKj6JA0qDreiVeSlj7Sh
dbQ4vLJgcQ7CX5fPgcW8zQpruKWPZpHqLypsB3lD2ieopI/0Ij35O1TTxXPp
SaH036FPzCb1Ee6mqR8pm/pC8iebi0w0ZQJa0tltuZIQH0mIx5Qm9lZQYvOZ
dBvlaxLlsbqLMh/ubAAlK1sR6St2NnOjvEaYT5KiOwzyN1UT8gLwP+DFIP+D
DHny8dFtyIFdw/h3/r6xLY89NynaN4pj3GytIo9eIbwRvafXOOE3UBdtt3Oy
TcJfmsvT/ZebS8lVxE/yQvy5fD6Cofind6p7VtT+8gvr8RH4XTOsaM5fhPg7
x8RDr065sGZgWkDEHxQ5+2cF4gPHcoIjvsyGeHLvJQffjfFfMcZ/zRj/jY3x
3zPG/8AYfwwZv0Vl/AnG+JMujP+dMR43j98yOQsKhlPnUVFDTFg6GR/EvY8w
pf6Rm7vDwY2DYfmcycKOr8E0fh5p/VP3pzlSl+X7UuDwznQoXpUJhTOzfbpA
ef5whvElbekqub41lNzQGg7f0ooEf+WjyYHzOPjwi0lYbLPNq+Skt6q2WK09
fK/I6j2X4pK59MuZS7VZNlTWay5JS0+j3spcEpPZ/T9ONqv8IB3KX8uAwwcz
aXglYh1rt/lTcimioxmm0ZD2Rk2X1D1iv/KjVkh8Xx2Ab8kh+iYN4Y8X/tzE
MRDhcgzojmPAMKTEKMwAxwC3ffwBzgC3om7gjiwtqLPvtzv7GoX0/XDq2XQ6
BHZcTQeBcgjgPB1qHb6pOR0CVeypXzCS3StOz/I+BOLP6BCotB8CaPf8QHbP
98Lu4S1YvN3v9dl8ZsC9Y1oWnL4ywjgDlPYr9QzAvI+Z5rzaZvcg/4fn8KmW
o3PqWHaPr8Dh6Xvxf4aQ+UM7pleL/ysk/l95YS3o2iEXBnXOovDO2eL/Hg/+
3038r6E01F41oBWdAf+YUNeleusSywyB/2948P8D2xoS3lBb1wrt2KKZhqGv
8j8evmX8r3Dh/4+M/ZVbnfz/hfG/ivH/lI3/L18pHJ+d+Ptya0P8NXTHv0ZW
T4Rp5Z9ivzqHtvaFAwV5gvaxSH44uGkwHNnT3ardPsTupu9JgsPb0qFkbWso
nJ7NQc/uD4cx0C9ikN/YGsrvSFFtfLdJxaT1niUOqINwNCra+u1LZ5EMSaj1
XNhf/iifGln5fErIDbThs9+m8zXaDug34G9cmjqv2G/VaWuYeR3jwpotsp0q
kYz1xXfy84DxX5wFEXQWFK7OgeK72sLhZ9pAxbsZuMPkW8zqf4Oy/+tUf0Do
G7ZO+cu8sFj2TAaC3537HyvcPxO73x+A/brMfkrWBrT7NWkK8nePi7jnTYPZ
k4WqS89RUZc9wTDCXzST0f6uBnQCYGG3bDMXyIfXpMgnAGqk+r5kW4K/eifA
j+oJAN+zWwAD/3gLgEcADtRZ1Ceb1pngp/PA2ObJR94wTgCMdJotWeoJoIT2
xQlg+jx4AozIiaePOCK3kXQCNKe7gEmy0YMnQAfnCTCbXSPEXcDUzg3cT4Bu
wU+AFT1rsX+7/7nZvnxztELQE2DA2T8B7h7L7wLWDkoLeAIo5Vx2vZivxjar
cwJ84nICfOHSbWtkeAyXxzgB/stOgO/YCfC97QT4idH/OLt+djkBfmUnwG/s
BPidnQC/3NiEIpwly1q5BfPVOwCm/o/uPg9e2nQJ7FthhG6iYd+Vo+Gl6y+B
o0XnkcVTeWcilO1MhZLVGVA4Ldt0J3q3h6L5jPfrGO9vS4GqhxKdZn+Ew+zH
aZeamdhs7kxsRjjmXWJgM6DVE0lnQMXTYkbaQ62MM0AzDwA3y/8sHQC6fAD4
LKMnwkZ/XaY/fjzy7steEg1YH9HEH6bvI9HHh4p3MqDsZXaX8EAW0T9/aq58
IBRtaUdvYocBVH2RjoHWb7Ee8C1GPb/Bf1vcClDoM5UHP4/SlyHOB81xPhQs
zKEbAzGRR5NnsEnnA156+PZ/pGz/y0eD5jVj87XmLsF/yxoybglsh4Im2rqw
goQWUGVRE+M8wM/kjnj2NrwjyL80B6rQDOXngY8fCEln50AQuU5+INRSDgQ8
DN5fwEX7k5OS4dVZdE9w7JExDX2jOfKVFi71NFBC/uI0sDwhdhqMbMfPl2G5
TaXTYJXT9nfJ+BgzM/GeoPs57WBQx4xqnwYDO2XBhR1zYOVFtf7802CUdRrc
azsNsE0L/aDe7EQ4ML6BLdxTyzvccwangdqmVVdt07KdBt+IITtyq5YR8DHu
B/A0+IGdBsfk02A7Pw1OsNPgJDsNfnE5DU7vaQi3TCFPyDgNNEr3RJiHwZHt
3eHg2kGwfLZh80TCgWvy4NCWvlBxSyso25YCJdcy8E/J9gvwF81l0F/DoF/E
oP+P5mrvreHzR9rWljRT9w/a45vNterGN6Os+wBxL4D+jzgHKGTCTwHXplux
u+Rd0/fXXLL7dBpoZkOW5m32KwaQ6x2A+xmATg4qf1T9ESLO820au12o/LgV
HQIo/cVtAX1pxi2BfAJE4d/R8QSIVE8Av3pLoBth//KWUHFIjHt4FscQycjH
r7KFdSOgy6j/sDqVXl2u9IpqgD881ms0YzMG3rv3Igp5vnfPRVDxsFD3G9jP
4O4GNtL7KdGPczXF6GSNUJ/s0rsbAug3OUFfgflNUd39QUD+O7wE6Pfktaac
z2dLasDz05rCwPNy9361IHK0Ze6YzVyC85n8TUqAv4AeixC+TzzFOPGLHpKL
30mk/Fr30m4H99KuMXUBS7vn4ShNpvrDZfywzpnk9SzvWQ+u6RX1pzC+KAzG
3395XWL8tZe2Csj4f1eT8e8GYbxj2oI08t5gfMU6Pm3he8Z4o1Hrh808wGnU
dWXF/xMyfofK+CrG+FM2xn+4Vmw4uT6ZFP8pRuZDm/rCgZV5BtMZ3xnnB8OD
Ky6CkqsZzydlM3UkSo0xUDSHMX0VU5w7UqHyrkS3nD7+Sj3SFIUm57w84V7K
bTbzXDTryG16uP1eE9NMx0eTJqbR7/7+DA/Dxy8bPsh5N8kfCuT9MuTVeq49
jO+NeCR2UWE7/GDfoHlDiGfohvJDrQnlbohH9OPbEfF+E/ERKuLxn0ct74J4
U9SLfi5PxGvWWhS/wXijfUtTjP4kyejXHZtRSMpbm1FkxGvB670S6CNpmDJO
00Nlv2xKHygY1Q4hryHlafkad3iM+H7JilbE+optZBuFB/otHqBfayl6Q82b
oBeQP3oF79J6eEIKfLq4BgU6C/pnYqeWAL3SqaWCXsntc9BvJHunf04KgR47
c/vnppkLasPJ8BigxzjnRR2y4ZKOmWGBfnSXdIL8ogsSRH7HBvo+bqCPPqug
t4/V+efEmrBuEBf094xrBE8I0D8lQG/P7nDQx50V0H/qAvqjLqC3hqjVV8bq
WK1Z8WZh17B1vED/KwP9bwz0vzPQ/3JTE+jVqxfcs2Qg7Fg0zlysfcVo2Dxr
EOyc2QMLXrrwCYpmZUHxFZlQtjUFKm9L9MjnNxH5fNuYe0vQS3PTIt1Aj5zX
lC0mtikLEba5aYnuc9Pcy7qamKKDoU7sxmKg9wW2dYhTnkmeatHeTdD7hbb+
Oo3bNjpvvnosi16jx8iUYe9Sgdn9qi8Z6N9oDaVPZEHhdarFX7A0hxydw8+2
oQNBFHhlzvvNwyVFNXPs2Neh4g2u6g8/2ZruToIw3ynrP6DT1TL5hbwn7ntj
X3dZiOXm8+uyz+9zQ79GY9j8cO/6ITBlyhT4eEcHi/sZFvdv51dVUUMoyGsH
RVPZ935vfY/hPBL3d54593HS2t1jWpG4xy3lnyyqAYWDWx/bOjh9jJrPpF4t
lflGhp/eVGAzcUaLrtw+7TMM5gsTZ5Fp6Xsy/1yL+XPYdXknHvyb2LlZSMyf
060xvf/sbs2kzGY1mX9pcObvDYP5D0ysC8POz4GFfdvwMM9ZYP5bLswvE8z/
xJyBX9exy4rMG5cVhTLz7ROSjzPmG1MYTmzDO9ST2xsw6f2Lzc43mF+2uRs8
de0gWDbLcGZ0uHXpSLhywqWwdeI5ImDjpwbG0tXpULE7CUu5GuV49CBNWQb0
dceucToI5Ny+qu7xfTwGIjcHadG45pi+kOi2Z9yy8okippdPw5DZJVHf08UJ
Afooa5H8AaCP4jjF5t7oIUh7EvOUzRFNWZqp7msQ+WOg4r0Mov7+PdlEelne
H34mkxGfPti3qf6AtKfSru6gfdHmbEPg+zR1d4or7f0y7fHSHYPYLNBrno1b
Ifj1VK5ByjfjSR6nxOd7Dzt37gzzJ4+CdQsmwKk76KfKOJ/o4DxmeMo2CL8H
m9X/DM5fU0tDyLNnOGLekPbYk/v5khrw8cIaML57zt6DEw3MK61aKubRpzdV
Py/tRvLhO+0awYXtM6FH+ywD8ZzwjayibTDCd+KEx8gOqvruHdpBfpeawSI7
GvQ9N9s3nFKbZxfwMd6Av8wd8PfbAI9pzZ0j+I/3jrFNRa22Fhz0CuTbAP+f
MwR8uaNWW8+x6ISvHK9vX3SiIeF9sbTnxBiVSeMWaJYa78D9eUdL+M91feHW
JeYmEIZ2uH7WUFg2uo/PKKsWXp4NxUtaQ/nWFuqETJ7UOXO86zLe8TFpOmYz
e6lWC7VSmxikUpvE6R5l0f1QMhQuaQf7N7Y1Qvk+DZx7ZtGxCdKcVU2wu6p4
Pyl40UxlavhaRPJYOPVlKv6JiF7yIDdsHDQvT7M4rhu9Wil+ld6asGgkre6Y
k8/HabYw8phBQa6p6w21MLuuDLH+miTWtWBePO6sxSrrqbtawI6l42DHknFw
6vYWcgIHP9Lt8b5UM4O5f04m5F+SA1U3J7jyG86M30ql9aEJaTCkay4cWVyX
vJm386k82uPc7UljVAOGWqxUgCsBfAFw8mb65qRB79wM0ukKwJc5rJmpAVI3
BsBndq5LPvxlnVI9AB5JAJ/Rlcv5WUyeOwke5U7wfmdO8NvCIDimbS7vkQ2L
+rX5ywj+GSP45y4E/xoJvsZtVZVKcGsfYby6qopdn2/oBM8XDIBtC8b5DL9l
75LRsHn6INg++XxM25i5jJ65UDg+G6puaWJbUeUPjPHGfw7GGcJ/R+VuYDzC
jnGiuKZMOE5UJxxHuNky+FdeI8UoOF5UkA2FS9tpXrvC/2KG67D/5mxiMr5G
AK+L2NbIV2F6/N1Wpt2u0LuE6G0E6mV6k8GuOeiN2psGH3/e0sVgx6/YwrcU
qwyD35rrjDSemdEcLVXNQ2mpIn5jFvWFZlB2r9i2voV9Jvc0gOO3ZZIML141
jGNcQXiKiXDcNI5P9+KFGWeM8OMeCEf9/ZXQ3zePaE02y5FFNeCh8cnHOnTo
4BvHIa00UDVQ+I0ZGjM6yfltzcQZkJtC3jquEZeap3BSgt+3MKScDLdZeGZ+
5Lm8ljrjvAae/O7ZMQf1N8/I/MX8vsOD3w8Y/J5k8btoFJ+ItvuyFmSxVI/f
tR38ft+F35+68Nuy1C1+/1fZJ1vfY58s5/cHa7rBv1YOgmUzJxtSe/+yPLhp
1gAompxrSu3i+exJtSmZ2mFLlvPakcRuzbMd1i+1wxK7vdEdiquuuxgskS6b
Y5u7WuqGBH8xMVxLHdGN8rtgVg631O1NUtVhOH6Mj1qawxHCZbluDDT7OlUO
yusC7PlTcwnuHOQK2LE4is21Aen+eZrfRZZrZq8s+ycq30sz3XPNheq6R9kU
v62BGB6qZe43FLizLcrOcD9UPZMI+ZflQtHsLPacRIf8ngbsyfHdLbmi4j/I
E+GYeyy9OpVXTLc0+9MQjgp8KFPgHy6MJwvlowU1YNew9L3du3c3EK70P6kI
V9Lvq7hVXtizZ0+4MJfnZhHfUmnUx/k91+Q38jpQadQYbTDnvJrQq0M2XNox
05XfU7ryGRLzuyc4+X1RYH6v/4v5jdmXlQNaw/Dzc+CxqXX/Un5/6cJv0t42
fv/I+F0p+P09g/BLV/eFPQtHcV7XQ3QTwsuZ/H5paRrk9xe/zRcw0TGXcXt9
smMSfcXWROENpoY30oAeu48AblspRY+5rpQ6uxB31EUj3CAuLPIoxSJHiuOo
ShxlZpoo+l8Nb90U4k54G6ocHRX6+ZS0scM7iuAdS/2sFe+0op5XE+CD29O2
WeyZZQAPaKuQH96Oa/LylnZ+Oz0VPTjHjRkH7yYZ0RfN6YwnBhhpxmMvWjBb
HH/kOMxmcybkXZQLlfuaItF9HOmRFG58b+uFhPVD1/c1jHENee5raRK9ak8C
FIxoB4Xj2p59okuCHIONXy6rCZ8trkGTicd1y5lw6aWXjrOEt9nOpAJdCbCv
kjyVc9vzcWij2tVRPZU5atnTLdNoK3tSH2uXSJjUmfsl07o0dvC8B9PiQzpl
Wpn1P4nnN9l5blst4sbzh2w8x/kFj0ypC30658KaQa3+Ep6XM55/YeP5N4zn
ihsueH6M8fyDVZ3g6RUDoHDuOGN67y0LR8G/rxoAX23MhY9XJcHdUzNF4iEW
bpmQBZ+vZb9WNyaw52WC2AmbYJ9HqaGh4jpy/m/I80g3nnvPqXG1xPEqvUPM
rVEscV2lue5V4fxzGS63KxHD65gMjySG63DqixT8E9koOr2MCcz0z9KsaqdV
5NQMPf6+pcf1YDzX1Oak6vL8sMxz3bFyigwW+2wyb6xX/ovnVEvXsi90f4ID
6+iVI9IR7Ue2d3PDOpY6y9aLuOu1LUPH+vWhYd2wyT9aFA9fiDjLm7Nr47+X
PH36dIF1pS9JYL01f5OSV7+OHov4tGPHjvQZ44wCNcoyM+woizyboH/HLLig
QzuY37UmZzq7Jnfh+nxet4QzYzq7wmd6bHCmT3QyHWMs20fwbpV7xjc7I6a/
ozC9DjH94yBM/9qF6W9c3Q0eWToIlswwYicN4c7FeaTPj21OhpOF8fDcojSY
3Y//Js9h/396QSs4uaURnN6ZAH/sYheD+h/eUCeBToM6dpCkvZ0McpPqjZDq
fyXUhUkeOtQTXQ1yw2gxDXJ1p/fhA2I8zYupZw3qmrLxz1rhkYpgDx/uogfJ
cldqm3CPNhuLNPzbAZBe+mgbhvRUhLnPSfP9N2ar6lwPRnNNCSqWJXPH/EMR
VKw+17VgLUjeQC+Y2g7yB+dwmHsAHW0X0VgHR3d14kBvoc6gYdf+2ZmQPyCH
0r6eQN/mAfT17kD/eoWl0b9aXpNcl7IFNaD48uZknI/nyEaBjs6LC82NsZMU
Shc0p2XftAgwp6lhmvs0yzKfTChHfIeSWTFQjnY52uajO6WaKO/B0D6YSfPl
F0T9JSi/OQDK7wmG8sl8Xjym0P/FcD6nVxZM6pkNT06r95eh/CuB8i+Yxi65
og/smjdKoDsKMQ6PLBtE8vynTfFwfHM8fLqqGdw+ydDi9WD3+Cx4/YoU9lxr
AL/jtaMBoRyXu54WKP+DofwPF5RX7RH9dSsyNMcwYSp/MoUeow4TPuAYJhwi
ypuefX0ePsrfSIbyx9P+HignFmsywtEgx0EyiPBoF4Rb0wEMhN+fRUMmLYS3
o2HDVZ+mGqlDviuKqXpJitvsFd2wx/GLd4BbD1OG4zcVX1S/lwjvql5qBmX7
+SdccUtzAesGEqxjFVjDnfFw4Ko8WDd/Ahzf01r2yTVqJmoOlTsb03SN4vkZ
KqxvDBPWqy1YF13WmpT3x4vjyVDBkMr782Jhx5B0zAoasFY6iFRYK2lyAWta
1I1f+eCcRMMil2E9QdXdQfIp8gyAUQzUXRiwF5xfEyadxzX3gm71QoN17/8B
rI1sCgO2DGuMj983oRH07ZwLhcPSzFmQMqxfdl3i5w3rD11g/bmA9ZcM1m9c
2QkeXTIANs0ZZwxbuXHeKHhy+QD4eHUOL2uyq3JjPJTMS4MNI9pyRDeGB2Zk
QMX6JnBqawP2DGtAqP5tB0f178YubrHP6bRA9R8M1X/YlrTuz2/DB1/c2sQ2
C8ZgdXQwVmsEa785Dsy2xunvReqKEjET5uFWnqSmFvYW1fHFw2U22dY6wTeS
a+9v+GU446WPZZHujlOhHW0O+tJIwEdBxdvpCrlxfiSOia86QiMIviRuM2IL
uY2PlbfUbO6JbuntI+Q0udc1dWddE38OHsB2K2nqcklTChZiCEVS2FXsZ47z
/YvmZLEnXYJMbOI1PkGxY0Ke7nVqXzJRe8ficXDq1mSD2D4D2RhOKV2ZStgu
35B4RsjGiS7fruTa+sHL0+CbK2qSWYKh8HfnxsLMntkokg1kKw1ACrL9RjIc
q5uotTm1pz7TpUsX2s80rp1f7fcUPZ9omNihPd0N2uySoT23S02C9rBOGaSu
h7P/UyL8AmmIryu0o84atG9BaOe5Q3t/AGgX26CNgZQbGLAR3A9NahwWtA+H
CO0Xl50Pd8wfBotMEyQabp2fByXL+8DR1clKMfOjq5vBIzPTjeUNDNpQuiQF
Tt4QD78UxkPVlgYmtX/d3kBDbDPN/ZuA9u/Swo7TDNqnBbT/YND+Q0C7/AZu
/JVtTLFDmzNbl5mNT/0D9JjrytUmtpWrfimUQtTm0I5SOz2fauYywCtSQLs5
zxJak1s0GtsSYUBbHtpCXintX+XU5ua3bIAzale+ICa4PPK3prbkhRO1ayK1
dZPa1nhGsrZTeTPPV9S2yV7GkMzG/R4ou/Haf1M2VBxOt2T2vzLPCNya2d0T
Ari1sLxuFdy4YgtrllX4LPQEd6wCboL33mSS2wdW5sGpomR1NCM7D9jvReHY
tlA4pm21uE0T2nESV0Et2DuqNaVQcBr718IT+XB+DXhtpmlyj3fxPhRsRxh5
cPTB8f8UO1xNb2tk1jDHtIv1ZHcoQ1nmyOzuwns2x3VuwfnSF+Z3q3v20c2u
wiDovjVEdD8YBN2PT61LBsnyi9ucFXS/e0USPLqwD2yZY5gesYhtuH/hINLb
X6+qB9+srgffXlcPKkSO8JUlyXDr+Ez+LU2EA1Mz4Oh1TcgbOXF9vAPdpzi6
4Vfamd2A2P2btGzpdxrFwtl9mrH7tGD3H4zdf+wTvcnTss4+u3WZ3fgY09zR
znksKrzPmN2RXuzWqDmfjyY6fH9rniWsNr0RZvjibFPbNLnlLk2L2rEBqa2R
J+Ind6TkQBZh+xxaKchENpfcOHTFLXuiy+62HdrGgHXL3tZM1a17wduYsMtd
bVss3DC2m7sY2xa9Kx4X7ZTXsy/0voSw6I0tmd/dJIKGqwcZrfec3k0pfVK+
kSeySleketL7p421XcqUcXCc0fsnRu8vVzSgj/HcjBakuI8u4zFwNEn+OY47
2pdzdCutPAq6o4woONYpEeP4bvh/2p7EcyoRFA3HmqXD4faNDBvh+TaEY6YQ
JTjK70XdajKGR551hgeT32fC8MeVMSu14I6x/Ee7d0yLajH86YXnw33zLoa1
s4y+mvawdc4oeGjhxXB4RY7pmXx1bT2F4U/MToVpvfld7/JL2sELC1vCj8I0
Ob4pHn52gXiV0c9D7Zjs2okgt5ai/mbO00qgMSu/C4ifFhCHfVLNcmeSWqu0
mnoMiv9/AXGMExbvyAoV4u+7r8zT/ySIG7sxDIjHmBDHV1NrBIS4bhnbaJgg
yH3GDrbCgnZQXtrKjeCaaW/rIXFbk4dmoc39Ln3zQya4LhOcop+0Dtfyu02K
F0xrB4VT2lKBPAF/7GFSHK3u726USK5SHMMmxfMyyEOpwtqQhwav2sx0+Kba
cJJR/ASj+M9rGMVXc4rvGNGG9Pd/r2T6m1Ecm3kwCf5OPkYpUsnqnsApjjAw
E4LxCsWVMensP9ToKMTJYlklvJXevXtDv9w0w/bmAK8rAO4PO3BiAHxe15ri
WdITxp6XWj2A9z1zgO8LA+APBwA4hk0KLm0NI7vlwMGZ9SSAx3kC/In558Oe
OUNhwXRrKdCNc/LgyUU94f0VSXDExfRGgL+zvCncPMaoOGZA0bhMeOuKRPhB
hAcR4D95APwXqSGzijZac4CfkpYg/WrOyWKXG8DZhZ091LK2pPWZA7xJEIDr
MsDxsX/RY2fTQglKcNxrvX9T2z+V4IhI6oYMidySzY2v1xCpQVl+10RyRxkj
UKT2HBw8fD1Pdpe/kkFjDfFDFV7TjqbYepBaM/OAQUlNClsPn8+vB+Azu0pv
5bGfilubO/l8b+h8RmP70Ma+fPDt5gvtfMbpQcjn0itSic+nd9aF3xmff9vK
GL2lDpwy+MzU9sn17GJ8PsH4/DPj8/uLeUz6eaawKxifMTPCc92xcHg2u53u
lUW+tuCz0q2j8JnC3ZQAxP80Kxlo8Foo7Ty0W4517tDeaZZUE9LzBKRHdEon
lX35eS2gS4dcmH1+47ME6ejQID3CG9JeXfPBIP3o1ATo1zkXNg5t5Qrpl+cn
wv78PrBxpuie6Yx8htvzB8Fzi841jZKPhMctM/oLXEt9VQPYPZo7mVN75cCD
09Lh6KoE+G5tffh+XX2T0ZUejD4pNc2bc08Yo6sYo2mmlTSY3GC0LLL/kBiN
aypKVmTwTsy9TbwYrZFX4je6L+0rqf82iI4QiE6SEY1vM9dSF11LnfP4mNw1
r/+1hI4Qe+QsS7viHbFjSEM8+008k7COMfGsW3iuAZUfmLY1+5fIBCEpraD6
9XR155w9L0IZP4HpMvpeuYOahLSu+Nj4A5EBrXnVHsWmoaoXxFbolUwQ3J8g
6BzpRmdr+mAE5URscMa/ui/el8QA3QeWz5oMRwq7OdriSxanU/faH7tsdC5k
dL6eXYzOVeiFIJ3XMjpfx+k886IcWD8oy9wliiERjGe/NzcWDs2Kgf6dc3uM
HDnSoLPSeiPonGGR2OyWX0+PDaV5VNgKb7esHRQOmBGJUCiM2eyB52ZSRmTA
uVnQp2M2LOle60+j8M4AFL49TAo/6pgdXsvMZd90Ga9LPTCpGVH4odnnw22z
LoZrZ4g8RxpsnZUHd+dfDM8vyIG3hdXxnmRXu1H44WncWhh8fi4czG8J366u
BxXX1YP/rqmvUPhHDwqfkFrfcfrUSUHhXxiFf9mJ0oJxmEmTABRm7/OH2BfH
KVy5uzl9TiVXZhj74ijbZ0HY9zel8EvhUxhVsmiC/1tQWLKoffXN9kiSxrFu
7NVJGudPzqWQtWaWDNl3DXe+4aJPAvDVDMCvMQB/2iIYej8Mhl7SyHpA9Gqk
i6Pl6iFxt+iqtlQthH8kIHdDwm4NC7u3q5qYaoZ760PxNcMIvd/toJ/jnvo+
Jhturgdl1/Hi+Y83NILTOxh2tzHsbuHY/RWxu6k2VG1g2F2H2I0j7D42hZ9k
5csbmIYFCmIsGL49JxZenhqHtvNEjlW0lc0tDipxleGAnLiDENa8UJgTS4NH
5CJhdYiLY/+oE75zC4pQY4UQte+481L/RsStoRD3IZO4NQMSFyuEUwb1gXnj
RsC8aYbpcB4UzsyDB/J7QumCRG5OLK5tbeMJgNzHZ7SESRfyX4fbxmeY7rKF
3HqE3B8Yco8pyK1vIvdnadrICTHQFZF70kKuuaFZ3shjINcsEUq5PHSYsccR
F1PhylqGXJ83c3WZufjYPyiQZ+7oJOhy5kbb4h1N7Ssb/kfILbmFOtb/NsgV
uxkIuXVVuVvD8JG/TnHzkWmzDpS/ym/zy55rjeJXhnA0LVSrKmPv9JINxv9J
c+Oww6nQTQobY1rfSzIsZS1Yp4tbVfD15oavrJEsjiQ4l90vhkHtaBkWnHUZ
zvhPMkVsJPF4l8upm5PhwJV5OLMeTt2UTGDGREfF5qb0L35YkASnt3M4/76l
Dvx2A4Mz08OnNkpwXoNTuPly+eJJadS2WLFCTeC9wfTw2gEZOCBEwBmNZLPJ
RYWzkZsmg2KDUM+YwLuEy2FR+uvtWfqb0TFw8u7yzvwGI79rXbP1fIIwJnDS
theYVwUCc//gYL5xSExQMN8tgfm+EMH8xIzmcOuMPnDddCNqkUnj2ZePHwqP
zjmXDIlX7a6xDGZjhJ8E5lcXNIUdI3m/86bhbdjbG5FrfNQFzN/LYF6vgvm4
NAbqZ3XSNoJZQzIzCezNZbz/Y2T21XLlctkmkUi7PkXuUgyBy7rMZXyMyeEY
2840VzCfuRhOrBaZS++kn4Y3mVEJ4qvuPEbEfNySB+4+STG5rCGX9fC5jDIY
uwzNxfeWFK5hrL9RpXDBohxTCutqeg5R/ClD8YcpUFaSYaH4KobiV9OcMbpk
TY3RBaevwy/Wg7JXh6oXkyB/dC4Uzc2iJw0B9/4EK5BxwCzlaeQV666rzmyq
WJMS0Kd2J8OOhePoOnVTkpmmw6k6j8zOIPae3srYy0Txb0wU/7pJsHc9Yy8T
xSeZKL4xrw0M75oLP+Jcp5U1KYuBOYwP5nGX+MWpcfjdxM4Tn4Cv0rSiwhe5
bI5W5fDtSxE6HMk3FpWx4giHlruQ4Tvk3AxqLDTnfrBrGQPwJedm0Qy+ZRfU
+tPguxvhO9zbDQ4VvndM7Qq7pl0MV04zMhK9YeP0PLhlxsXw6Kx2sH1EGvQ/
Lxcen9bYFb5vusH3Cg7fPaO5YFnQL5tUMS/Z1XWF73cB4PuTNIPvuAnfeFUV
S5awXLKzMhdq8NlOXwzOoSrGVQfB6dv4/yZ9I4i+h+8TXeIvpdJ+G08AkyDW
/1wAG5vp8f8I4NomgD2Fsd8ujMueb+0hjDVr1nU05eKqPmgJhx9rDfkTcyFv
IOP+XW2gCvW/O5I1JWRhMdkesrAZFHpgGBdvaQN5vXKh8q5mAsbRKozVXIWl
gv2qRXEbAnhfPH5q1koa/Ii31Pc1geO7WpNbUbxyGIEYbqwHRRPaQOFlbeEP
JoJPMxH8+w0GjGvDKSaCq5gI/oWJ4LcX8uTVG3MT4QcUwVdyU7hMxClen8lI
NIQiFZNUpUsxCZXDWMgz9fFGenkRieDBuYkmgyefE25VLoIYbMy0XigxGGcv
LRQOxeVdUv9WDH5AMHjv5K6wYepQyDcdh2xYNy0P7pjWE55kIviZmXHUL/jc
7Dj253ow9aJsWHlJm5AZfGBSKlzek4uPuy5Pt8UmwmNwJWOwMUfvJyeDNYQw
E74BEMy+RAZh9ssdDMGH14kI3I1JZ4hgXUYwPvYoNaJ4ORPNAhC4+dkmcPkT
orn7pZQ/lcAkTlN48O0L6trzYDFtEyARLNYSaGZ4IloVw1FmZELAF3Uw6mHK
JTvhi58RfspHyG35hBH4/ZZQ+gDmdBh/cdrTU60QvORKuNHXKYj1gOwNKISj
oLyYP8EOb2HfkwcSDBOCPAgN6YufpiPTpgslHC+NOdUlJUzUNaWwVZJjv1Nb
c4jCB68ZBLCrHpQuS+Uluq0SgTczAjMpfIpJ4VOMwJXsd3JWrxzYNaINVOKi
ASzLCSn8HpPCbzIp/AKTwiO75pAUFgg2ukoomqwiWJlSzRF8AUlh3C4gG8Th
IniC2P417bzGHMHnWwhefkEkTOrakrY7zuve+E9D8B4PBKurfNn/xzeD7ZN6
w1VTDG9hAOIXtkwdCPdM6WjO1+DjqGspCH5hThzcezk/FO+bmBQQwc/PbQL5
fbLpfbeOaA1vLG6k1OM+CxPBP9oQLMvgE4YMtiUjTkkMNqPHtv4/8GAwpiJw
30bx0tYyg/Epfi8V48yh1MTg8BCsywjGx57EGcNm/Ngrehwmgv0WguV51JHO
pu1HWgX0IP4qAOsEYHSH86fm8gXtdUwRXNMVvIefEjmKN9NtNTmdjAg/GRHw
aQuji4/4i/Gxj1tA5ZstYP+2ttybWNkOKg+lWGGIMLxggq9ug2+sHb5Un6ti
P6W8i9ujBcGeKw2RvBqFInRZ+NKzrAGNCGjgmJ3hUL5++zJGjcpyjU339731
PQm/h67rA2UF3Cv9cUMjOF3I0MuE72+b2MXQ+yuid20c3DkWRxrnwlcrGsAx
3MF4Je8GwZzaW3Ni4T8zYuD2EUmUJZ7M2ap0hKjYRdVrxow5ds83O0CG5zat
dhJi2LnppHyNrg87dq+4IAouPTcL+tEmgFpw9YX2mlxUcOyyK6DyNQLDNEGa
YXckriVm2GXo3TW+K2yeeDEsnTLWcHFXTcmDrZMvhnsmtXMMyghEXQxBoPAd
1T2H/bk+Ufd1ibr/WRgP1w/nN4BI3ZfmNXHtt3aj7jdO6mqIXV+d4NC1r+FS
oashdX0xEnMTvJhLcqIR+6XGHARyt+q2JqExN9pWj2uiLgIobvq/Qm6SG3Kl
juuwkasZZTjqcbOY6zsL0BX2ry9KoFaGbrQF3Uizl4P6qG/MNhSvp+DVzD4O
/MYxiVv+XDrkT8iFvEvbQ+l9re3xB7IYTNjiW91xq9l7qauwR4P3Ur+OP0gz
ElG4OBvyhzBt/mBDu9j11rp+Wetag0J1udqG71pUH99VkrqMtxo6Db4Ewi1i
9/Wru9PP/M3lLeH0DRy5v2+qDb9tYMhlSve/VyfQ21+Zw46ka7jSRdMXJxS9
K8JnL0+LMZTuFI5VpXujvkJccz4o/reJXnaibg3cg2h4DeHSFhcf4gJEom1X
PrffoO0yoi0j8AX1SOiO7ZL+l9B229iucO3Eofwr9g2BgskjYNeEnrCfidxA
M4m8UPu8QO3TMxPI790yvJWC2jvH89/eS7rkwgOTWyrph7IVdaqDWji2ThW4
P9l2rRBrpdDZL7b2jF93NeACV2qSPk1Tibxga4ncyptF+OyqDPasbyTBVpdh
i4/d3wT9XGvtihdtAyhcXcYtPnaQcvzmTCIHb31nAbh48T7pDJeFWfr/BLjl
r2cIuzfDFyOCvnarV+qli7KV3vw0wAIBjAMsDPjqVvXNXfRqBOFoqMI2OfIa
kqHqnRZQvIcbHoVXMgX8eoqmWL5JbgDGz++tRF59O+zMPuj2fo3X8ExFv5eU
+u2JFoqN4IMu197wr9iKb/Gi+KbLxTd8bC/xV91PqyGIMZUmim/o+aLrcPCq
QbB85mTo0aMHPDIzA/5gLD69mbGYSd/f1nMWXzUgG1ay6+eCWlSAk6UvFt9e
nR4Dt3HpO9WSt2aXhuBwK/4mIwdMEy4202MdaP14hw4dIC+3kaMTQ+GwR+gB
v4fjOyW5c7g75/CKHlEwWZgOCy5obHG415lzGAMPO0ekw/qxvWHZpFGGhzB7
6mRYO2Eg7B7X0eyUu0+E0UJFcYkLirEB49bRKXAxw3HxtGYMzU1gzAXc0t0x
MsM1++uN4roOFP+XXd+vYShe645iOe9g5X/jzS6MKrnVmaFYnldx2h3F9Lxt
iOpE8huwUw7LbgWXtTNQ/NeSOJJI/Bs+ppJYIxRHStPhFBCHwWGp1Tl8DiOB
adH2mXoMaPDy0G+qr4aY0inL3aD0tfVf6B6Tgyz8+jS1mVknlyECyp9Ng4K5
OVwKH2gNVdwFdyevsZvQAq/dcajncBxMn3cr+3oeasi5a8nfwHU23SVt5lfS
Zoy5GtXZdFn++gz9S9zdWRdObUuCA0vzYOLEibB6RGf4g+nf00z//r6Bc/eF
2VxVfb68MfzE9C/W2lD/frQgFt4WdbaXpsZAHte/grvKjHyVu0YZjtLA19Nj
OaR/e7XPdHa/Cd4aJq+duTM68UF0Ezs3oxFvBnMXS8xdLpiLQbOBnbKg/7ns
FLmwlsncVdVk7vqRXWHV2IthwWThIFwKV04cAWvHXww3jc6mnBkaDXdL3cle
zMWog31EEGduLQdzX5qLf64Hi/q1hdGCtTN7Z8OLcxPg8OLaDuZ+IJjrXG1S
F76QmcuuitWcuSiBZeZWmsytbzH3+hCYu9ObuWJ+MpUliLc2jxeZi0EzuiEv
xN9vl52DjTWPnYMUBfayGpqGTFwX7Xv2iGu1Jid7Ehc/0vstELtIXbz0P4m8
OLWeZ39TfbXEiPsAutfyHQzyWt0XLVXTwcPstXEXP/5HyWrPG8Nw1dtMBO/O
IgwXrmgHFS/SlyEIrAcgsKYmz8h6EHsFq14WWbN5WfhkaYiZyAMJLvSVJa9f
lryIXs2zyKbLitfnJXkRv7CdIbgwCfYtHAWLp4yHqo2JJn5/vq4+n7I5oRX8
fK0qebEJ441ZsVA6LQbuzmuGkpcHzGigvdmI4Y5eyvpy9GYpkjecxuPpBno7
NaPpEMHQu1TYD+O7ptvQGwVr+gRH75q8rnDF+KHcTRgIyyeMgA1jevCBmqa/
GxsUuw+Ggd1/27D7+PTGJnKvGdiGG7w00ae2x8j6ANgVQyG+EaU1L+z+JGHX
6Ls4YTYcxytDIRC75ng221hNPgsZ7+huaYjlD4/KmjETApVu0cwsTt0YO3XZ
b0ljeWr9/ynsim7j/x125f0juMqPhkE82qaxl8h1otYWJ7NbDLqMWvJD3Lrc
JNjqps2LwreECd98IXzvZcL3zWTu9OLEN5yLiYPq304KbjjoFnZrEHbJ7B2a
w54hDS3F+4CkejlzRYFNlwts+NidBFtHw7FHhU03K2woeDWkro99qF2MuTvY
tY1dW9mv4uo2JH2Llw6FX9Ynwu9M8t58WRsYcX4unFwVB8cLalGVDSXvxwut
CtsLU6JhhAg3CPCiqWuGyFTwKjnfG7gbbGpeq7rmD+r3zuxUg3e5dUo0R/KY
0O3mhC7myvK78wDE9G4tA0IX92uvG5gGV13WGxZMEN7BZJg5dTKsHDcQNuV1
hF1ST8UeCbz7JPCq03ic4H1YAq9z0EMts+HteTFObf8EnmlAvYuWL3oNB2c2
EaPUgoP3iAFemvTgBK9s+bqCd1MI4N0eFLzsOZmg7AzxIu/h9SJftjvJPoQe
n8X3kQhW0cvJq8vkxXctpjiZkezl6K02eSNs5E2kGfQaub1R0n5tA71JtliZ
X+4xPvvsRfAhgHmml9agOohLCz+g7MXWYrhDK2JtQ1Phavheseo+VfatQk2L
61QxOhaWnUCQbWGAVoqO6UTaKDQT0FaA4pvaQN4l7WF/YRZUvZFsi+8SX01l
i29whsnqWO4Cu4q3Cjf3jkQba4XGVfUtclbzDJH5ZX1rDUXT5cIavuvuevit
dJG3hNotdaCK/SKhu4vNUk8vGwjvL+Vhh3cWJMIJJm+xuvadkLeY4j00MwZe
nhoDd3F565tuYdYUsSpm0ek1pS/HbJqpb0fa9G0wO9fA7DxpdKUds9RY3MPq
X5t0fipp3GU9ExyYvXpYV1h+2cUwd+JYke2aBovHj4CVoy+GDcOybcN0kLMx
ynq9M24sFn7u01Jp7d/CW9g8tBV9vTvz0uCVebUpxbC4f1uY2SsbXplf38FZ
o4WiTPSvfSKyY5+ZE3XqKmMr3bJjSu+a1Fh8QuLsLxJnT22zOPsbcbYBcVZe
9sHX7IXGWcwwUIZseaads38GZpv9lZgVfcVnhlnNqK190tKltuYJXL/pLFBT
RCoU30HD3flr8abIJdrGIG0jZNriPGEKHr+fKtHWw0KQSmcBWauZvi37GBUv
pED++FwovKId0lYL3cTlWrYOlD8qnNvtTKQ/3DBUxhpalktZv32wmUYGQpK9
YMauerKUtfhqSNntXMpCITsFbqgD+X1yYO2onrB8xmQYOHAg3DyyDfxik7Ll
S2pQcuGV6THw/GRLygrGGhMbqFVCZayS0y2kl8kuUja4f2DyVUyXRP/ACIlZ
fI1U+Iq27YjOmXDxudlwTa9asHJoV1g0RngCM2ERw+k1eT0k2yDanOi+TUKr
GcuVEgv7hH+A+bC7hH9wr+Qf/EOybR82S2U14XHX1AL+uR7M68PjixjLxVLZ
K/PiKJb71IwmJGO357WigNhbS2qb26jRtsXWYI7WOh5oratMBLZag+tZaGXX
TxsMtNb3QGs8TQUOitbdwdDa0D7WHUquxqhYe6i6o2l4EraJja26zFZ87AnK
hskTgZ9uxtmqy2zFd/03TbkyligZi5ReJBH1EkXwuXtgbFLSkKz4sMpWGa2i
MdgFrZqx8O7PRatfoNUc/iu6z1LruQhZCa1+Sobhp77/xrZn2TXQjQnt2FpS
8Tzna8GcHKgsbYl49XnwVbM1B0eQfK1iP4z8MQzQ07MRrxTVbogmlIxY2aa1
8Irv61Ed08NJhykadoelYYmx19eBojFtoODSbLhr1sU0i/Lw8m5wkmnYnyQN
+/ECXKwRAy9OiYE7RjTb27179xmcoUobhIpXdAnM4BjHa3Mzjzsit2nITkHn
c3Jh1LktYO55EYpToGRw7XjtnwZzh/WFsWMNidoKZk2eAEtGD4SCIR1hfT83
a1Ywll3bGGd3BM3gBvdoQymNPTARY6kju+X4esEjUxpL8yDjzNaH28alwIAu
ufDEjGacsUzCvrvUYuyHgrH2UWSecYQ1qkcrM/ZnibEnJcZWbbEY+6vE2N8l
xhqrRcNlbOUtIiHGWOuQr7rLWlG/FUfgjP2bITbS1v2bgpj9ayiL70dpWW7Z
OqVs1WemU8udhNouUjZKlrLmlmej58wdtp/KsOXGgV8Ws3jpqpTVzQIYYh09
7dXZxNzyp9I0w5hN1NxafiMJsYVL2KfWm90gPNLQULAaFcJinYTdn2AXsEhX
LdzIV83gAnYLF7AI2NJ5KXxMdg24ccoAWMa07LtXdCX9in1mXzD9+m4+L3/9
e1L0sVHn5+I0XZ8ArNHwQDMeBWDT1dgXRXA5ZhvTUueu57SDy9vHwuT2LnDt
6IRrXscUgus8DxuWIrcDu8LCvIth5qQJAqgzYPbYPBgyZAjM6NdJtWC94Cpi
B9u8Zts4fNhYDx+2hocPW1PxYW8bw/3WuX2yHAUwGa4Yuy0Y2AbG9shhr9ev
FlyDFcACwrUwBLjeGDZcNZo6Fkl8LZqZBQWj2p11tsbY2aruAf1T4ao29v5v
4Oo34aoJuJa9wFV1ZVk6TUpPrWWKWeIvlcCiZbhaOa/WobiygZ0C3dnQ+34S
b3PgF2dtJNW+qg5x3qJjW1acLpoeHLjlijaKcFt6mxh/fmeSjFwfZ249Z/RL
Ng2Qt3fF27vLuJrdV9+Z9/LbHQNNrn3JgnarJWhhc20ov5IXiub0zoFfr4uD
BxcOhaUMvJ8vT+eCdmENinth7ev24c2wO9c3yyVnW88VuJSz5cBtgIr2jU6d
OsHA9imehgEB91wO3O4MzgpwJcNg/qAekD/K6DOYCXPHjoClQ3tAwUU8ZDCl
Wyqcj6bshY2rBVvDjHUvesV6mLHcMXhQcgyKJccAzdg1A7npims80TFAM/Z5
0VL2EgNuqXAM/sOA+zoD7vNzEkjN7hjZKkCwto6VNrhKLnrVDVr0kmF7Ql4/
cYMFW3kR3G8SbE/vsmALwWFLpYVG+MshqdmyQhH22pIibYHzGw1lBm45bXWZ
tviuj5ALK4+yebxZ+LT122mrEW4jhBObaAH3FbqptdE2yU7bimf4LXf5k2nh
0VZzboCjkhdHbgqCFi9ftWgrHFmxRZkxNtZFyhJt/Y5xYvL4BP0MfAObmNXN
PC1mvhhhi3fxmhi1hrxFfQtOutaH8sf4N7j0BgbiRxrJdA0UMeB0VeNcot6l
u+S5/PahCRrVu3RZzuK77qyLMJdqXoachU21oWQWP7EOzW8BVavj4FhBc7h9
bh5snjUOPlncjLrJMEn77MToZ2b17jjbIqs5yVwlq5Kk3UaP1aWRCZ2YPJ2A
UjaIT9CNUXVox3Sian6/DjBnSG+YOc4YPbAUZkyaAHNHDoQll3SgNMFV7MLO
MYOsaMGO7JIJAzplw+o+cU6yXiyTNdplZ4RHmcvDiz0QxIv956S6MKsXrx/s
G51oerFys+5LwicwyPoaI+shJmXvGMfpUzwtyZusTMp+GsCLVclaTylzOch6
vZ2s8U6y7kSyNvAga0LA7jFluc/djUjHFs3Kshb7+K0gV7hgbcrBGh0MrBqR
NYJXuVSu+jhY/Xawaq45Lnw4QKcud2LxU3+7BYIVL59FV6QMvjgzqmoIVXyR
agFVBLVw73zRDbS/4iu+tifaRb7GyEDF5JYYjRDIGzgSvjfgIV51OU9Qejf/
10uKMnmewCp00Tc5EapeER7sjGz2w0eu4p3Rww19ae7VLhmt9zjQGki0hlbn
cpOtyNbNdaB8Jd5XoVcQC+8uSqRaF/qwX69oBhtnjoN1M8bCq7OawnOTo48d
uKwJ+gSCrUqXgspWY209pQy202O1aCJYv/YZQS2CS/r1hfFDB8J087Y/H2aO
GQH5w/vDwl5p3H8VFoHhvxoduUZC66qL6pFqHdc1I3SuCv9112D3Gtdeiat3
utS43NvBasLMi7KgT+dc2H95I9fWhBekdjCjxmVwFWNaqFixK/fQong1phWk
xuXmvxpcPSbFBzhX68PJzRZXqySu/ipx9fcdFlf/CMxV8rPIEvPwX5Grhzfy
U71iT5JmLkwzuYof4gHyBuRWsIebcq7G2bnqvvDyzwdrjEdHLgpWEq1IVp9N
tIaAVT1QTYvr1FSEKV744S2sym6rgVBa+SB0qgdWqz5JFXmtbLsrUH3LVVdV
qkTSCCpold7VmqRq8Y42UPWfZJ6A1SWYFhW0Jbe1Cp8ABNOGHKa1gkcHTJi6
1bPqe9Sz6rnXswRHbbkswwKoYr9VmB0oHMar1u8sTKSaluG5vrUoGxZMmwx7
pg2EkgnRE56Z1W0Oh6XScqBw1G/fMsxlagyuf+BdB+2bkkydeo6F0umX9IDp
I40b+nkw47KhMHtgDyuJZUsK8KbaSLOMpU7viqIbf0TpnB4tg2PUtYwV41HG
ivUoY9VwtBpc0b819O6UC/eOb+RIvD47q5ajq7ZUwujrAqOvLqgPs3szqT24
DTmt73tEBQKVsb411zvYMCok6olNIWB0e8gYFd1dNQKWsRCjGBPAuEDxFZm+
/7scjfboqDU5Sjf/+LdRpL5rXprKUzerNQSZqgckqy7IalqtH6bTnFq+yAz/
Bg4b/5oun7ncjA/1irUY6ydvoeRAGyptVb6XarMDNHOxTmDLFc+MZH9IqlU3
K1rYnfBkKuQNaA9Fq9pC1avJxn6HN+hHxVhbersQ1nfjXyluhDfksidg5617
jsBNuGrhDTRQZOt2p2wtHN4W8nvnwLGCBDMGe1zEB74S292fnp6NC18+XT11
TL6VfjU7CRTURiCF8U14IY0pvMV5G4G7IKjCNaVXB5g6sDdMG2vc5q+BaeNG
wfQRA2FQ7x4wsGOGGCCORmuE0tm1RGkwiOSWwIWqJYC8XdMnCmZf0BK6MeZe
cVGTsHl7k8TbUCtb8hKzawZwY/XusY1Ms9VIvpYw5j4rma1qZcsyW1G6YmvX
v2c3Iem6b2y6S2WrjoO3RkftVy68dTNbDd7+IvH2lMTb37ZZvD0t8RbceBti
bIBPMGgEJddkQN5F7aHqrqZqY5cnb5tw3saEwlv8EE9TBtbirS884CaawNUC
Wa1+t27aZE31WS3E4qf0QQtutH5IdqZrcwEtZrQ3dvlNxPplphbfbhmquIsh
tb6qUYmfEZJGpZvvA23C81JljH4kV64C3fzbJKsuMIoBrIpnUyB/XC595xhK
TYxWHOTmSumWdPZDbsQxWjtEjNoKV5a1KgYUuBSsdFmx+rhk1WXJio/tIGvV
JlmLp/Hf9G+vagI/XMM5Wra4qSlZMeb6/rxYeGVaDNw+sYcRCZij3uMTKBWW
RiI/0R1AaxUdAmQq2q1bLOd17/Lly7F1TGB0EUwbPQKmDe0P07unmi5rnw5Z
MLBDBjUUEFIDpbFsboCMVGwkWNs3Ci7rmgm9z82Btf3iVKQOcCI1UP3qVrf6
lYvLivWrrcP4LeHNeYmOxKuB1GD1q9ckpGIzwd2XpxBWS2Y3965fKUitS0h1
ayY45uKyeiJ1qxdSG8hIxSfcngTcOhgmUiv3ikRWQYYHUuPsSHXfw+BkqkZQ
9XMZa5ewfkHU5uo0RL+tkwAfLiWOqo0EmiVh/aaEFX2y6A9SzcbVCXDH6gcy
VnVVw2rqgjJdxSpVq1IM5YqXJhhLJuv17YixkfiyjqpRa8iMRY1atJniVyFH
r84GYy2pSvUq9tOufLEF3QggZCtfaAFVryRzY3VmNvtJN0LAGgarM41VK3gy
wNCpIc0g8NtVqkZ4beAawyq/mj+X31zYAn5fFwffiUmIny5pxEXq8prwKROp
OHnruUnRx1b3zzDUKQVbhcmq9BIIykaKN7EXyT7xnx9faPhQBNesOezFBHbN
Zxc+XIdMWHpblByTRVvBsBmkYV6Ed9TEhGcO6egHly1bBgMGDIDR5zRys281
uLhDpm+Wtb+BeB3BeS1sh6UutoPdvb1OyODr+sQRr0cxbq9jzHbyOtqT19Xp
UNiTx1fJbWfMNtxbDHg94Wj+qmU2f9mrYnb3lg+VqU22w/geOXB4SbyD10eu
Cl4Vc3QoKFWx+sTrKonXv+LFmI28/l3i9R8WrzUENj59gxXFPHCNwa6i2SLk
9WfgWpdxjR/yGWK10fnFea1R55ff6vzizNYQ2PgwjxsYzNYQ2Fi2JwlMMthE
9v6N1gpfSQXjp2EZDj7NWF1GToQlhb2IjX/9SEvuOnwquw5+G7uj7eyGqk9F
SuvpTMQ4gjo1zpPb3Fsof4WLurJ/Z2hny8L1ALffRRwb4MbVZWgwFF3blgwH
BHhen1yowudBMHDXdq+M2UMHprmgqGKfFijH1Vh1FmxFsaoN8ZDXjZ2Uo9rA
6fW14be1cfDa3Bb0Df1ieQPanf7F0hrw4Tw+LvGuEU0mXHrppQhMZChyleIE
IteldCoIeEdY8AZ2FZiPaWBg3KcXireC+Qaf/oaM+1j+fkocV7dODOPdfOus
x/B9qFzHYU6taPhJ0/tr9H4baJP7RedkwaRzajjSZIztpMitFZXc5Fjg0X6m
mMpCka+STA5Mk13VOwG6dcyFqd3TSZEHortam4vxqM3Futbmbr2sIf0Qrx7Q
ytYbUdO1/8wwlV9wmMpxiql8WPSflc5PIEW+e1TGn1KbU+heGALdvUyOcPB+
T2NKkxFNtqUYeMffr3/QnEb7jEYn3vF9H6MUr+tWtGYG3/GxEhpqrXT2csb/
ho9JeTLNTO8mBk7vKiZH6R2teVPvm8khmBwOsnvFHgyyG36ybpKd/GS/iD1w
PDOkG0sdKj9IJ/uDtLi5hZJe5UyPlJiOM8EwQ8YuLQS/OBjJ8UWSHlB6U6IB
uyNe4dYQnUI34t3EY7RO2qQ31SgebogjFIIFG+511OI4vt3mItST5iL4JclN
6OZ+Rl1HVKxgYDaV4P5g5EbJ/euaOLhzTGsY1jWXtk2S5F5cg6bQlEyMO5bX
NVeAz48gRccC82L4ZwFwswsC/6sbDOBIaA7h6MHirc8IaNcRSvyYeKwG/yBG
pwUxmO+PIHfE3KgmWI2fGgp2ugvgn8C1mMSgIuDgc1IcGbX+Bqs7Saw+z2lI
G+7JCnJPIh0ZNdk9wRzFiouaEK/n9WxJyV9XVjtyFE5D2qsAeNuoeLioEzsP
ema5tlq4zxqTCoCSe/IquicGq4V78pZQ449NS4JLGa8PTEw1We1mSIdcABR9
wpSjEKw+dYPF6t8kVp+WWA27wmV1Q5nV+BtydyP8VRAjGCinxiS5JcUbu8/T
9WR1TS7HDSlurwAebGbP/moU/dVl+8TH/ZMou3/CUJ2o5n+95DjSmvqE+fQs
y0J5O9nTQtGQ2W7FP91LhnvDWjfnkKN9gn3AnM8xLuqbkzrSJPXhf4ka2hvp
4fQIV6vMZwO4JcE1AjjGqBOh/HFumecPZ0fI5e1Qg2uIcF97A+Jcfocyi8EZ
qJAhHn4ibbsqwIunZ5AAr7i6CZxexwV41XVxtLJn72WtLQE+nw8S2zM0CdvP
dIviKGvRf8Y/8zqf2l4RgOJCVH8qOM1f4y8LxPv1kN5P2YgphLaLa0L5DvMQ
iaGXc6lnDoPG489poLgol3bIgAs7ZJtzdObabZTznTbKlV42Sh8utNf15QG4
eT1aEryv6N3MrCRuucQJbnsl0a1tQ64k3jm6Dozulg1TGLQN2/ufUtvGY1Lb
xlMelUS3cLFcSTTAjcmNeyekEryfndPcAW4329tRSTR2r8nglmxvBPevErh/
t8CtwR87G+DtbfW4rVF7XC2Hi3J4s4jBFSV5YRuB8E8KGDvGoEdZLsoT4RQS
dclGocfOgo9S/rhokHsxJRQfxQI3GeCm3PZpLiVFN4T7XRAuhjUgvXEeDqNz
pCm1/QjwSFVqR9kAXvUJ33q5f1fb6gK8uuY3pbAT+ZAHo21DFyhH/5sGUKxs
A5X/aE52SvGq1hzluoxyeq409MUHLzLasxr73FBuy8N5FBclMV5ewL3vsmVJ
po1yionxH6+pR4+/OjuRxPhnTIy/zcT4M5Pijo3sSj3I3ADxI1ON3g0k+QyL
5GY7RwCSc8rqdcRjD9LH5I/liMcKJZKjtDZ3zK8WHy+YZRJH75dCsea+52SS
BFcofk62stzCpLiLXeKawbPZJQbFMQ+CdgmS/Oo+TaQ8SDT7PBnHfSMDUtxo
EbldMsOxeDmKERwpzs3wGh7NdzUdeRBuhjvtEk7xOEfxEilutIisHdKGlhi/
uyzes3j5pVG8FBSvMCleL2DxMgDF4Q+8dhryu0E4GMcn/B2N0KpwccMxC4KZ
kOIrMzXySnSXGb+6pcDNMT1RNjO8qYxxnxaoeOlGcZ0o/isaKUq7s6LAuWES
azNMkgjjFQdF590TaYpjgh+FS3CjU8RNhGuBqpc0iIwj3LhsENdFCM/s8jic
ThMlqDR5NAVZbrSPHMU8syzGOcujTJbjhRN7RNwOee4L1RLH4yc5NIz7A+vw
aF64HJsLhbOy2Y+WPVseb0QJEcLkHrzrKG6EpZhwUyJ324uYwgu34O1RvEQX
heG7viXDRcquiv3+5HXPpSE9f2xAJ6U2OSm/rI5jt+Bp5KYYMrxsQSy8xmT4
LUOTcIqZUZlE3xu9cBLdAt1Kt0hwdBsGynwJ3ck+y1Qx0G3Y7vRagSXM3RwU
xDmJdf7PzzYdlOHntDBF+OAO6dDThm670+0a5/NwT9YI9wTRvYFdmxi+x3TN
hL7n5sC6i+tZ7slArzomd7qLHHXMWEL3xAuy4MJzc5kYr2Oi233Smnsd0xGf
zled7kM2p/udpbUJ3VjHnNs3G+ax673l8Qq6P3dBt+ekNY86JqL7NxPdmIE6
vb0Bk86IbggP3ZSfaoiqPUAhEydUlK5NJ3xX3t48cGsfofwRwrZcx3xMQbcw
uv2y0Y3o1ux1TI5vzQqe6LJx4gtDgVc+L+z6f7YK3zrRXHxuPXRqa4Laxbdx
2hqetzl7XVgo7F1OfZYiRrSn8vHshO5oF3RXvi9mRT7Z2kJ39Z1v/FZY4KZb
EG8LhevuWjTtHq2TKrzpEujGEmbRwizIH8Yexxs0tYxJJ31DBtcqZHXIARRP
4S0NYddl/wQf205WuFDeBYOyIb9vDsDG2qbyRv/kxKpasH5QFmwb1sZU3u/k
x8KzlvL2RVkWBhKVaopioqXSohIc3hNkeIv3Q0flDZ/4j95Pw+PgausfRUR7
+iYN6OVy0zeZ2KEu4XpYhxRqxMbGQafZHaFGBbvJjYOR3lFBobY3CLW9vn8c
jOiSBYPOy4ZNA+KcsRNhdt8UpDA5r1drQvXuEQ0d3S72pkG3wiSZ3UJtU/ra
bnYLz8TENbveEZ4Jdru8PK8J+Sa3jM6AT5jadmvGdh3aFkJh8pSKazjN1DYD
doi4TjBwrRGv44LGTpDWVXdzsV1ybYZhmmiUOtFlq5vqU/SYw+qOCW51m7ET
XcY1PvYcPWYMFfIMYCPRvTpekkRckAB3IAOJbVkm5ASYStvnBmwaBdHCxTKx
0E2Oia7SmiInorJoTWfnNjZNvOTC2iQ02t0p9SxC+xVC0yjMgoU5vGEQ8YyX
z5vRXjZ3CPVJO5tjYf/GLMjr0x4q9rPv6hONFT5j1KRgfDsoWoCLWB4hP0S2
uElaB6lT2mMmBp7lORYe9cl6irm9f3JrUtWV1yXAaVwOt45bIieZqv7uKr4L
6InJKaSqcTkcTgq6ZRipagFVJR0oLc0wjYvgXJ4vHptg4/KnCpd9upHfpteu
EB8vmB/ShN5vuumH2Ons6Wh7BgMjVUe7lxUMXCcEtdEbs7Z/PRLUk7tnwOZL
4sKOjVw7oCXfujm0qXPqm/BC0NG2x0bsjvYzEp2djnacp6Nt9CI+MrUlDOyK
C5hTPWIjdQOWIn/0KkVyH4T93H7fGu+rSXT+I3Q6a9SGGB+oEinR2SI05rip
Reaepm6WtuVoN7E52jGSlm7q3op4sJkIjfit0AgntGaqaeGDCDc7sA8S5eqD
YNa4eHsW/tU3k6nxw2hGDFVQ24xsTyrrYvZQ1cdiJM/DbXgSm8J9TRG/MS4C
Ga/ShzONgqNPV+a4IXeDWdTa/2PtPMCrrs4/fp97bxYJIQtCJllkJyTKkCEi
SwTZAiIgKBsMeygz7CEQRVxIwI2pKI44cAS3URyNrbWmVmva/tumrTatIw44
//O+Z//GzQ3K81zGTQgQcj73+/2+48gaI6rjDKaQP8Yo2kZgvyXYCCENj7B+
w6YH6Mc9hQSGj/tsV/hs8Ua/pnszcYK7fn8ubxfp8nPbRTiGbRVGL0AYghS9
wMg53LiRXZnReGM3co4KZLit6AcqkL+jAhluiHuvgu1u/GRFAgpkWJH5yuzo
r67iAtkSOSD15ir9KmuBvxyIjX3GLDppO91Iw/dbCRvp2dUdF6aTST0zce2m
2AhnD6VDAvTwsWTDuYePJxuXs2QDOrS3XdaFDOxVThYOyg0I4sMTI4yekD1j
WNVg/7g0GUqLiZoTWihtLy1GOVzP4R5Kv+MSSn/Ekw0xFH6CQhhg/MbSNAni
Jg3EzqXFOBuIv+Yg/k6AmD5+olKZojhYEGNPaxfwyoF7QrzYFBLpLpW35uvB
RhuhdIdAobROYgZinw5i+BCqLeS1NK0txC3dSA+cbnQjlQvLsEcbJ8Qd040M
dxjDHyHEcmOWzKYDQ9nLodxwinftfdydyV8UywkA5Y4uUG79lEUxdTVFGpR/
zvhMEHjGeF6WDy2s9pGm53iacld3+OCncI2VUMxMNXuxmphI6nblI7LxEqRf
ojHEbOtrs4zYspc17NZcV4Dr34Rmbt0BYUY0Xnf08PQ8Mp4eUNDMsF0Trjy6
Y3wWaOYoxkrR0odcnKOErNz7FnyWoaMafi2zjHD2nNGKvUq9KjilGijh4Vsm
fr8cbwABPAtMz+sd6RJAh5jte5ZEI2D7Hn2IREMM0qwd2g1RvWpIloHp21ww
fffETmy78ZACGUDb18u51w5dW61dEo13l0fbBml+q2FazJLvmVBErh1cRhrX
JQTEdLMDplt0TDsE0GcR0wmIaeKOafgKpqAOC6J2GOUsmvkFoRBnGKJZBNBh
ZvfeU8kOkUaoG6a9qJj9qnFPa95rb5rBBHO4Esycz9WV/GpQxmctywixVg3d
OkAUoa0dIIrRIGzxOw3UmD5kk5rb1dAiCGeunnGAvLMLqCG1qKrEy5eDAfX5
Vwa9bRI6XCc0/d9L4opa5hpe7L9Okf3XED3DPR+VM3qQVljy6krpQD0f8XZK
K0HtYYrapytqeO5grCeGVI4rxcgZ9h8LRf39TpZq/BcuTNrUkcy7tIzcNakA
FfXvlnQgrypFzSgtm69F295sRk9jeoaDmrVrh57mkIYGDx3aESbHsceDFw+N
XpAI809AJb9MvTwEzDm64/uNhyXMmHUMurAU/8um90pxTaFXuOQc69uZc4iu
vZWDs5Dbmy5Lc+naU0XD6wcXkEshdb4y3nE8BrjtVjRkOUcUa7mmj5eMzr2O
toH1d7ScA1quG1ZqRUOec3zC5fXv1kIesXxEqSeV/GF9goXZsQ7LloMvGv4U
kNlwhdhdiOo2a4YhTjkHvO04brnn8rrl3jQlrwOl0JHm7OPTtpqh7co77NxT
zOade6F6z4eQ1y4DMulCWrvlHDV7ilFaU2zznMOn5xzw3G8ynHS1mJL5RDy0
no/gmA11wrqaYlTZitkZQGqfWBjKblqCdpBX2Br4prfy2mjhaFfaHLgm2Da0
/RLa9bfmArQDKus02afXUpOKCrt2c8Ev1ephbfFwLBPWzOFJ9M5Eco4q65+o
sv6BKutvt0eT/23tSP4Dyz9vZIn087MzyB+psv5gUQS5eUwO9nhEK2gDsIGN
GrSNiZkYA9rHOIG/4mS2QNupWc/oAhGdIXrbdYV6LmAmUoDvd/2g9VMuQ4EN
/ziYkdHzkCVt5CE3nkcesn+kmpGBPASgvWtkogI2Lxse5sH0bePj2Zzi5Vna
jEwHlyV5keZdTzwPeY7nIU7B9KuLOwYVTP+W5yE6sD+lQvvM8mQyllquY9Pz
Ldvx3YAdZ1xV+rVDMC2Afc4ObC8QG5DlXjWEr+1jCGp7HOJheUhUYJ39sNTZ
ZjAdqQfT9oF1CKZtbdZ+UTY0e/SC4HXAHMSPsG55NQthXTGt3AstHvRpuOwJ
lo3CEs266iIvqTtaRJ+uO1ZE6o8XioeX1D8M39UU+kn9rwrpX6fhqQLS9Eoe
PprfziUtH+SQ1o+yfbJTzy/SEAbYbKA2PODfybc5AZJfZh16TfX5HiwrYhN1
F+B3BPzMp/MbEhEAfvVNpe78DhBYn1e10I/z6CE4j958mi8p31EInOYRSIhZ
OGSw9jBaJ6uuavqo38/79e7IslcP29vcocfWohkvwZiJabiRFaWaNqehwD5L
BfaPVGB/tyOafE0FdgsV2F9upGJsPish/3ZJAvmYCuzX5kSLG506KZ0r+/E4
qI2hGA5qNuwSAvL5c4+aQAdIi/D7JH+uTL2/7zR/LkOjtNFSzedw4GUCiIyl
RZ9DHFLC3vvYuIEX4b8omMTa6MUbGHiScYclChGJtSA0lA6vubiQjOhTRn8e
z/rwjMaOCDLnkkKU08dEGzUntNgBVaMl1o85JNZObdRmLx4jNEQh0IunEuto
x8TavsY0hjy7gH3lPDk3xyC085b9tgn9g11SwwG5rTOAzTmx9mJg3TlAYB2g
fMgJDW14mqy2JNZRblGIG6K9chAGCJ3qvFNE9eLBd69Dj4FIq5ufySaNv8ol
DQ/kkbrbC0nNzmJStbIHqVxQRiquLu8An/IIWGXsJ5NHXxAOv/SSyWMuoB+i
YlY5qVxWRqr3lOKj5lAJqXuIMvqxQtL0Rh5p+Q3F7ye4Li8LBTImEdmk9liJ
yDO+AG3MBXIUALYT36P3Z/gdTdCfx1c2kdY/ZJ8HXs8rcFb1QPgkmoz1KjHs
0/nqYSmGX02R60udi0j1UvoSN76MtD6SfP4NGke0yqAphiVfm7ayelPDDVm4
Dk+I4dad0eQbKob/u4UFGP/cEEUOTyogY/uVoxj+NRXDt4xlYjjWAbDXsedA
HMtZFQ5YMd2iAbZSsjW8jIvjr/jT47gaFlGGU8szbwRpM7Uox/dbkPHW/D5f
DezJBPDMXl0ZWi2JxXItsVg9wKlvLtSeMg8TfXP2lFm0OB+geJ1J8Tq+bym5
ZUy0gda9o5Px77TrijRybJI+odIhYDHQuc05SqXMWmLhmjKLxCJAMVCg9fMN
MeRxilUQwW+vSNPQGuuwqskNrfFuaPUiW0OsgQXmFV6MmUOc2ubgbfckAo2d
OzNYYBGmX8UHMypK/8p7+KIChcxOZPUasymybY6BNVyCtfHB7qThHgrOgwWk
ZhsF57IepOKqcrzInP7uyZdfQKpW9CDVGykcdxVTHXtnIf3dDQ/nk8bHckn9
vVxnPtsdLy9pfTtTJsy4Rl4WACmZMtwb5iIxqGj9TRZpeS+HNNfnogBufJ6K
6NoCUn+ikNQ9WERqjxSTmoMl9ENUbexB2QXkphzHv6q4KgM4W3FdOana1ANp
XnusmNQ/XkSa3swnze/l4tuqb+rhk+BO4Wn0n7NCOa4bX2Z5BvzYJq5dY2dX
SPvbii80YsOGpqrrSxWxvQBsL9Lar/Y1MV57Fay7YOpcOZ3+xy0p/mXaOORw
yiEcTqGsbt7JtrLVLszHNR/IaaqFv4fQYocKLf4Fa0vXRZFxlNPHr+5Ofr+0
A3mdauGePXtCWMsXMMmeOUwpruWqVh9O4azmtb4MDchibQcI5A885nqmSo/2
jYtg+JCyj47rbhFVIMGdoope+H4rK5cOKUEBDAMpIIKdc+WQtvvn6GPLEKdc
OYzlylpMwabB4UrqaHJV/2IygZL64NhoWQsceVEZubJ/qcswSgfHWqA1psBc
2RJT2HPljg6LUC25Mo8pfkdJjbVA+vgDjyk+o5SGlo19VxaR2YPLyOcbEwJS
2rbG4yZWC2zV5gh/4rVAiCmIc67sllMAjI5iRmFXwfC2B7pCy3NbKngb/fJ/
LMm6yoMFy+HBYTpMYrr50UzScCSX1FUVkKolVDeOuICedGBbGHCZVK8rQU7X
HSokDfflkabHc0jLC5mWdo10p5ii+UU+hPJ4rhdCZddMGTf5Z+hD4RZeY0EQ
fmdjpmja8PgsM+HhpPXjbNJ8Jpc01uWjoK49WoxYrlxeBphm/6oQQWRS93Ax
aXorn6pkXOzRBHEFTyoiRVJBBTR791LWyPzLYDm4UiAPK2DzKccy/a/DsOJ5
FNKqIsj67LzWnUy1+IanEj3Fxihh0xHeaX5zjlkXbF/3hpkvczkNagYy5aop
JWy7NI8rfoC4YqeKK/5N5XTz+ijyxkLWaff6vBTSsDiCMiYH9uglKELLTudZ
7DlQ0pjuaoQOVYSOEeTljR/w6wzLc0ZX80z+fnokwWkshDz+8X3x/RbGDJzp
+WB0H0ZkqZuDCI3N5Uqh7qGxSyQBND44hpKZ6mWg8YR+peTWcdFk8wjWy1g1
JlHS2FyC18HhgipLN7OtiS4qYGhsnex+T4skAoXGn3Hd/Id1CWTl5aVky9gS
SucE8jdK5H9spTTm91f/G++vhqnuONJi2/Ifb0x1/2insUMk0dkeSYToutm4
URX3TrYRScBepZpVRbpwtizoiDJTYwuNW05mkMZj3UndvgJSvbqEVF5LJSKj
7uTLLiDVa6mS3F1EGo5S4j6SI+IIj8ojMDCG0676MuCt9enQMw08VmupWWb8
CouCGmroq8f7WN76AOHEhrpRQHvFig58AxDZturUJ/qZ3XHsk7Exxhj0X9T6
CQXzu7mojVHAHSsRUOY6OoQHwj2wCthUn489zFgJ7MTrf03QYdcEHxinSiiS
WcbRyKLoYNDsCzI1DoLKsNIUx7h1KivFDH88nz5RIbJPD5F5/3OSMYYC4rly
Wo8gV3QEatdQKUdrFZTXK8eVwlc1X5AHyvlHSDh2qYTjy80s4fg7Vc73Tc3D
lAPWm74xN/rzXr16eboo/sr1pjNNJa0zOYe9SQ4QwrfpKqOAWNg1o7gY32/+
uIMTipGzMDkyt3esVL4mZ0NY9OuQT2w8z3ziIH1ANwVEv5f3KSPXDixExbvw
0nyMfuXUiJZPPEBZ+9BUe/TL8olIl+g3yh79ynyio4p+tXyirej3Uy2f+IIq
31+vSiHj+peT+6/JR87+vV2cjXfjrOfnBRQxZv7rCFo35YugZdFvuBlQUM42
3ZtN6m/OI9UrS2AejDE1HBFbs5Gq2P0FpOl4Nml9Ll1Ev4EWaKQ5DY4EVL6h
CNvJI+lf9nAhgJZitltA8esF0qqQQlHWVfRCYgscNCjbgVTvLUWxSlmID0pG
TCCgZxmJuwKJqwMX2t1q7ylB4LZ+mgMZNwK3KSuEY1ZmE6fzGWZ95jSJ7+dO
k7iw1s+DCeAs7B3lnHUKJoLVvaKvovE2Xk67K8OhWpcQfG+FFiWD3gXdCzsz
hO7FaILqXhZNwEXVPJrgS/9nDyoje8YUkQ+p7r1heCGMaTDG2vrgrmHcNGZL
OGazlXyVTcdXtx0w4H2sl+L7ZZ6c2P9C/ITAoqIFfSIdImDncMHWtBYoXBhp
DxdEw9qeKwALl/Qq94wg+0cncsRGGOHCfVq4YL9hhSHWMQKmj+cDhAuuETAP
F36zSjQad3KMgCFcgP6HFxaxL6qnF+RQxMZKxP6rnYjF/odbALGO4YIXGAvS
0rEHwiZnBWFZtNChTTWL1ZaaFJYAh2Cy0FSdRer3U6Aug8s3hV7z48UbtdsK
SePRHNJcAzAwdzkbbWup7m1rr/HH62mBVW2Yo6rFsbyDeAHU+93akLS2kMEn
QwbFW2AX9rMBcP8gHz6JXB/fgQGaFnu9ThaKYh1bxwz/O19Q8r6fi10RoGcB
s4BbeH+BXXgeFoNS7Cpx2wE/QIjKHSjSEeefYxs0B68vIHjbVbZzE7k+CV5q
TODjcvS65g6Gwq3VFW6hZdCaNbbBV1r19cUqeHCr5QWOhxHANXNZI1vzjmR5
pdVZqnB/2KNCh/9s4aEDVbh/uzGK/HFlDP53/GpaFqmdkQz77rsq+AJ4BXxn
KNEqW4RN+Brdw5ODzBOGsTwB63AwnAd/mfG9cm1Zgg5fWwPaz8wSDvGdFaBx
4c9fOiSX3D4+GgHcVrJbY012tSzhaaMBLcph12egZDfaWNIsk12eJQj4Qpbw
p40xCN+/bI4ltfNzyLgB5eS9VWmO8P3P7jgJ368FfDHZjSc/UAD/yJNdhK+Z
7GLne2c4KmaW4MVBj1CrxBXwZVFCdACFq+DbfJSlOLUbC0n9HkrbJSU+Adr5
FLRbKGjvzoEEAY4cLtLHSDfFeZG+hK9fh69a0uy3sFdvF/bp7cLwYd7GSEHb
WlG9uRTbz9hstFS4rGfY6zKLB0jiyPU5IVeQDHHrUbz1Im99pOEZft/qb3KY
0/dzNYoFsy+yPZEQ5CJS658sckFuEUduNga+WUBq9nGgaWKvDBREj7IVt75f
tuwWokOWtEI6ZE8SELHwYVXtDd6FV99cJC52S1DK1m3No8apnLTcm9y+HOGw
mSMgYS/hhBUZApW4P+5VGULLVp4hUIkLGcJf1kaRl+exzor6+fGiEy2JZ7VU
wwIPsTFihnpOznmYiBW9vqhbJwaOEeA5RPHlLEaQQ3XwuKpXpmOEsIpHCGsv
tnaPtRUhhNkiBIFX0LcbhrODvfXyNDII9uVTxAp9a4tqMULo4NI9Fuky7xzl
vISTPl63RAhnLN1jZlTbySycAV55hPBniti/UsRWTSoic4eUkb9UdjbxSh//
oYj9L9W3/6OI/Zoi9tubFF6/d8RrghbV+q0RAksQ/FZ968UIoaO9gcwtQKB4
bbw1G1ocPJKn8yhPNxWisOVXseINrWZIC2cPMXsqxdy+6bU1j6Xy5rEwy4VU
hrD1tEfZAmChmQw2A6Gyhd/HIKvmnZWy9ckEIVi8+iVe6RugawG6Gvhut8/B
+/8pKwylaAeUok1v5ZG6h4tEgqCgurkHqX+ikLR8lIMoDeEobTwtQwMHlHod
lKsvIFT97YhnWS8DrmqbRM0M/k++gLpVTNGdQsbq4YF7POssXqFq1no8CdFa
V5kXfHpg9vqSuhWsjxga0NR9rJ3ITzep5OC/23hysIklB3+F+1jXRJJDEwrI
6L7l5OiVWbALLUVJUdl/xrFqTGJ0MrAKqJQdZOOCjA2uwPebB60UqFwvv7CQ
VcN6p2BsEEwyy2KD0KBjgyoeG7BkNpzMvSQfVSuMTewbnYhoXUbRKmIDSGbv
1ZLZYGKDWmvnGH28yGOD0wuck1k9NnifovXXK6zJbCcjmf1MS2b/zJUrVMBW
jywl28aVkL9StP6LovXLHQqrLRpWv7FgVe9H4FhlwaxPTw08LDbwW2MDL/Yk
hLn35T6QyCcn/IjWxqpsUrMCi14iBhDNYxjNilg2xBbLqsFkv7bNBxWs137N
n9rqkwofy9zqYwln0yxbfZzkq1q6VndnIZuaoGhVZM1gkYELWeFdPlK1MJ9D
LQwZ6wWiwXdZiFcP8hWbElACPVaI0QESNhRAGY6E9VsJ68WymE/Clb4Zm4Ah
HMAqFyQPWC3bWxpMKGBFq19Ha3uLX4quUKUUdPUGbPBldA3RowHLfvp8m3AV
fQlwhU3F2LLz6h5r2MAiucbN3eS1IiBcz+5T0cD/tvNoYDOLBv4P9hmvjcQZ
5VmXlJFtowqBcWkqgJUFLV7MMsYnTLoKimrUbDsXGI/vNxtF69ALi3GDPG6C
6NO5zUDWLRMwyEofeyld3bq94DO2dmiWHEjbz+m6nNK1mtLV3pMLmUAHlglM
s3Z7RbJA1pIJPM8zAedAtqNDIBttBrJat5c1kP1CywT+rzKW/HZtChk/oJw8
NCsfyfpvg6xxBlm/FWTlmcBPlK5ncVsaZSt87TsNpfmd2wv8KpNlZPVif4Ff
wrVxP4XpsiIG0lgyeXA5qb2xgDTdkSkvbardwDtza1LslzYhWZN13YpxHFeu
fqZcnzeHHsxQINUMBUKkZv0B3vS6teRlqlWmWOvv4dczsRFirlZDdLUq4liW
CZiCFWkEXP2dfFjIiuUvBBoU+0C+fqoejS8xndnSkCOj2RDga4xAJfXy9Y8X
QrOBx+AqfQ4aB8JERUsPAHgHgTdIqoYAVX2uIPUZ93h49YhVYLT5RDeP1626
5Wr9mUDNcxWoooeg8SC7LaSxKrNdPQRNO/lUxDr6yT4YIwXquf3c9++OJl/v
AN8fTb6sZL7/b1Sg/uWGKPLF6kjy8bIYXizwjZswYYJHfEtlIDR6u6ax58C9
y0kJg6V+eBPQEn6EnGCEmQHgTmKnDOBKfL8FUqxe1TMd78Mb0rOUXN83kkWs
/QCngTMAW8TKM4DdPANwilhXDWUvQMaIA30cEEgdmmtGrFOCywD0di0VsUY5
LJ9kGcCb19vbtZwiVj0D+OM6Ud9SOIURB2gheGt5N0TqqUU5soVA4BQygK8p
Ur/RMoDvtYiV4pS+GBsZAOA0YMLq0yMAD8sAfChWG/dmkZolRfzrrCOD6FoK
0UOZtiYCgGrL/Wm6WtW6tfxWuep1DltTAoStoVauGlNk7VSrMO2AbHsly6JW
u5lqFbHqawurXhOrfolVL2pVH8w5sBTgj1hq4r0FSNNYpGkEafltDqk7XoSt
W0YEwGjKzT+DKUC0sY5thGx+t3uwEtUfvESF7wClSprW3FQseEr/V5K8P6Nq
5VV3UOeaovSEapbFOxYXFTvbfof5s6adrNm1fk2OvGRD1KvA8rdSy//NTm75
qSj9J7X8f9cs/2dUlB4cX0BGXVQO9aoMU2Ui7njp3xhjMEAaAnpVlLckf4cG
af2vwvebK8XpnF6xZOCFPci4XvmGOF0VsCErlKWp9LFtaIA0VbP9cwbmQ3+A
XLCub0uAxleg6YqhubiWzG77Ozja/ie4OLWnqYykwva/stAlTZUNWdGWNb7u
aWqTlqb+jdL075Smzy1gS0NeXZKFtv8/lKYtmKYycWonabwTSXlDVgeHhqzO
bqt8u3iSSf2mXFJxBTvQFaPLSO3qAtJ8R3rASFXoU8Do5KEXkJYH09rSp155
/7M0//A3PoXPiVU3tu0JqYKoXmuD1muYAbyOz1mXSFqFavMpPodAkWoIVS/Q
1CurVhaSou1Xbt9rwhNvmKB/OjAT5sSk40duJiIGw3Ge14pM0JnQDcvnfOGD
tHzIvgZqq4utjattoNIMSr0SlmrEABVoN6ZCf4OvOEEQ0xu4k9VvNfOuaal1
MwJHZ/12fjvgkWTNzzuL0aZdHJtrNWzyIhQmpdTLf8u9PGDzX9TL/wO8PGCT
enm46fl3S3FfIUhAKEIxdBqXPYOonMowaIwYGPQMEz1W8DuBlPBr+BHpONC0
+HpdyrD4LDmYA5oUOmtRk17XqzPpS23+lb1zjbL/areeK65JXcNTB4sP2wwg
OBVl/zu0sVsg6U2jk8mg3uW4KOzIlZ3sFp9r0kdgURjXpI/PjFQ9V/TxrIPF
t4enHR3DU93iBw5PYyRF/49T9B9bKUkX5pAJVJeeWZmBFl+nqLUmhRQ9YFDU
ixj1O7dchdoY2rQvg9QsLmTSM4FUzysmTQcy2tXXChyF7Y54U9zGQvs0l19h
9GkNo6HWDJUe2ZTAMaqP6dKX9Wsr/KpAxURpIE3acjpTh6imSf1ck0pd6nOD
qdeEqU/CFBIDCrnGF5hgbPl1DqLPK8cJQgCqXRGqEQhPHaoV15bjvFfr77Pw
OfprT7Du3anchBQNaUcq6kOQotR9FH/7iyg5X0hiRSexYcbbdstqEOJT61ht
votfr7k/0+V2CiY+DYLCpNbBGKOM/wO189/t4mnoVp6GUjuPaShcErSa7dU9
fCV6ErDzWYqg+kXLVylzLwcCOEGzFB1lRYotBPOLXFWY+35tm3scP5iF73ct
3gU0AGYEekVigR/+rdf1SUE5Ko29gCg39ionDQ3a2MOdP/CxYUvuoTHhSo5y
Y3+Yr4a5eWwiueKiMnLNwGJSTUFqGvsOAY29vXcqymUqtqPDtkWXnJSCtPGG
wDnp3zhEm7fFkuPX5iNIf3tDOi/sA0Tj0Nh/S0H6HQVpK5ejCFEcMaEYhXNs
Gnv09SwojVRylGK0fn13UjGKH2D6Y+2KAtJyR4pl7WK8qEO1S48239vNSY9i
eIY3nqPqVOvMPWZmmuKQmbbh7f0Ko2+mWxJTvxSiOBZwJ+xD0e/9EQ1UyFBv
QIBi8SlDeHoEFUOpX2alUJO7u5hZeSSeqrdDavrHLOXwuwBUw/EGYx9peiMX
N9LAnhoe25GGpwuAoPDA33EepXvF0iCHXn2krprtWG86nslY+ssYeS+g1JNj
l6OyLyqB5Uer8x2K9xyku60g1V08y0W/oy4ec9FtLBdt1nNR6uL/uBJuXEM5
CmtjcxRI9XuOp6iKk2z5N0FqrC/n997Dz3Vj3ztIX89WEmBJ/4M+ffqQSRdm
koW9Q8iEXrmoShf07RxEl1Rbvj5M+vr1w1Lx87h3ZByW8w+NDSe3WxQpdklN
hA07DKaT+5eSo5M6nbevNxJSi69/0+LrGUij20xIla+Psfn6ZgrTf26LI9XT
CxGmn25IQUX6v91xMiE1QRoPIKUvzLaE1Gtpkmrel0ZqlxawYxpKqmcXk4Yt
OSwhlUUncPiUo3HWir4LRbsaihTbs2GTx8kkV0XKVKmWk4bqOakLR32Ko/Ju
iBBLs1RamwFpxdX0nN5cZNyhhmIU81H4TUqNepxo6hVylCE1E0CKm2x9tr4p
WNlVc0sJ2n0vfI+CMgQAGgUAjQSAhiEjQ0njS3lSkuJU9sYepPmd7jYN2thW
s77iZkjbBSUvJycsf3Qhp0WAanfyKA2aqGlQNy9v3Ulr2RlQNauEVM8vdvTy
Ap5Ql5frt7QI9KwlAv3SEoF+wSNQuBWtalyB8PJsDbfZ+TRFPScb8016Gg2l
fsVgYerh7eVt+3n8yOxi44WwuEDKUJijGtWzkFzSswdZ2jcSZahrI1Q7vPz8
S9ju2Ft4I5QuQ+/UZOgRbOGnRJ0Qj+ScPKCUyvd45uWnBvDyVIbWXqu8/Kk5
ohEqyublX9e8/NsOjVBOiaibl/+Lxcv/cxtI0s7k1ilFZMEw6DntapDz26DI
qWRo68GupGZ+oUcwk+KTtBxMYW7emop2Mbuhgmw0FSq0fg/v6rs706pCvShD
fZydyVpblFsymmJJRkOtyahx2Rn8Fmnp07TaPfw+Oa6aTqo3leDGQspPrwNA
kZ8BXXyG1zKm6idNL/N/9iu5Mh+V3EMRyaQnhqRJyMtIrNzj7S4HS0jr77JI
44t5uGVLsBN+zaHZhtAMlawMcUs9vTz1FJhsONKdfjaTFCnxM97+LlF3v65T
0jLgVLOkkFRO7mHz6017OCU3ZrHp0lsd/DpPPP9rSTz/qiWen67oQN6cnyj8
ep4SjbKDiY8qGW33JiWN/tBQRU6P+FYSpFNfjO93nRSY4y/MRoG5kGISSvGj
exWSZf0izY6mtpz6cGenDjf0zhhQSG7R+kVvA4HJC0e6U6/GNvwIjDvnDSok
Uygm76aYDOzUI106mqIctgw6dzS9zwWmjDtlR1MnNcUPJXhNYP5FE5j/4ALz
X3Ch+tbO5NBVReTGK3qQf+3oTBEZR77hTr2VYvJ7iskf9xuI9GJDk08a9drr
C6Tpq1uZJ4w6fHkf7gISUhDyiKEw3ZpG3SSmFxhJTyooTFhz4aQwvbIfXyJS
Kkyv3pSP8jKFNeXb1g6C2jyNatO1aTTNWjDyIRprdhVD7z28QS6yEvfa0Icv
ICS9DpD0a1fa1B4uhpWwHlV+h1bRzE5Aw2jOSsAgIBBWDuJb6Ses6dVcUrmU
Y3EDlZT1OQFhiMIxVMLQa9bLBQebTuU4c9AbRD/n+RbNnXrl6yt5NeiOJGm3
G7dnmBy05JaEjx9Zc8t/bBRdnCq3/GRZB7J4cCkUzQvMgBJhxjkIv5Z3LEYb
HJRXCsC3C4M01Uvx/WYCfaUshP19c/uwUs+k3rlSFrbHUCveMUMNcrBiUI7R
H2811IJ3OHbEuzghmZx/aSHeRH7nxMSgDbVTyxEmk/TxmjTUHUl9hTWZjLbv
63Mx1E4lnmYuC/+9PY5KxM7Iu3Wced9oyaTk3YF4+Lq8GUHHZWH96u4SdBR6
lgb5EJlOarIQ3lbdBZJIAb172gM9pQsbD2ULXQgf83GknEgnWUKJASXWBZLN
pk6HHqQUxx4k3V+ncn/t0/01DiKlwUSneaEXwq/+aAF6a2zvPIMu9F1gnI17
aKq7ySl7V3ftkzIRXPtM7qTZPTE+CcFk3R5/mskr6+z76l2YSZLWj1A6sg77
DGDiK90VE9dTJr6VE3B+SOHQ54TDUAsOkwGJP9NDFxDbHeMulRwRQOrNmU0H
mBJs3J2BHrp+Pf/7bcoydu7pAeRZ3DkSTb5xCSD/xAPIRkrEk9MzwEN7ihQS
ZUPQJPac0dxuItFYadojSKfMrkO8Fq/LAgm4oBfb6T+jdzo65WsvSpcS0Nkl
h7rniyPALbMCzebhybKpHZB4SJOAwiXfrblk0dQO+eLSoQWIxKpxadQld3Bx
yZGuLrnOsW+oo5kvCpfsmC92Mhc50ccXQgJaijWAQzEu9OfNXdEp33tNIfly
Z2cnHNIvEyYB61dpGFycbxl0D7X0DnU2O9tjtG0jGhFtNEx0ThkfgSN0gn5X
NbcUTibVfz/ATbRPBEgZk72BujGxcqNIKC6iVUXvVK3o7eCQobNcuyGr4UFe
hT5NSXQGQehrDwe9Dhz04gVTISxm/H0maXmXn+UnCpg09EnPHA4I7Iz0Y6Uc
rCu/3R2wF4bJIRXQv8mkfrs7EpXqSVJzcwn9kNlet2us0BeHSimIEaJfsS9E
sq/+9jzBPtfaS9dAtRebL5bDPQ7ws263M4Z7qHmhL8D4SdqaZYffbfYAkdyk
WWNLgPgXS4DYsBgrMIOmTJlSzOBlLLZjbeOo52RDusk/QKNUi8VB2uC1+H4L
8Ebuvj0vILN6dmYrnS8KIVf35oXrvunMAl8c2ALLlHC4Guq5YUgqu1nq8jjs
nbRZ4LGmBVb8i2Bd6JNhdNJkYHsssFNK+FrAlDCafGi1wKJYHWSN5V9cEn5F
GfjHDSlk4sXl5MScfMY/boF/oPz7ifKvYW02qRjBNEPtonzSsjfZlhTKwZ5Q
rV7d2T422fl8XbBNEDbcTA/340nO3eiMg14JwYBJYYqWFIarpFBAUB9PZ2tE
0/BakzSbGGx6MkcxEMVgulemhU4gBJCg0FLr7UxXbGpC6PGuvQvNMLs6UC9h
xwL8IvlIZSMADbQeSqHn8+C/pRGaHz9B0v0+g7R+mEnq7oMhALDWPlJfU0Ba
ofZj0E8pP6RfiBP96qoorOoc6Xeebrgt+llXLjvcYgLNEZVX9mBfKZuzjN2e
VkMMt5YIQ+wWDP5hRQfciL9lZGHVpZdeWqJqH/rKuYkKgEgzOwDlujn4VqA8
seCooydmcvE6KJV8NbhnKXpiEICw8Whan0zSDyYd+6a6++EAAnD90CT8JO0c
EScbx80ySbjND1dzP3yPZV584+U5CMCbxmaQX01z8sORjn74pflRZqcOfbwB
friio8NEY7StU8cqAM0ySYxjmUTADxrHP6MAvJIC8FEKQAG/v25JJZvGsi+g
mtmFpGV3stnyGML4d1tnh5nxUAVAp0pJXPsdMYcf3ONEFSBbOferFGaIfboh
9tijwGRLFBiqR4GCf87F5kBmOFTxj7Kv+VneLv4orK1/B0zimXRXBcjA5zP2
elqo58M6MxtqAcVWvaOUzwzy6kkXYF04sg7BRlreY38F6pYjLJeUhpBW+ifV
3lUEF0yRimvKScPj+R5XxPks5lYhLllmfoF7FdtlcwNxzrrhzWFJhsk5bbW8
hXNn+a0fbP7QHvx9rgV/L1ybjPuLeyjQ6evdJqhKh0z4OOgylauVVeTcIJ1u
JQv/oDXxqwk9u6PThfXFMCUzQ4CuX6qt0KG7XCeVt34Ig9zW4V3UrKFDocPq
co9ylXevPrpNH9tGZSHo9lHQna/LtYZ+rl00XOV9LFVeJzVraBQ6YoxCxz+5
yvtyO4Pcf3fFkbeWZyHoXl2aQ04tYpXHTWN6kH9sSxUu196SKJResE63s6XY
0W6ni6RrOsyEff1eSMWTAmZ/qPPwph3ZnAig84pFGSnwzwHMKasrNxCxckeq
pdwRrpU7lM5rfY2n6w/m+SXjXMUdmlyv9LaWKgfULH6dye0sbgn+WEgzLu2Y
xe0AlAuBn0Vz9QY2FoBYtb4HA1+Y4lwH3cXiAzRd7R1FLPC7sQdphflyW6QX
qrYHh5LGp3Jdqef9hfYCOYxcB6p1WMeua5ezGXZAn7FV2JLsgbn9UdsJpCd7
okdbJHvvLIj/anTfC8BmljFeiXVrGOZNMGsgDsgT3TFoWrUVbAHN7XZ8vynY
jT3lwnSs7wLyllHkTe6di8ibT5Hnpuu2cl2nd2BvGsYigI1Dk42BQCddZzW1
UNcVuk7vwN5+RRYZQpG3bkQeOT4tRuKOmdrIgKY2qFDPQdf9nuu6P7joOmud
Qze1LRR5/6PIo5qOh3Zh5PnFuTLUO1elgj0AnheLuyGasU2wdGIH72zvcUNe
YGeLiyuGXgDCThR4ubP16c7WY9Q7nkluo94R6oQ+MR2I9LNNB4Yq8nF1VzG1
nNRWFXmh3uGT6IPf/G46K/a+i3LO3eF+2E1fbqlgiGUGiqg7i1GaUSb6+AUT
rCDx+0xR+YDqyycg+D7JiOJvrVrXA80wNbOA7N9Ll2yhIHZRQ+32pe4o/uBP
anw612dCEKVfKIdg3ZFCle05QfDnGtxgCGipbej9gdVziiQBKyf2UAbXgYDi
Ws7/WUak9XivcXkH8uHiTmThpaVQe72A4cvoDxyv8jrZXe1MQHStGYHdLTRp
4/vtxvebseyqEYPJ1RemYLQHyyaBgBN65yMBlw7ojIJvvU3whdoE35ZhcfiZ
gVhPXiDvEuu1Jfhk2zR93DYhGQk4Z1AxeZgS8CQl4BMzg3O1ZqTX0Yj0lKuN
VsslLYLvUxfB93+64EP6xcpx6KcXsJfxRcPKUPT99oYM8uO+ePITJeA5LGuI
Sm+E2QAoBV9C+61tgiJgOwUf3AcE9GMjfUki2wsU7cH5YvxT8ygs2vNr1jZF
WdtwM9l7JdXcqP56GnO2fqn4gHs1O4v9knteIfnS2+xy8Qr9181rQx5ACA0t
zqVkoMvtxqEGZQmsXryBV0u48gzpBc72/QxSs59VPODH1vfYHRkOUIM1ZLWH
GDga788RYPNiducDtDFP67ZQt72mti22WUoXoPBa6etq1YwSMnlQOWk+kEJq
l+aTipFlrqb23B5mar/RdpLp4d1nWni3dWQh6CxPT0YmMSaCQ3XjFPBki4sJ
N6OtLzVIR7sf3++ayvFDLiEzenaVcFvSN5JM1OBmr1fYpd2O4R3ZIN3gbmTf
5WH2FY+jA0s7Ua+4b7J1a04HcvekRDKuXxmZdnEpefDqBOlknwrgZF92cbLv
OEg7p3rFJ5qTNVtYYhzrFV9s7EpuGMWyjtPX55BvdseRV5bkINw+ujEDwaak
XTygrW0z69PNLLbuddbv4LGs0EHAnYebNbubJdwC9O+htPMG6t/D54Jys6Gm
m6Vcq95QAhcGe0HcIdy8hp8NCDevA9x8fOVj6wfc0p7MZ8IOircZEUC2OO5w
G59jhWL6I/zFPmZ2WA0Oq4Ir/X9oeDQfxVrl9WWksTYXu5IV0eBvAr+u3lKC
CxmaHs4SSMPGnqAtK4ppR6DFOqd0QQGNWdbWu+FLh8o0TxfScmtXXM5QtyqX
VFxe5gg0shcsazT5Diwr3w7e7JLSHZ+aBV0hvZU1lb0oY5WFdeEZMEpWKZLc
7SqINWlXWeV25rFxAy8i1/WKJYt7szKE5FnPcrLs4s6OQs1afsDLEwZlYUue
3LjgKNTCyZ3jlFCrDiTUcOMCcC2GXD+kiAztU05uvzLN1aaCUIMf7bNtSqid
sbUfR5v9J/TxiYNQ+8Ii1ET54eMbU3C2DVgG822QzH29G9qP4zCZA579jvLs
LBdqGs/Oz6re3dm0qtFBWFULz5BlcFhOJFEjDSUIaEVWTlXiDF0OKjPVi+JR
AV2yS0B3Hi41RBKtZkcxKjUY2fAB0nwm0tCm+tqmmJdTrP44G3WgNPNgLQJR
Fg+w6sCzu+bX+e6ZO3H3zO+AcfoVBqEIsFAcpaCCjFRvLUGQwRRF67vwJxkM
U1d24WKZx+Ad6pK9Do5TNJScCthQYtwlE6jSYGWYc0W1+WAqmXxpOZrNVni5
5NsOayvySeWEUkfTeXY3M51f81Xc+qZDEbsBw+pms0rDRYpKsqGEQwx+LbtG
OhoQMxrqugTpOA8xxwlzFceuGnihrKcuxeu7FMgW9U8NKMrAbQ7rXUYWDsxh
fcX0cSCgKAuXdVQ3UfbgVWLUDJroAGgxZPXwAgTZTWOzZHnhGU2UvUAB9tI8
d7dpFWUfBGwiAVHWyaGJRImy91exDRo7xpeQL6nj1PM2ANm3FGRQXphEQfbx
ugwmygzH2SEYxwkQ86IsC1GGU4kyD3OcsefhOLuiKGs+1k3sNYSPdTIJCPW4
bKqTusyetyXzvM1vnd1luizMhJhpOXlHXajeUYcUqz+CmbYPMIYUs6RtFop5
HSiGwOkmQjbmMreVAtXAMWak85IqFB7gbVAPoNTqKN1kqMOsLHb78vkvIFjN
Pmoxz2RgsQAXW0NnnbiRZXYP0lKbbvhKp8QsOEvpKVLXtLjBy6kZzlImrd/E
UA2u0npNC8CremaRDV7gKn/Yya9o2WLeI6AnZmcWxn81ph/WDDjAjPVY8PMx
DEpGU7DJMANvcUEay7uYsQSG4VWE8yjDRKkU5iOu7JNP+lOGLaYM28iFWKWD
EAN+zbk4Fxvh9p2nELuHC7H7HYQY9IGcmB5J9lB2AcM2j8ojj82Msa29YqYy
yqU86i7EbH0gmhD7TBNif+ZC7MRs5sROzsmViZnoA9GF2Hd748jznGG/Fwyz
GstQZ4S59cJZZFiCpUja/sxMrm65B1a3wLF6PClQYOZFdjn1woVaAzP7SBgP
zBxcZePDfBLpBcqdt9J8cjrMSYdhmSBd2EqPO8v8yLLW93gd+HgByrMIAFkY
V1wfZYRjsu9DlAHS4FcR0kb6HXgWqvewNb+cTSpmUBKu7QFQU1dVg8Q7nU0m
j6Le8zq8y4/JMfzssREHbAJxBZurr2yTagGa3LRKaO1KVgGtW5vrePkUfs5W
5dit5S5qLbdr1tKy8+8PfAL2iovKcQF1P0U1fWXVaIYpY2Uqp1qGIpjsdosJ
0l5WM3uJVJtzcR6Z1zuSVPBqqEG1AalSlbEaQCjZzlXZFX1KyTX98/kCgJ+j
yiJcVZlo+rh7UgpSbf7gYnKSUg1UmbUG4Dz8z2sA9PGuTZVFuzR9dLLVAO6d
wb4KXlqcpU23xrqqsta98eTxeflk0kBGNXd7GWqxlwn2zX42d6nKAPEa0ro4
IC3RWZTxPSpyyvWxJNn7kRRUm5uemIXY29xeTHEd+EoF1WZZqNL8NL8Lo6Y7
zjxAeeAtbIbTtqv4HFSahXHeAIyDhAvZWZ8Fmi0MGNeRe04VhmH1kv4UA35Q
Yc2vwt2nnHBhesbfeiYNfibRBrqs5Y1MP6da07NcDVWUMqoh0PjcllsHr1/4
TVHk1BxnqbnVNFi0OfW1UbS1VnchlZN6oNts3JVhuZ6Eoa2VfqFimLolzUDb
2d3R5Psd1HFStP0HHWcU+Rsu44uUQ61vLqBo61sOZYABjGyQkOk7pPiVI/BL
mY45kw11WMcgPee9+H6zgGyn5/TLkYUA2La3ipJt6kW5SLYFA7rZtBpQbcJF
xUi1PXxogWm1MGetNoZpNSCbtbpp1WpyZh+1WgfUatDbcd/URDKhfxm55pJS
8tC0robXFFpNLwC84aDVzN6OaHtvB338QdNqjTckkM1jSsjY/uXkzPI0FppR
v9nM29n+zcn2H0q2/3KyCa32/U3x5Aknst0cr6848WLvbqgJNavdDFVgM2sA
XiwBxJ2X24Qb9RAmt2ULsDGutdXT5haZ+QTTHBaW6k4zRDKt9TS7VrHhvjys
cTKeBfSa6U7sQk/YDUVT5eIyZjpBnHULB3rF8U0ijU8zpU1/9KC7jBJqDHtB
NHcZobxkBHpJDPSp9Gp6LgdrluSDdAmuuqr84MHlU+ASYZmn3Mlxth9eDh1q
TVXpLCajAGu5LclYY4/w4jXMxk3s/6H1pgTpOAl3nN9uo46zkl27jDuctAV4
v6noRK4ZWAaRv1ibbDRoXKHqALIr10SX0aIWEaTVfEjFZR/MuIiha4lA14AQ
cl3fTETXtf1zbIJsSt9CMpGiS12gFKQgozbz8HhTkN0LggywFUCQQVPGiRkx
ZNmwIjIMsv9JGZaWtEBZf0c1Z8UFWUMAQfYpF2TLR5SSFfTxwcpk3oUbY1k3
Ygqy/xqCLI78QNH14vW5iK4P1mRpgizeY/OZh4L0mZ2Vz4yyxP1tsKsGXth/
hckMR1d1RbG45N4SlCUFGZR1sC+5E+xyivvDhNU0JFnFVeWkdl8RGz/wAb9A
iaUpp2nhl9eBXzhs1Q29HjqkBwuQRxGAJuyJjeGQan6F30D3UIEnik8HfNhN
4SoCcRVm4KrxiVxSd7fsG2sDUz5X19jj55PJ0jlWt46xuHZFvu2CDdk/yyfj
axfm48XwOpl+4q7xf1uoa9ykuUaehX20pBOpGFIKW4o8gxhWjGvfRikyyf4w
k0yiGQPfpC1NCmgXf8VCMFho9/ms3ulyKAruJlpNyTS7HyPTjH651C5Gka1c
UM2gQgpsIi4FaUNQHTpfQTXNFFTQUfHoNTFkyyhW/947trsZ3nNB9aomqN7i
gsq5oyLasaPiozXxZNllpWQ5fYCgEuHXX0UVUpsPcBRUlEzf7WGCCtrF3lye
40QmtRAp1JLft88pRrXXKXoBS7BaXb+V6LGkQFzCqpi0iR73FMwXnFX0ajPx
lXN7kJptxfAnv5HmlVDCOmSaWBHicZJXjnjykYYT3BC+CVvbKXM6AX1CRZES
3gUKijy1ArJ+iG9ND5NYCgXBBJ1hb2eQ2luLkE18R8f5Msnm9X4mkKrnsS60
+o05diBpUklUFivHlpLq6UXK6+3SvB7cn76Bez1tkdu6EcVQWQTdcqnij+yQ
GMmeM9pZTSbJRUX4K9PoIY2cjN5jLMLCafXpvVJlKA+bgNdcTPl0cRIy6cqL
CsmmwVGolKZzHulT6UophSmldIWTUgpHpSQC+WOcSRBdCaV0fKoI402lBO2r
T82KJFXjs8hwqpZWXVZEnp4dq4XxUbYwXiglWxhPH7/hSul3q1VXxIYrSsis
S8vIx2sTjIKim1JigXysTSkJk6cz6S36o4PJ89hdXkK7XV5kAKVkg5KHUSmE
1G3NRyphIm+Lr5Is8VWoNb6i5y054KAmc3vM7IVbOllBMTHVVL2uhFQtK/WC
bPJJteS1gsmeXnklmECDvZ9uXbTOqnzU8wFsuiVjhuWDJ5BHPLVHUH2Y3lHy
qAPyiGqlt6lpXF3K7vS57AK9BdXarxU8iIQ6CnaqSGvTar4tFW9vAs8GLQ4S
RHdbQKT11bfuY+FT/bJsBBHZHU1+3AG+rSP5L/i2jVHkH+ugzYGFTn9cEUnW
jyiGnUEAoiEmWdBfXa6snGzVMkAUAsAR1zwEtGpP4ftPLzs8c9hX1/ZKkpNE
kJ3DdPjKgZ3J4F49yNg+xdSqRZGKgd3IAAqjbcM6nrcYOmwTQxFGZu4mhlgn
AyRNKeTK/mXk2kGQNKWgGDqtiaHXHcSQU2b+G82i7RxXREb3KydvL01Gm/aZ
Y0tWTFBiSLdpOnxeqsgVYiiwS0sIyqVFmi4tsBiC41KDFo0nTK3HkzE2h/VA
XiAPXxLEOrNQEnnbbMxKNlImOOOGUUvRjZoHnRpLzv0InrqDBWjRqCrySfAE
q4g08IQa4AENg+ftgQJIiLp1APD4uC7CKAqv46IKp/nlbOhsa0iPBOZEIHOi
+MdKk4/ml7JEVQ/6rEjN5iJkUctT6UAg388gkJBDwRKIyqHGm1h1E3bawuIe
Jyl0jhLonJBCvFm0ZVcii8A3pDJ/tjOatG5j/uwr8GfrqT+7gfuzlZFk12i8
kRtEyTCVbwM6UPbwe2FFsyg2xBsEChP3I8Cb4WHYsGdZQITUmdu7s5zegVwb
pnbWXhKL1BnZm9qSS9glBqsGpbZf7oxlcueudsmdDja58/R1MLUTi3Jn+EXl
5NCV2eTU3FhHuVOvyR17ns3kTtVE1i/41pJkrVLXydZ/8FeNOpBpByN3ftjH
qPP+6iykzlML8nULZq/WBeHBjnQ2PVhkezyYR0+Hmu7i1fk9uQgduwtLsqRD
oXo6ZGdOqEXqpJh9CCGG3Km/K5+vYxPM8ZpiB6IhHOfRtnjbJ3kYdkIQFd+/
nSYtE0WPB60ZiBjokmKTjL/uxjJp9vDxtbBiaBpWRtBnEpTu8ekMwrtrgIX1
9+Vb6nB+0vpcKvwa2dSKIrAtFmF/gackcE7kyiGVYMP1LRiu35hru77FyqFz
lEPntNsEG1azr4HWnfHkHNiy7dHkmy3Mlv0LbNmN1JatYbbs4PgCwSHPcFZ/
s+7Q4Swy+qWidBb5RYgNKgh+xwssBRq3dMLwrxb1iZTZNCRA63FkOopMom5r
SC82O3LdgFy1EpY+bmqX4Ak3BM8xTfA8YM2kXQTPMxQ/z82OIgcnZiN+KoYW
UyQlOAqetx0Ej8ikj1/DIsq6RamWchrDDzYKWPDzN4ofay79H44fq+AR+IG5
mj9tTsdQEPDTuq+LwI8qqYW5mS3LXA3Hj7p0hc/VdAiWPzp+atcXoNuC2cG2
8OMYAoUwApl3AvLpGr8peTiCWEDtJ02PsE9+y3MZlD7wtDOCUPWgzUoT+PE4
8sePmKiYVk5q9hTDz6FNHcb3PugGgga/wwL+czlCEHnQXcXB+yFkwpAt9Le8
RyF2sEhf4oD+Cv+9LyVRzqSQikllpGZTEXDG8zP1Tls7qzlnWu9JxJtOsCa4
J8ORM+ccOHNOdDDt70Rq5+aRyRdTjbmLu66t1HVt1lzXWuq6gDMT8BUZODNC
YQYQI6BxmcKM3FXIMcPaMv0iLBLGi2Fm5qztoy/4akkfv4EZ6BIXmIF/3yiq
dESH+M9VOEelwokIXuFQzIjuygepp5o0oIxcRlHz4LR0x4r9Ow4K5/n5TKk9
dl2mEeigwqGPP6Kv6qR81QY91Ilx8FWx6Ku+1kNmzVcBZv6+LRUxUyswc0s8
sV7XjKwRnLmjs7mM5jCy5u7Ono7m2v2grBV26FFzFW4U78FaTR5SjusZYP+W
Y9ic1MYUX7LXOsX3Ap67F/E5xRg+xedHndP8OL899MHuEDljFv1aKquHiTEY
i8tywo3XPrj8XjppfpHvUazJQ8fVlYsVKGiB+qla0wPs1AdIFQYjhAy8cxp8
CNAyrfXdSOXCHiLNwVgZb1uRHZJ4SzK8uXZHoTdgs6TBGcGY8+j/br4jFa+k
A0/VfGuq4ozWJWnlzFnOmXNwVwjUvfZ1IpWjS0n11CJyFr1VR/J1JfVWlDP/
RG8VSZpWR9KX+xyxEHWkSnFkQZ5DxuiS5JDhV4Hqd8+B7WKQmb5szaieeBvS
Ul7NguR4I+50jiIz+zOpuXhgFtMxwx10DH0YOma0g46B+rpmo1x1zHR3HSPa
gp6ZHUs2j2I2aM+4PPLS/FiVGHMdc4ZCBnQM1NbfXhJHRvUtJ1vHFFELFc2q
WPTxe2OWTkBG6RgzvDEh8xWFTIuAjKFjnCFTPaNIQIa5qDAHF5Ug+OKxp8ad
7alxxHmlN/W7uXk4nMnTmzBrekOPQpL9Sk4zu0lWPspeyUrxKhvF8IKn/1gu
WCmfFS+vc7w4qRmIbhhj2AWd9OHR8OIjtbcU4a2dIGuwiagDgAPdkF/CBHLj
RWWkYnq5cEkfpMfCWyMAMGEcMM0vZuGHAkvU8lS617kF+0WE8QtJpOFwdzJ5
+AWk/tbcIDjjpGUCcMbSkV2/lXW9V80sMa+9tHLmNpMzZylnznLOnIPb26hv
wvRgcTb5gXunlk3UO1HO/J17p5MzssSdRFc4cGa4ynRkzyLnDNtDFeJ49frz
LLdZdvuoOLxTSMyOQGYDPYhQMtdN03aeErdfzYQ7qpn7HdTMCRc1I0zT83NY
I8+RqzLICKpo5lxaSp66rqslIVZqZsvoIgTNmWVxvDwVLdUMNvJopukzzTQ1
uWU2AjZommIdTFOczGwEbCouKyNVk0s4bPQSlcU13ZHg4JqinFyTRc100VHj
BdYAiYzL05WgqZrDp3cfTgmeNg5tPcn6vilhm5SmSbFpmoopVEXtKRT5DUIH
jFOqxTjJth6GGpUS048BMKjZXcwXT6WHA14SABuQBO9hSXDLa7gs6n3mrBIB
JYAmjF3uNWIXZ5j4+caAun35SJOWx5GGLiQJb8sVeQEjcIeuDhKthbBmKW8Z
2tLd8SLycxaQnD1oguQsB8m5vZ1I042M65+tSSXfcXP05QZqjihI/roW+p9T
4O2wSpgPpomeHAx9h6nnZOGbg6S7Cl/gTcAZYBBjSFjV1iHJxqQGLDTZTBky
p3+Oh+1fm4Q9zJVD4+xVprbEyjgHsaI5oocoQx6eynqY3cTK0yhWIo2Wm5Oz
upKlw4qRI3dflW3mvfTx9Bz2yXxidroMXSDz/UhjSFuOyAhetNxXBS+xRtuN
wRC+gP2rXUnIkMpx9NDu7+LgiHy6WnHY1NRZZ4g36MYbx+Clubob+iFsvGF+
yCV4SWo7eEl2IQgqFngv3ntTtaSU1GwplssAsAcn1cejF5sNUvCA4/lOmtAp
+Gh8jKmtlpfxqopQ4EgXLlaoG2JK7JkcoOJ76ZimRAA9OsDPQjhHQOLgmb0t
j3PEb7geQREvn9lvfToFUVK7vZCti1MUAasq2v2eCrrdDzVkZ0+mJEnzXamk
ckoPtD5NN3cLkiQxjCRViiRwoSxsCj63O5o8fE0BuX5oGWmlJPnfZm5/1lH7
sxbuQe0uSCKWJxntNUPZc8Zd3Bwlucr7gDUSXYIMJdNOLhmYyUYj+qpwBXwP
FKon9y0ko/qUkovpz9cMTmVSZIQuRcJsUuR2ByliL1hHBCVF9PxWR8kLc2PJ
Xup7ACXLhxeTVxfG8uy2I5k2sIysHlHCghWjpxh8TzT5WPM9f9B8z+cUJXp+
+xdLhttWuOKEkm9v6oJSBFDSvCOVl498uvHBxUgJjlt+ESNe4Ajgw7blNyBK
nKKVui35iBKYxA8YrSQFilZwDD9Z75Vx5kj12hKcUBe9fD5ThMCvX08Vw19a
l7FXEsWPRPEjUeDKQzQ574CpOQP25l3wLu8xG+TjQKEgYUbrYQTFe+kYnaQh
RkJJ61vdSOUClp80Hc8SXXkQPUMgq6eyIF4Ocpt4f6Zt8UeomZsoPwMKr4sn
r42SdGdSv43bmVklpOWuZMWPI8Hz4ye4TYHzA6axvtvOVjG+uiBbxSecH/dM
yZP8mKD8i9z9wTtljPY8zo8809PAbxHTW57n8G0TcM5q2cXJMqWFAAU8zez+
OQiSDYNjsQ0YQLLkkiyy87KO7dQj4UYN2qpHjgs9wkHyGAXJ4xQkT+oJrcXT
sBbgKHJiZgq56uIyMm9wKXlkZjq5YzL7r3llYRc5mIBdL7LlDvRIdABP08nw
NEEFKBQk3+6O8wJFPB0cOQL5CeQojRszhBxhaiTUzdEwQxPZHkMDX+gPJkJ5
SCiSh835KtH5Un09VQePdvW6N78kOTa/hFgClGS1O9eKET9ug62YXM4QwotB
FjmiY+QNjhGvxIhfVKTfTiOtr7MxoPqj+WBxQGWcgeaVd9OFygA8AGOqN5cA
Od9No3Q7AxWe5ueNWETtb0TRAdsvgRxscvM56vgWlZKqhaXnZ1y6OyKj9b6u
pHoB2zoJ1WP98hXRQ3fuLhMZZy3I+ElDBuyoBWRAY+/DMwrIlQPKERn/4cj4
2w2R5HbWZwFpq2eiKuvo2zYGq3RE9tJxarDbVvwAFHhvMDDwcwYMHDn/fO5F
KTJxxZv0BrFB+jkDcsj2oaGYuAIwJvYtJtuHx5mqY1QQqmOCs+p4yFLOgR/l
elkjbTUNDLTJvbIQwBFL1o8sIpdT9QF/3zspMM4s7cjKOZaqMQDDycB8qhmY
P1FgyJKOEYLEmCEIB8b/dtpDkO/32YkBoyVyMYHqlYNDchtiQyDjTqOk48WK
TqRChmNFx8hAPCoESbSFIHIUk/5IkRGoYS7J+VY9Nj4gDEwyGx9AZoBrMDrm
UkjDEe43ajNYFNIubPhVI4tP3bJXhx/qbchJ30mLQyrAysY0VBPwYIblTFoU
vEMUf4fam5lrqV5TIpvdLMTAiAPtWVfSdB/v7rk5F40Kw0aHYKeSvOhTsg1s
NOxhn3pwKs23pxorrW3YuD04bPwE2IDRya1Mbbw8PxuxAQEqYGPf2CIyrl/5
uFeXXs6v6LTdZ8KxIXMQ+BbJsFFogkaYFYaNWWXHZg77ak6fJJad9mO5h2g2
2TYklOwYRjEyOAnb+wEdsPBw/+VCY4S1S2OoKrAyKzWGWekQODedqzTGqxQb
0GgC2IBP2vwhpeT4jEzyLsfGB5pZERpDYKPdZkXDxpfbAuceiI39Chtnq+JJ
/cocFBo1cwpJ64FE3awwr9JJUcP0KhwZnQOpDPiypjoj1JJ7JJq5hx8FRsW4
MhQcbQmNdkIDhQYcOkqMpuO8saSWeqK6FEYMn2y2VX4Fcg8s5YgdYvTxPb6D
6Lj141bEqhWlvPM2zccrN98DaaBC/A7eafxOWigAwgs/8yEqfKR6UwkqjJaX
cf/0mTTMUZA58fj7/KT5VBbee8xykFxH/QFZh+X6S9Adz3QlNeuKSMVE+umE
vZGmdfHibehhgQaLsFIP8Ufr/fRDLWMBau2afL75y4TKOQtUzgJUblVQ+ckC
lR85VKCr9qcd0eTBaVSP9C8nLZsYVJpWx5DKkcVkTN/yWaG7LvBMYfTQN0l4
OFGMNjZOFHbvpa2/hHXRlmEb2/w+nVkH7YAQsvRidnnR8oGpZNtQRhSoxMDW
LiDKJCpG8PY2ThRDhIyxiBD6QBGiuZb7KVEenKKJEO5aHrW4FrcUFUUIJUrd
PBRLXrJhVJGnJ2vyvayYvDC/a9umZY0yLX/UTMsXDoUYAZR/brGmH7Eu6QcH
ygEFlKYt6XijJaQgLTclW7Z32WyL0iARCijuGoQDpYMbUFCDtNyXxlLUrfle
FCF+MS8kiOIFnOAiL/rLp5IcN98z1wJ/4HMYg5yyxyBwUE/wPpL7ckQhOMWC
FTNORay8kSqxIpIQ6Ph4le+QeCBP+pkIoEJHpIKP1B9jGq/pqRxg6jtpneGt
9Gdvw0etrWJHtfJa+pl/Ms3bNjN8KiiNI80Pcct0INe5dmulhUPJhUoQL6Sk
nnTSuC/TdrFGm8C42RkYsLP5Rw6M/1Yy31B7bXfybwRGLFk5rJRce0lZlX9b
6lSHEi6fUARBIvvROC9KTOMiEtZQFZBIzcKGD2csmzZiMFnQOxYZAsnHmD7F
ZBx9wAA0GJmdlCHQm7ZuSBIZ3rsMr79dM7gbGplbeHz6SysSs/01EhWJYAgo
knumskmP5+d1xkruk9elkAVUlYzsW07uvTqbvF0RZ8SnyshEKyOzNngj848t
MQ7JR6xIPkirG0SqGERadieRqiklLALZnOlQiUnglRifLkk8LD+NUBSx5afW
8CNCCz9MisgA9ShumWovRrxGexpSRRFEtsHigTuUx7vxU3wSH04+Bm0MuBf8
Dksl+4vI5Msv4PygzAgDZnTiUoRigvHkoTwPciSavjU1AnERQpqfy1QS41Au
lmhDZC7qd8OFz1JXqVpQSqqXFbejrpKNuNDFBVRpbRfxVLeDF/udeQFtrN9v
60gevSaPTKQi40+rE8inKxPIyuGlZNnQ0tNf3hjrmaZqKXKlwiD2nNFbxoFR
it9HgGURo8owq4P5KP3mtKtKvA2/PYrfX1g1e8iFZHGfSMxPF/RPwbHlZVSF
KIqw5rOdwzuSuRczkzv74nyyb2RHpEh7VQhQxKjlyuyU1XSfsGSnpzhFRHa6
ZFgx9oOAr3mT94O8viiW3DwRsnfKEU8huX9atqOv+ZhSxOprPpO+ppPKTunj
/7ivYXFIjEMcEku+caHIjxpFzt0cjz0h4GuAIg3rsk1f49N9DW8H6Rikr3GK
Q6IURHgc0vpQMqm8ugf2hJATXQEh9FR0NTZU2QmS5EYQsDTJXr6eClrMa3cW
qoYQKTxS9EVV9oquHyWIDyUITBTWbC9m+6pCAB8dlJMJY8bmbfUQV3DXH81n
XbCYnIQCU4A9qbHwM9AhBzQd8kSakiB+GZtKpshyrU9lp+UyBKnfz9Od46lB
b0MQtZaKMWWkYVe2/YpDypVzwJXDiitnLVz5ycKVH/dyruwyufLlRqZFqqcU
kI+WdYUkhGy8vPh068YIzwzGEKNue4mqxcheMs6VMvPd9bUsxhTyk6wGc2zG
IMYPiFMnX8Q2d8LKA5GL6N3xG4cmkcu4Etk4LFW6mEAKxOwlsxRwDRfTQbmY
WUqBCBfz3Bz2KbpzUjZ5jeciwI963rj65uJYcsuVLHlbc3kJOb0wyW5jOD+c
bUwnVxsj+IG5iODHrljdxngBHvTsOuEDGuTrluaypvnF+aT15kR96hgRQvHx
PTxl9Ma35WK6WGu48HuPo6sR+KD6o+mOTNQf0MBqwQcr5Pr0Qq5HVWGSzCqM
wgicaazB8Ad1MtWrSkjV9aWqZd4CE+Vi/CpORYaQhnv54TyVgTiBP/vNVH6p
axpb6hkOUIngAWvzs2zlZ+0B3DOFoKlPTQZ0gBx5NhMjFRQsh7tjm1hYAGr4
LBWXCFtzO1ADx3S25wlqeFjZJc9Gjua70kjlVT3MqEO/996JHHcEIkcnR3JA
EyqQ45vKjuSRGXlkAlUlp+cycU7J8cG/bgj3zGQoMPYYDFR4kDekcnKUMwsj
ut1FF+rT+PR8XPe7aGAeuR7FRiSC4uq++Xxfk4KF6HLfPaIjue5i5jMXXpJL
qq6IlnbFSWhUuwgNR7tCH/ZuDyY0do7JwzEa6PaAyANgYWs8pY9n5qSQhUNL
sfH0pgkF5N1lceS3ml35/Zpo8ska0658Lu1KJ/LnDWaAinYFM48Y8m8tRGV2
JdYlRI2TIapOi6at6WTyJeWk6qoSnRZcaSRYb47hdsVv2pV7INy/twsYfEGL
BwxaMFiEGbCoXVcgzArAghsWHwPGSX1XSqjqQZV6w1VzcNdSs7GIVFxZxtZi
OmECl5inmJrD6P6oWlbKFhi8jn0xr6fCDTOpYUAMyFNRQGCymoqgyERXU72h
BP6Zb6XGwfuF4lv9eCMNNlMsLoXu0RBgRGgARjDDEt3G3rdE3IoMxW6LuGCe
pTtSom4Te6ECUsAojPWCPaDEOTdKHAqeEj9qlPjLDZ3xz1x9GVvucmRS7gf/
WhseM516iplm/QQSDEg7L1aWRrZ3cFiwu0edW9Zr8W29sVo77aLuWHaZ1xd7
Wi3WxCQGlFzWDu6G8mJc31KyeXiqkhZjdWkRTqq5NbmHEuO+SVxaBLAmtsE7
bk1WX1ZE1owoMkoury2Kssz2dsSSS/31sWBNvIAMTxF5aEY2eX95nOZMopUz
ucHZmfxVcyZCWSAwbPlGLDoTR2AcsAOjeWcqC0vHU6m8L9kKDD4X49NLLvBc
NULD1BZewAUYeAGMB63yQhAj0XAmWHIRxIDCS1eXwosXYAGVYoYL0vJIOmm8
O4c0HskhDXd0J3V780nttkJSswFhgX3JXviZD7ozfdCH5QlH41IxuQy7K6Bh
DJpPoXkMGlBr9xR6Sf2d+fRvCiPAzU9kktYX03EBSutL6UwZ3JvrUT4mzIQI
fQtckwDoqFpeCnLqTfYuHeFnENY+o2mMu2Dw7/mkMEAH5hxYnvVbzIhPlxXw
SXoC71rXzEj9Hn5Dw/0pNlnRsDcbjQjKkA159huHtUZSDDokNNgMnYQGb0nH
YHQ/L8/uZfev/8jndUFaQDMpQAOqKWtHlHr5CodHpmWd/nYD20l7rWKGfunA
AJV4yiW2nBk9VUaqd6czXMzBZWxTenfHPHRqn1zcRrKJL4QUuIAkY6+Gi90j
4sg1AwpZNjoki9wyOrpNcaGy0IjgnMi1TFzA8rVbr8zWdh+JCm2UTDLUCB1U
aDtiHnpoUh6sMyc3jCwhry1OcncinBfCiRhZqOFEYhySDDsvftB5QVnx082K
F60HupDqmcUoMhorM+0CQ/SB+Y0k4/vD4FiOoabQnYjSF7YwVGYZiaT5CG9K
35KPm9i8yAu/Zki6qo3bIaTxzmw07rWbC0nVfPqyP6GMPgtfiBFk8rALkA3Y
NLWIvaABL+puyseJkLp9BVDmuDXPS+r2F3hJ7S5KhJrNEFHg8o7ZDBoUJX5W
D5s84gL2wXFFUtMJSo0nKTXq0hklwiQl0JxA29cr7OZhAARYlNRU9C5+CELY
X4dqnZaTaago/BILIRYshAUYpUVMPNYFP0NdKF9ZibFhX7aQEs2H00jNchaS
QJ9Xy93JzoZDazE/d9ih38sy9aaTAWqsbmQ4Po3JmLH9qLtckFh5wV1hnjkK
C/rG/v4MC0bPF8dCL+U79OYNhoVZ0Ej21YzeGXjp22W9SslU8ByDQ1lAQbGw
S2DB0mG+anAWuYRi4ar+xWTvyC4BFYQqsQZQEOA5rlGe44lZMfiPv2tSBjZt
6GXW1zQs1Fuw8D7FAtRZT81LJYuHsi/dAxMLyDtLuzh6DlkiWa88hxFucs9h
Cyg4Fr5zLJMoLJwFLNyisAAJBWChfm13lVD4BRXMBvNQq+Mg3wMpHESELaMI
lVio35mLWGi6M1PcXwlUaDyUjSuLalYXkcrpPXx48sOBAlgmACrU7conTccy
SdM9maTlV2mqh8OPVdfmh5kfbjya4xOZZzIWTHyyXxQLJfQUfv98Mml9Po00
n8wkjQ9QIXI0l9TdXMDFB6UDewkMgZ+SqqWlpHZvIWl6NBt2i+D2foYIEWC0
vpyOW2eBDqHwXIJ6q580ncxGEwPDJg13dseKaohERCggwi8R4QVCYB4j+eBh
zRc+PcfkiUQBSgdogam9sQClQ+0NBdJrNOzOdpYOsq7a/j7yn7RGDITEtmic
avuaQ+LDJUz5rxhWSn5b0WnZZfdHeOYpGsjiKhcORntXB0aI3qbZEA0ZaDbY
NsWL4LIQMqN3OlnQtytGE0svTrVEE6HGAL7o7do5ogsZT80GoGLt0CxyaEw0
YoIph3DnKip9HOeYsCsHFU3cPYndwVgzPZE8PyeS9XZBJVXDxBtajvkOx8R7
HBNQAzmzNI48em2ml1zRr9yTSGpmZpMPV8Yxo7HWyWh0Cmw0NEr8d4dIJmJB
OHhYH3mYVgaxUQJnUeLpF3z96u5Iidrr80nrwURZSEVUmL1dzGeEOCy4xy9a
jRNdXDnR+mAyqZpdimajrjIfDIePH0iw2sCI+r25pOlIJooHr2k24AhhYPF0
krHZDEO6bYU+oyqCWcULyfpcPo8pfCqmiCAN1Ty1fKYbaX0hDfeAND6YQ+pu
KUA+gKBgzPCTyjk9GC+orKAGJEzWYIEUpzkplpWCbHodyqqvpVB39DqUdWu2
FUtt01qbEgqQCAM+hKrNYk7OIszstjBLHbgdDuBdvbiYVIwtwwdKn43oLLzA
B083OyGsq1e1/k8cnrdOqlkIgbklVjwoIbZ0lK3jQkZAu9YnSzsMev43YZ4F
ykbIairXEEa7FifERcpaiL5xkBgMDvMRDlf3ziTTL8pGOGy02AprCiHatA6M
6kgWD8pFOFxNdcTNo+OYfhjvrB9YZhmhMkv6OMHhcJLDAWzFoYnslelJqiEg
hXhhDtUPGhxeteSWMoXgcPiAwwEKHO8tiyO3T8kDPpAKythT89KVrbjBais6
qcxyk7IV/9RtxbYgYghnOgAbCLk1njRt74Z0qJzQg7QcSNZsRYKVDloM0Vlv
s2DZZYTmLbrYBl/rt+eS6kVwuTM7Z/D1DOYClcSJrmZ22VVll4548Es0QMdj
zboilV76HNnwAqaVho7wyziCQgIesMQjBbKOV1IwhgBCQEIBRIAvAKEmwHSA
4SCvInBUvzl1IBIPkUAG+DNfTYGf4a+i8Xs/FlHgg3FJgYYD+yySxHVgKIoY
N0Jkj7jbOKvDiEmhEUrU7+iOU6wIp2WFpOVIskVZONgPy4UWkh23MnbAch9k
x37GDphQs7OjI7IDJl3/vDYBwgm2+mJQ2VdfrIgo833dYZFZ4kAxwW5INDu3
ODr6KnGh2w8UF6xIOvvYwIEDyVW9s9F/wE544Me2ALEE8OMWbPMMI9tHJJMJ
XGCsG5ZFbh8XbQoLkWBK/xER0H9UjszDW3NUzSPSaPNsK5Z438IPKJC+tCCV
3DiSrX1bPwqmYLuY/mOd8B+dAviPGFQWbcUSKsaMkzGmlR8QYVZNLWHxxJZM
nR/2NYWyTNqZryn0q3CCBRTwggYsadyfRb9YWS89Jv/XlaJMrt+Ry611Dt+c
6uf36vBqKQ80oVzaVWu38OnlDw/DiA9VRvWKYmho8ji1XuDen2TyPYgRQRTo
t7ZMpHz/XDJpeYo3ch7JxRqJX5RS4bae7wFELzOugOoApgAC8KWU/hyeo0zx
IlQoSV5Kw6fpw5OCz4Xhc4bEeCqFlT6eTWLjJWGAi1BpQ7x4OWpYIFhwH5Jr
0mJndykyRHXUdmGq1Yvoa3pwvSm7AseZGJ0kMc7yq3D0Kum3nBjvXZ8uosyx
/co/aFrZJWbDJo/nekUM2WLBsGC2bnFiMB1i6w1/Ap+egoXSYRdfRKZSYFza
swdebFOpBRY6MPZZgHHrFTAaH00quOgYRB/rh2chMI5aM8zJwolEuDqRpUOL
8JotNckaKZ1IuwIL+mjgwBBF0rqFqWTmoDLc4X5iVjb53ep4o0jaxIHhZEX+
hVYkxjWwcM4xwaJQXHg62YABRdKaeYUquGhTcIRZBQfCoqkqg9QsKVTKfUoP
VMUt1amqYhpK6jbnsSrp3en0azxRzMo7BpocG05dFqwS4sNKCHRLU+GBrRZJ
Fmyg/kBqMFjA6HkygqJmUzGEmGhP/ECIEEWIMPQlTb/KJtU3lEgyoNq4pYD+
ORQECSBMwhAGIaThHk1C3NEdIaA0QxhAwN8+CPitEGCf1u5MMVQnYx6BLAgy
k7DePKOvHz13wJ0DsO64VePAsatYJrJ6OKqH039aleZZyg68Md9+kXpOXtbH
ITDAdByCGwwCCxAC/fv3JxN65zMI9DUhsMsCgQM6BEaHYd3zwBVxZMEg1kEx
fQC4jy6G4zDjCAUB3XEsHVpI5l9a7NCS6RZHRAWIIzqylkwOgd+tghZN6oiu
ykMILKWfzZcWdHNwHAwCzo4jBh2HzCPakVqevcWEALRl1q3IQwhUzyomrbcm
ukGAMSCSM4B+bW6iL1BXsBcouGmkdjV97bw9TTkP2Z4Zhs6j9f5kcB6kcmoP
zCYgx6QggPd5BI+6Ug4eJR3gNfXxrta1GR6GAarhb+UFQIgya5OQBLg7MEkf
JPGZRMBW62TS+gzrUWK9nMkstfBLLITx5gogAkSb1KJ4xCshxJzwPHcqL6dE
ARVgjOTFNDQrqA7WF/lMFoRgLklNxFPtMBGKCM130w++opD9JXJJ7doCJAKq
AvqAjkvwF61HE929hJZDWO+jOmdZFio25ohyBnoJrZzx5qJM7KEaTx8nZuD/
Q9WHy8qWqWqGvv+8j2kxdC5crOyE6OuWjRGP49umARyqLr30UjKmVyG7+o7D
YasGB33/1gE5NabgAOWMXSOTyZX9SlElLL40n9wxLt45jqCPGgsc1gwvINMH
ltp2XTjB4VUNDm9ROLzN4WDGER2lnfiIwwGqnG9VJJFd45jm3nhFCTmzLNli
JzopO7FZ2Yl/63ZCCyu/ZWGlQ8+2AxwOYmB5KwSWAIemHd1IxeVlGEs0bs3k
gWUUA4RlGLV+oyJC1TUlpGF7jtkh4dfhoFb6hSMbQOzWrCiSNQ6rSPCangLF
gQSDbMFsOspmwpqOZTKVwJDg05HAtvwpKMDfi7qLhrsYSygXUDOgZMD9V8li
RgQe4Ty2gLIH7LeBLora3fRUQpOFD36KbwJ4wE1WgIaXMW44KrRCOWm4PSdU
2oQwWa2QVMB/Dga5BhkSgyJDHpJBXoOgeQYgBP4Lobu+jaRB3EqOdDjI6VCl
6HAuAB2gN/serhfunlxAfr88gVx3SVnlrkmXeFYoPOiT6qxeYfZNcTywzm2/
mBIR3sGv1IS4OwqersGnx0N++dVgesj7wQ2+/XIkLLZrsBDZgw6LQxosbhsb
TdZRKwGwuJQ+No0AWxEtsweVXUYY2eW2UTlkfL8y8gTPLmuNxTgCFpGOSsIN
Fg06LES/5WqofUaTVxen4l10Y6iiODk7mzSujXe3EpXKSnzlYCUkLPaCdYAO
7TDX7FLBIg5h0XpLIqoItBQ3dCethzQ1QWFRv54CYhQDRO1y+up1ezL0R5Dv
704wM0y/JcPswnokQjDGbL4rHV/noCOQwgInm7CyB8B4pKvqk9DaqnwszURg
dPWIKKLlYVZsoirCo2JNjCMQGD5bCgENFNClwFOI5wESnBRhfO1m86MZjAvy
BpRQ0noqFfop8HlcGk5/3lILK/rqAEGnk/0q+fSjshAionZrgU/qByQFggLQ
oDdAKBHhxS6IKLOAIVsqu5DGWzIx9MU5DYpc2FxBWQGf4ARY5qnbCvqoXZWP
6i6YmEHhIgbvlJO42MdxYQkmW3nZ8+3FjNmiIfsvayLJ8mGlYAZWMSzAwZZV
z96qzgGowB5tjopB+H2Ydfs4uAx56aV2uSVSBr4xaFyNjRP9ezLXt3BAN1J5
qTs0qizQENNgUAm9Y1w0WT4kF6Fxae9yUknBcXRitCWwjJCB5e7RrD2fBZbn
A40oaT8AGu9boCHyB9Fz2bgGfh1PqqfmITSuo/A4NT+TWQ8NGlbr8eVW03qo
/CHWpVHbMbBkzKBfo4fisY0K4gfs3b66hLRUJZOmXVR0jGScqFlEj8qhZOVA
fNKB0AecsHu6wHNqwgPn1JEYCBJKjPptuUiMxqosLyLDpxTGI9yBeJ3LHwiL
x/G5J7piJ0Xt5kItikBi+CUx4Fxi/YCtw2i4k9uTk+l+aT/QfYSiuPDhdjz8
Z24uwltMkBbPpZK6A/nYrwm0qL8tD56DxCIZkQGJBSiThmr24ScPo/+2I9nI
CFyYF4KM8FsZwQqdIU6KgscP4ZITDfuyVf5ILZvBie42TqDhuDee1K7MJ5WT
ethNx2GL6bhNu/kNbl1yYAWMkv6wk12IC1FEy+ZYct/VTFZAAfTvN0SRP6+O
JHvGFOIN3SxxNFskeimAyCYqDgs2mh6m92PDQ/xWfFc2eH41NFrCnbtoPYIB
wy0WMNzJwQBV0ENj48gKgAMFw+T+pWTL5VnUgkTbwLB/LKt4PnhVfNBgOP0L
gOEPa6PJO0uTyaFJBWQsRfLm0SXkyTnZ5LN18UxJbHKyHTGm7XABww+WSsZZ
rSFbgiFCgkG4D4ADfiFO7EFabknWZr582sgoPncUvkSPYbVDa7f8HnBhoiEU
6xqAhZajqXrTJZQz4DtKBq2mccJS0+DBRNW8UlK9tBjpYIaUPlNL8MoiCIjK
mT3gd3P3EaZCSoqDhxgO6vbnw1l8EbKK1mdTMaNAUXF9KWk+keFBseEX96tR
dQH3PaJe2AL3SXKpgBjA7BHKLvBd0MdfLz9AagPd1OL4Y7MDOLoEmCcXSQMX
CGD8qucWuScOt6nEQVz7CIcfrkE6p1Uw0VNoOSTs2oS/zILBZeTtRem4AQuu
Krl1QgEcfggIPGuViRAv/QIARo8U68bmqzhtzdUscpiaMX/+/NP9+vVzPPNQ
kNgzPNR25m91OfPVE8LJ/tHJZN4lrPV01sBisn9MGnlI5pAR5I4JrL3mAXre
sRjBz/xTMzvIpmojbpjzC535tezMQ+cDRA3L+bTLyhHU2M7NJn9an8Dcw2ar
e4hR7oGf+W9dzjwTAnHkLH3Im61lb1QUzyLjUQmgMr2cxwigCG5O5g4iwWil
9MomKSkH6FdhZ9UkhTVMPPHwonpvEtbRqq4tJa33JYsD7zVPvLNvqFmD/ZRc
CvjFYee3CST5zOMOHuA4L0Le3h2LgmqbA1uRFaa6I/zQcs1mu+mP9JkOvF7R
/EgGjnGjAjiUhx4jhN92BopAvvDfna3aosEWwLHnh92rHEGYqyOgR90jWjXh
qLccTdYvUfTgcYd/gHyZx+fuAVofi/ek42s92Lq6tbmmL7jT4gv4XdPBHPmm
G7uSOyYV8V7APLlet2lVJH1BzIGDuU4lirIEyeYlzH4nftrZ4m4/KAG9aYGf
dll9ME77YPtpP2A57bdpp/2wdtqPTgwnB+iJh1d4+EdcS0/8tlFZ1AJEk3sm
xZMh9NX/1vFpqvTY1mmnr/Av0Yf1tL8ZxGkXweIn/LR/yk/75zd2Im9WpJJ9
E4rwlX4cfTw9N4fagAQl+7cI2R9jk/2YFdCHU7D403630x5OaubyxWaL89nL
/E71Ml9/I8wG3YVNkeaOfzzv+AoPZ0ocdvUi79HOewhpvjMNX9xZFpYor0Fz
P/Fc90MDNWth5p0L8N0T+NYnu4oj71FnHi7oWFeE4xVw+ENEcABNh89hMeJU
Eg5ZIBDu7I5RQohMEJLw7WybPjwXinWJ2h2FWFSE1/uWJ9L1OBJW1gAT+Ks9
1hTCUO+LvyHralQv+b62KNBybwrEh5wCodj/bKGAfMn34vn3qUDgGP6/HgUa
VMd7WEmlfn2OczqgK37t/kMVJnYiP+ziip9SQLzor7u8lDSu6Cqv+wAK7Bpd
WDls2LAN7MQLe481yAvZcxAJytYlToFhqtZg64s+yWyBrDUAChYMSLehYLf2
wn+zBQV3uKAAagw3j0kmUwQOLikmOygOAAPrLsuVNQbRhfAkR8HTYpqKo+AF
IfYBBfTF/5X5VhREuUaHbaEAagz1S1LJvdNhrwyFgSeJPHpdLvnzxgRLAhBj
E/osNmQoYLcfUgxQFPxEH2cpCs5RFJCqOEQB3PUBK+rYhinc+HoIsAAogAix
tiLf6cXf285XfniHB6iR3cVWpzQeyFI90q4kgN/0aFecpEDj/mAa6gAFAwwC
QOXjK642yt36GGvabzjUXTZHJmEpMowrAJjQZMMV2eBxnoMBhlP8Kg0/aXow
E90BHPvGe3K8KANC4acYBPDjziudXcPdTrzfcuIBalaZ78NT33wkTTv1fjz1
sBmKn3pN5ft0lY8dY/F45KHhuZq3G1Cp31zFPgPN+1Palvtw8q1en5/8Vxdl
k0VD2D/5VzPycNUc3BgGuWDjshhy/ZBSiPc9G1UpQR/BZnPWPlF81E//ZUrx
6z3PTAN0xZpBz549zUM/RDv0l6lDf9By6HFOyuHQQ63g4NhkeP1nn+gBZOqA
Uir6O9nbnNs68/O0M79AdB8FOvMdgzrzUCr4eE0Xch/VWeN4Qffk7Fxq+BOZ
uaeP//AzD0IfzL4Q+q30zH9PHz/QM//jTfy808c5fuZbb6KnlR52TzRp2Zuk
+g643ie3xTspADzy398eL4+9k8+HE6YOvqwyirNfu6YABQAIAfJQF6ezD8xh
GaB6nEjERQ54Tg9lowtAE+CzHH4/qbmBv+ozAECjD5zop5NCuN8HWYC1yPsy
oej/LBtYwtElqHnWpsC1OXjeYf4SygqYcVzTg7TUpKGSx/MNG6oSQ8xjDX+v
RFh44/Bq3ngwC861TPjrt3dXF/y1redDVHanzjamLXEe+jdemk8mDyoP7lV9
H7u866ym7X+7Ip0sHsrO9r1TC0jT2gSl7amdP7Mw8avrBpXjLvzN6nzr49Js
6YoPVr/JDiN+vkeoV3dbYzJ7dR+MGX+gQ773MmXpVUEwTA1D0scRh0MOvYWH
xiWT6y5hxRV4Zb9+cCE5OimR1FzdSRtmCOKUz9dOOX11f3OROuVngj3lN9hP
OWT7n6+LJ/fPyPPCMffEkVuoyfrkhmQ81Poh1xO81t2WQ34TO+T/2JqCL+KV
Y3t44ZUdTqRoLmIHnb20h+I5Fy/tMum/BSzwYVT6UABUzcleY75BCH14+l68
UZ3XBluPJeEML3Qcgr0nD3YRJx3OuQ+jfr/WTJCoJ3t49/H6AtFz5DNPOnf5
rSdYJlO3Mx/PoizTs/7lUN30wzZG4AE1//CXfCYpRJ558CM11FPO6iFte8Ot
OYCfJ/GMJ4Y6HW+fOt7ypTtCHnEjnId0Dq/da+OIw3OiincUX8qr8bkjMqzD
ZnE46aDdoQhTM7/A3cFriT2edL4T4a/rk8iD01lSv35kKfnjqq74Ko76nb6K
/2llJHllbjJE6hCte7Yob65PQGuL2WTPED/p7FpiW0MxO+RTZV4/t18m2TAo
yuGQh6pDPkpkds6H/JjlkN83KZoMpof7/2v7DviqirTv892bTjohCQkhIaQQ
EmLcfV/biobeIRQFpIXeexNpoYq0YFcQlaKCDQuuq6uirgV1FbEv7opix903
i6sru7o739Nmzsy9NxD3/b78fie5OfeUKc9//k+bmQEXVqkrLq40YMeo/66h
WeKnByteQP64gPxJAfnTAvJnI4Ec6PzVGT8P5B8JyD+xQP75ckwXak7q+0RR
pdbVdFAfLskBKz5VfXsWlCPCG9Zm06b09Zd1YPXdUuGNNc8e+ziLzJsTmWO+
EJH5VcXq22szGehBG+ieZc9H2TD384WC6tT2XCLx/bMp6HYXfnE3hfXuybRW
jmU6pxQAgBpO5d2/oJy4nI4HsniJFR/jtBNXtnpmHVsap+7JI2pHqpXgGW88
dfpADhEyzm86eVc+wj3BUDxZ+ThHYmdbtXM+j/p1o85R+xeXE8RxJQbRzzFL
8GHUzR2AR9kA9/N6Egjjtge+flwH7YH/uQZ50M8GNuBuZdxzJ9ZzBsSxuvyw
cJzSmT5C4/+WrWy+XNZS3T2Kwb0MwH14WhuzA5b2yv9pboK68/Ii7Zlfw0B2
InNVvrPeZPwIuPswuPFyO1GYwT0MHfPkqut/XoW68tI0tUqDu6sF7p7h4L6l
CeCe2qk96efaIb+0ZwmBGys7qRps9r5Fav+I5upgbRPAPSUSuBPVa8Dir89i
cL8+KzEyuBexnt4YuL9cgek9Geo3k4vU4t48CK0f2EE9Na0IbPWMRsH93foM
NaN7ldo6pAPr6aKrW+AOELqDtq7uOTx+XabP4yM6gLnXKqAV9YxApFRhH9gt
TETuxLYCQjZuN40euzOhm8L1MlkRpzOLso45w4ikB8iv5U4gIL/9zIFV6Ltn
sBOhR4vufnJvPgXzRdmOFbf5QbN+AE8ooDVVbmtL8Cd0jwSuvbZIZgwH1eHN
JeryrueqEzsLOFkv1iCc7O4ggjpohdYQ1Kh46LAarn0oenkEezsj1N4OWjp5
c9bJQxGtA+w4yxx7KJSy/70lnLJxc6pHxnFIATeowoScb1ckqb8s8yn7OFD2
H+YkqJsGlSD41vvoNZONz/FRbhJzBNF9fcU8LMVXYuw4TqBDr6Hjf/9CTfpV
G1rIaE0IrDf39L3vobCm5QcsWO8SWG/px2PcDQNzCNb3XoEZeylq++AcgnTX
88+l2YGY87+1plA9PCbVgfVTAutDAuvnBdYvWrB+xYY18PbROcLZcLwH0H4f
oP2HhTaskxuFNcbZPlueoY4uyCPOxrIPhl45OKlEfbEiOwzWmwd3IEj/uNHX
zP9tmeAMa8PbTabt0zdm+bhGDPkGuAmzo1JJnjhBNu71TJk2mwutWDvBGm3v
zKCk3+gFTGQCgGjlBOggATqojm4r0i44WhUt20cxBsp3cs5Y/eRKVqOJtWmy
Da1akK0O15cY3GKUHp4XLWuAYMAex4bT9+WgQt0IYtlLdmp3Lq7w6HvJluis
ex+12AC+pu0Cl/KVjD1Ny04291r4cTLxkp++sYXA142Z4Qp1+yeUuTkyIbY1
kvJL09tKERPUg2NKw/aYQ1L+I5Dym9NT1KLuFejq2uBq1xQ/4yXW3XQZgTDv
qx2Whsuk3B3NapMhM+XiNqqucyIjt5uF3F6C3L6RkXu7QW4cIRej5Bg342R8
QC4c912RoB4YkUAm9ab+hWrUJUx+iOB53crVvhFgZdamNo7cqWdG7puI3LlN
Q+6ngtwvLOTqCPlbgN59te0CCF2gwg2DOqjjS3PV9wDeB8ez1vnZilz1T+Dk
Hzem2WY19CNAF+XGB6/3vyJlUgIzNIDtLJlYi5dbqJ2TARf9qkjrdrNlCMFB
RDA869g2TlI5dWcrz1e8fQRrFXxhOUKZjwd5Za7sKN/CDhr1G/4iDoWeOcE1
Wk/vY66cVaGO3VhImychgk/d3YqI9+DyMj4X5YI3QIt2xKiTO/PU/vntzfRl
imztRL/DXmoVP4PN8/VoM3XG0qMZt0Ebt7RCZLqXGhG3SLtHl0g7bcjiXFih
3n+ZrWRT1Esz2jJsm6kDtaU0r0bvbX/SZt7ZCeq5CVlqRMeqmkGDBnkbfR+Y
WadYsKu3RaD/4hi7A3yF2s6Lla1WkIVNbszd9PtyHQQjVxlusYLbNK0LwfPW
Xn7w62x43tyXWfiavvk+nq/w8fzgSI6B7xmWpa7uV6RGC65xCcFNA4rVfSOz
GsfztKbh+d3/EM/fwPGXVZj1lqEenViilvThsl0ziNn5+RlFvvVMFrQFatch
HkBEI1/4SW8a04znAMIZLjixvjWxMUn/uAr0lnkhiA71h8c6yvbpndlq5yQD
aJJ2iY7Hs5vMuMsySQ8lOxCgTf4ynSSLD9Uucvl7dIsQ8x5abVgYO0pbtAey
EJUcBt5YQoGzOMPc7DuPIdMY9W+q3Uyo3d5W+JB48XsB1Lk4APlo7QujoYR9
YVGIcZr+AuUjf7dgnCL+gHHHERZiJmc01Uy2slgaQThOjDm9JYNYGrcNDvWH
fbUiR90zuowRnqgeAoSfvKqFIWfcdA2TWDU5vzcrQT0yKg8xhx6szQxPPb2W
LGTeNMlNcBGQ82718XY+q9k+2uPtUXBcsLc3cLZHYeQPM0yO7TkQkL+0UwvK
cd3YHVEf46Dejn5FQn1tR9xOrop8Zi7q4x3U69DXrqE5anWfUkI9vn9Glwq1
paYYGD2DUP/c5GaE+hd0rptjVif+P0H9VytT1MmVjHqd/fJ1XYZ6d2Ee6eHa
StoIevfbi/LVt+sywlG/yQp9O+Z1OjN5VGgojHEPaLupuTq6rC25Xi1NnPxn
viaeof6B82oY/hafx6jTtzHs6y4/h/c7393Cj4rFyeQ76wDwG9CQH+0evHYf
rVe6X4AvDnQi9fnl7EAPsmuNQ2aeZYpHqdP7eOtqsox3FBCAo4m4Yzj39KFs
/3g4G61oPbEWHfIwrtAzE+VxB5eVkbYuY0TAkHyU3o0VK2aPAk7O+l1nsq4z
zmJd0/rPMg7cSuPCLem0LWfksUAb2s/MlJXO1measeAPICowFoiWnqQeGltq
ptIayr+Ko9ya8t+eEa+urSlBNxp6vbwtzOOhc2t550WKeJt8FxkUZAt6neNK
AbOgPwMGaZ8GgXv5apP7gqXH/eSHXthe1XVJo/Q3DX4Mf/vgj1W3Au3vqHHB
X9+PAyerexWaJFcNfvxsg/9hE/fGdQBT1J7huWo6AB8HgR5wzOxaoW4eUqie
mpjqgn96OPjfCAN/UiPgT3bAr43vr1a44Mf494mlWaymTitSj4ERflVfpv8h
Hc9VT0wpMXo8DQCbaAAIIPpB3E3qi22Hiw2OsqXD4DeQvNEAYGvymO9+bG0b
nQHjGRdbhuU8jyHaP73Dxz1SP+jzKO4tEPN7BOt7Mw3+68d2UDunVgjmxTrH
a/dlMtHD36ObirSez2PA/ZwtE0UDQDQNACduLSBDHvGOCkGM0QWCknB2+t4c
dXBFma+CI8R303rduBQXGdq4UC/vGlnKcS6yvYME7QR4d6Y6cVMBmd7aeUbR
OxizTlyfD3X6X5jiEVR6Rnnrs6Ic7fHTGzNYNqYXE9JfngVDdzdWbFaAmvj6
rDaUvq4X7zu1Ikk2cE5UnywQ2p+ZoF6dnKzmd61A7G3zQY4A1+lp5T7ITVqL
gDxk03iEN/7ltJaBDqEjpmdc0kat75aoNp0Bz9stPN8JeJ7ZuZ3qd0EVTVQJ
xXMomdt4/vXYBHKkPTY2VV0/uFCNq2bs9LzgXHVlz3L1yNhsIPY0g+dXBM+/
/3+I56+B0DWe7xnTTg0C8uZQNwbCUtUHi/PUA+PaEZ6xbOhQ+92sIvX5ylwh
9DSPAR1HgKa0VgfQ6e4ElmaOXw0Z/eSmVmrn2AqT1gbmeQRQI/52ZmgHGx0O
rG9D/XkXJcPsbqGnx3LaK6abzG5PGe4IZMftRmR+ek9LmWLfnkHOxI5KPnEo
6e4A6GdWsR94/wJcveK+LDobJcT7IFL4yTtbk21vAH1VGWaQEhGnEqyhLAva
k7rA/8EX6Ccg38G1hbQUEBTFrKZBOL4hH6na+/mWuVHdm/uqO1vmQV9vv5m+
uCkNHeXWpPbQWLYCC33niHIKex6e3Zb+0iT2YeWCZJ6xqjm7weLsj4CzPwDO
fgs4+7djs45cdsl5yNnX+U5xE/oq9613k8EiUB7iO8obyU8lRzktr4euNiwd
7pY8CzB9dffEiHi+JQTPN9ek0+SzhV1LQlbE0i62eMpNOxOeKWMFjntG5Kr6
gcVqvIXr6wcXq1+Py2Y8z3DxHK6cnxnPNI0djs9FQbfxPKkLWF1XlPnp6WsY
z39bh7ydod5akK+WAVfbuH5yWon6oi6XeBoVdEpTN6nqDqaZpKNskkY8oxyh
100b6MjT+6e053lpt2YE7Eg3Od1IgHdmSL7q6e3ZNEcKJ0kCuD32oMczopGc
SV9vQZ50It/bczV5M6rxOUjG9wBBX1Okr5FZ8PEcOttnHfuZ0PWcb5ztEUXE
KstH+MlvUeK8O3lHCMCXlJEzIDPd0rVZMcjl58N7jm1rwwTd+Vx7Msmx+jYS
tf4PDXIL1XjON8jx3M24f5yh6DMkqSCwMd302JX5vPJpCgW8/rwi08e0LHSF
DP0Xi6E/BIZ+Fxj6yLR4dfPAQso8vTECqNvzOSdZRUB9OfNz6MJXzM/Davv1
69fQ67xKcrMhP/c7v1Jd2bmVk2pqB7vs+PWKHtwVm/rmuVge9jOwPI6x/PQE
xHWqundkrrpmQClhGZ89t3uFunFIsXpmckajWH77LFj++KpkdSLE2P6KYtjN
2YU2vZBcbIRlk2/q4/n79Tj9JINcbcsB05dpTA/poH6LmF6Vawxuzc//9g1u
AXNsKJiJnFHjPnwlRnUByxicWiImtyyd6Ue2M1BjBYZGECOABcS+341omZ3p
J7bl+3nn5EbfQ8r43YwXTFjD7WlwXTfCLOLoHomAx5hTuFwe0jZlsm7HLJV9
wqh8x36fX0knP3Z9IeW+6ORP0OE9uqm5vhbfvTebdgoP4FYYmoX1ZBlgYhpo
KCuHNWtm43D7+fRtTnQ6xrafNXQNHbNWHfS16pvSyOZJQw3/DLA9tiRfHZxY
ilzMRU0l6P5tdTpNFDPQFeUaM1G+lmTxj+YJJU8nSr5jx7D/Qkq+2UUqub7L
fDvZZKMIeof6lNxIUmk79NYd6NHxAjX0gnZqxEUc1RhyYYVa3S3Th7Dxksc6
EJ4vc8FvrMn0ITw0FMLxYRDGFJRfw/GbsS6EcWrIs5Oakbn8wOhcNbFTZUD1
uuBcr0LN71Gh7hzWVr08LU29YYeqHTZOchD8J43gEA0bEfziTJbxzwDFxmJe
ZSHYYuTvBMU/XI1TRjPUO4vy1RZgZI3kFf0r1VPTS9SXq3M1igMIYRRDo2Sn
GyXbcpbHOTazTiEXBCN+gzZ+T9+aTatUIQkjjgm7u0Sdhr/oQKN5HBuKfELe
04KBGW2mk5zamasxK7wcw9iGc6jgkqYPRjbo3QGJm2mqRAiTWs5KcQzxKKV7
1dgpnUWUB5OqnXGyxy4eSKq4+g1o+xq9+CpC7/WCXlSkGcLOQg0u62b4rItq
RTh6fz7xRtCqjy6EMWmseMHTjVKNHf+dRjGQ8N/FREbF+tRyNpO/CCfhhn3D
2iBlbvdRbKZ/tvN52YSvBcXDmYNDE0aZg4cSByP/Tv5VG9X3PNZlLwMA425Z
BrzAwbf0jzXTPG4dmKwmXtqepnjS6i6XAXgvbxy8ehGHR0dzciiDN8GA9ykL
vOjoxiSTZ8E2Ru6d3JnL1PvCc9XKPuXq6UnZoFunnR29wsGM3mRONoHjqSmc
P8H+LtSnU9SfJcxlczChd62P3r+vTyME/2MDTgPNUO8tzlf31JYZFGMiyqOT
26mv1+SqHza2IAAHKIIdFPgShL3/DMMe69SnbswhCO+cWAEQzvIhvJtpGENe
OP2D4LtLKPke4Vz4jva835cp5vHeFhIQw1XU9FLLuJW1CZDtMzDXQfAYWs0d
0zK1kozONKBOXHCmBS54mZmAUEWLV8AKCPWCglbKWoc3wYHtspdMep9nPV9B
DpCT+gxZ24TT5o3jlMxe5tm4iCg9vSlDHZ5bhGm+jNDmqh6UqkcnlILQtEKX
NdUPU7pRVf477lNjqcr/IzlinwLf/sni25cnJte/M6u9t5Mh6awRW8rndJYJ
EbDA9AqGqR2ptlRlck8P6nJJw9RfFVBEui+oypeAyjzz0iK1tXeSgantlr5x
QDotxDSzUzu1e0icgendAtP9kWA66ufAtJlJ8Xy4NlfdfFmxmtKF4Yo75a7q
W67uH9NGPTclOyJMP1zkw/S4hikc944ppulYxuwVqP4ZoEowbYRov1+HMGWi
PS1QRff09wDX40vzHLji7A2E68m1uTxVS+vLlGqS7qaaaKSi5esitSgcqXnq
5LZWhNL9M9oD6Wb5CjL8ReSiS0sry4RUgNozS0t9dkXo7ZV7AL2IOGLHoeeo
U9tz+Lt9AlEyL1uI4grG+Q0FpFlrdNbXdsDVD2Pw62SEqAbm8nBg4maRJ64j
GiUGxf/xnQLOYARsZmh8MjZ9z3LzkGSRaNslBchM99VgbOI0JHoLnydW5VEs
qW6A7CfZQt12BQz+04qh5zNpujSu1/zeAt6hEydXaX1YO5vRRYVJYDht+uMF
OIEyQb0DTPrG1Pgjz45vTdMvbnf9x2ij4meBKWLQJJTEMkxHuG6qCEu2VqCm
XT+jxy8brqxuoWZfkq+6n3cObTqJu8zV90my3M2xhNPNfXIIp0u6FQlO4xrF
KVLrgZHhOH08Ak4xboxZIzZOMW78wpQ0dXBsrrp2cKma2kUauIL2nVzTv1wd
GNtGvTg9mxZZPLaQYWosWmHU/QDR8Z2qiFG/AJ34y+UpIYya4uvDqy2YOoya
6sMUjh8Bqj9txKVUMtTHy/LUo5PaEUw1XOsv70AycXIdQHZLC2PdpjcSTzq1
taWD1mcWlGhfFVu3Xg45q07Wt+J1nOe2Y1KVxDBc55lWANzrQ/X0nbyxIi+u
4MP09G6ekUXfLSgzxMsOrBZsAwfV6TuyKe8b7F8/r3JhGaN6D/E1zt1u0YzQ
HKQgDxJyRKRem8/u4qAYpwcXtiOSN57j4BlhGiD6jBDmZS03SoNUa7oM02gD
02PLwTydSl0kdclUt40oV0cWtIGubS67sfj7SyOPksNjaltf4xW71ckHAS59
f1aCOgpc+mRtVv19o/97lxsY0tHfEoapkxIiMB3Fd+icTbzD33YhqnrTiB53
rOlZpJZVp6kJF5cEEJ5eO7UQAHpt3yQHnMu6F6q+F1Sptb3yyYeM4Nwr4KRY
kOi791MsiMGpEzsOir/pcfI3JfipmXAcEiJ9Hoj0BQAopmbaSR3oazo8PU09
PLa1umFIKW7/qIGK66evH1Cu9owoVq/MbAmjYDrxKILzoXE8f/9T4NHPtPtY
APq1BdC/rEpxePTbNRY4I/AogROOfwFA/70Jc7Az1CfLYZCeAYN0/3PCgTrL
BSphNF3jVDAao05fmxkJowzP5HB47qD4rjp2DSvxhBuEJsAMdVt05bBuuwen
YSAZ4im8Hb1ShjD3CLnioza1UfVjOpiYDMacjq5rSxFkCjfF4+VBocTTd2ar
Y1vaEACBWg0mJ1cQg8NLaAnXjBiyNqPwyfRESbpAn1FGsJGci8bBiKpsOnFl
kEAYJBAeW5GPGdIyMGSTOvPBknzKsvxJrywk64ro1QS/XZVOKTybair8WI6Y
nNp5pCc8vD0jQb0+Nb5hS792mHq5h7ETOlWxmEHo7H0iIBztq7T4lfYfJeLZ
ACq3e+mCgdX1Y3ocuqZ7C7W6c6Ka2LGEyBJ3NKm9uD1tx3pD/ySyPRGLtBxx
j0JOlYZjr5BlqO35ACm18eohiywfHhVvlNonIziOnhel9sWweUuJ6nU43piV
qN6cnQTYBAId3xoU3lLaRg0BieKIf+d0r1TXDymjRQTx3LvzM0mp/XSpD8gv
QxRbAmQdA7IxtvyB2DI1jC0FkJg7vTkNIIO25ycrWov2FALMoQDM2QaYvl2q
VdxwQGKAR6dUA6IIjNUMRjQ+T93C2S6IIkTUqdtytQ/JYxTGE1dSYHVme62u
+ugDIB+c384swIO+qcMrizVetMM1SsNR27oanLhK4O3Z9HrEH8INwO45uLwK
cFmfT3M1MmINCuFb1NFx2U7hRTvhmfDIpmWUmwx5Fn4Ejt8GZuXCImxsqVau
WjmgkuD5MYyYeqfDH3ErdYDoP/XSP+v95X8+XdKSYIoLgSFE/7qc5ySdlAUD
tGcI8ybfnIZklH/kso7n0VqAd0UI0RT7tqhJoRCQjglXaE3ypJUmjcBFjOsE
SvMY/GEc/7L6x9nB4xu7R1He1IxLimivVOz5XudXgfILhmqfTLW0Gy8rjsou
5lf4Cm+cq/AKpz5InBpPGA7l1CeAU0MVXmOYwvGScCrmVrwmnIoYPjI7kfxH
b4v/6M05aeqZybnq3tFtQSkuw81JpOvyaL9qXBgQlwrbdUWpenR8W/XWvBzQ
gpu7Wq8xUBHHKWE4NqRq41hIVeP4X5sYy0HCMlx7DWKZLaGVNeeY1UAdLK8H
LG9t4RuttOAAGJTzSjis08LPu9gObLpVADyvHXuMEAOggSKq0C7FyAzS48kb
88wkXFw9H0GLSENwgg3rmS2OgVqfubJUnby2FeuZnFnIuRpWtmGU/EbAH13b
lnAHYI8SJRg5Ek/hVyevb4VbxmfEEUzh4+0Z2gME5nQme6mWo5NYK7G4Ylpz
mzsjUafG54m10KBzYHAcqDu5lbptFNiW0MgN67PUT5t5v+IfBaOMzxQHnz9I
6PSTxdmE02sGVKi/rvBTGTGE+mlIHObBEXkNIzueiw7XfYwrZw5hke/VNakR
AtGxorWGLNcZ4DsipTcj3SKaaXoEvy0m9Zl6r/6+wdENG7pFUxbUqm4t1cRL
2gWQar0qNeJXFbRzEDYvrtJ7p2Qys8IL4BSSDVd441nhFZJ9zPIcPSkA1Qrv
cxEUXjfxyQcnOXfheJfmIyWpD8hzhP+nq+V9OtDy3bcPL1Ur+3bAZby1FoSO
o9X9O6jtw8rU4xPbqiPzWqn3F+UAVpsTLm2LNFzhZWz+U7D5o8xRQnz+tInw
STQL+NyS5hUAPjMIn0+DEryyf6XDtbjO187R5YTRE6tbq1ObsoEaAJdzS5xF
Pk9syFcnrskXUJaRgwhpDCkNrwEzjwCqHUBH17dVh+uKETwmBDKqAxHyia35
HOBggosj5OBWA8c2AOjWtCWgolMKbwDg6l2RtUf5mSWlDMDrWtGUCmTL2zOI
GaNs787RVRx6P31zpqW4hnh8ghEgiPivA4t2URGtgDizZxVXoTUB8KV5Rerv
GzPUT1sEgGcgSAqbrGanLDp9PpjPescNQ8p5Sr4YlKjPaucPhlEeH5PTMKNL
JWYRIVne64POhFLa+uA0AVEBYmfmStzo5xAcR+DAOChN6I8SroRf9XDU+edi
quScvqde7uHluKPs+CoCN1KW8gM8HqS+cYdX/9Bl0Q2bukerLZjF2DtJLQKr
ddCFlaL0MHh3DEpWuwbbGnJcuIYs7PqQsGu4Owkt1oSIbt8XpzbzNWRhV19D
TlRvWez6HhzvC4AfHcdS/eqsluojMVmPLUpXR+a2VE9OakOu31WA3gU9K2kd
Pj1FDFfmWtyrUl0HCtG+MaXqqSlFNC3hoyU56ovlWZT1hCgGdoV7AMMBJFho
Emt+AqYyIoD/tRlRDAAGy25rGmco44JdoDifWNmaQgIHQVcT5dn4aTTp7p/Q
HrjDxB9xugJOU/olrZyJymcMeWHQ7rR3CYPPujKINXQund6RRfxoILoaILoY
IDodIDqyAy4tC+j0MYrQRZzjdSc253N2FSZXoUm5E9G6s3k0YjRGQInzIeuG
nIPg5AgJ8WLQgBKee2pLNmESh6WdY8pxaBJBKqDJPfvGl6k/LM2XPbpTwzXX
9QzM0zYwBZzaG4sZCu/NY4A+OraYvT2yoOUnCzl6gh6fZ8dnqav7tsOkfzQ4
WebNApfEZYV8zslWEHDKqvYIMiVAw88N8n8t3Si6sXWNnCNQKzkOyL1eoIEp
1rN+OF7jJCqakCvvId4p9SOA6SPDoxu29IxW9b1i1PV9YtW6ni1pq05UfilL
4qJKoN/2pAhv65ejbqrJ9JVg4dlwJTielWDh2ccdnk2I6Fh6CaB6JiUYoWrz
7Ftz02irTvQu/dGK0HwMxydLko0x+/nSZFKC35mfo16akU9ke/foUrUIYDoI
oBslJh3OHEIdaWmfSnXz0HK1Z1SZOjAe1I7nZxTBRW8vzFd/XJKnPluRo75Z
nRXA4GpAfXc1pg3+uBlzFYF3t6TpvCYU+nrcmgdTI05vbkG27LFlBeRwQsfT
zB5VYAUzZDFLicAEfAeAitaQ7VNF+No5oRwe98yiEtQKN7VWJza21iHFHc1T
EUi4czCiaTty363NdXbtqWslU2JloedDCi3Mm9IpSHR0WSEq4Kp+WAdphwRS
BnBC++EFReqTVXmyB6WPKnTZ/LghJYDKppflgmotg+p7DSpJ+6FQJBwIKizP
k2CboBdHryn3kXhynp+Qpa5hYKH6KYGKoL12pNdGoGFnEAiyqoURBR13EDKE
uwRFiJMCczqIHxFQNdalBXK7e2kUYvG4nMbPzfh0aMrgQcZeVeXa6PrHhker
zT1iTHrC9X2T1IZeLVWf86u4sS+hZapwCt7ibiVqbe9CtWNwFgAr2Vdahfce
AUCFKq1kVcLxFCiuzwCgnhXF9XcAqBcFUIenMe/9XnjvSCO8t+uKYvIKvT67
hfoQlNc/LkpiQAn3GUCRuzZZfbEsma1Ky137xbLm6uOrMtWxxTnq93Pygfva
qntr26ldI8vUNQM7ELCmdq1CkDXD6kdhkDOACQkBNb0bUsjyfpWUO4iZRiuB
1mBg91KopWJpps3OceXkeQV5Bl0UdNXrWhJnRKPQN8OPPhDoHJFJDMXa40iL
xXxgFPxjqwpI8NGFhJtyA51oxZx22hzDCjG6Lk9tzHY2SzJY0K5LYZh/iO11
Go4f1llgEEAIGALoKPE49IfuEr1t67OTCiiZBvdLQc8mzjt5YVKW2tjPx8Mj
riKm4wsFLMz40UTrXUhowfUscqkROa/D//jyYL2coy0io9zr8Dsv0ScVnTBg
Uu1Y9JOqE5YGD91ZE6229mLRv5HWaExS4ztyuHd6dTu1tmc+EcoYnH56gQ4y
MR5wyTZcl3FN7yLAQw7ogMlEKEbvE0J5Qgjlqf+EUAQDSChHZqeRd3R9/3L1
B9D9joH8f7jIx8DxUFKxMQCHxgB5VlZqDylYcORdSeGQhWXF/Q/ogH9dAxbZ
shx1Ao53FuYHMNkORPT1+YXqjQWF6s2FherlOUXqxdlwzCpSL8Dx5JSSAM5m
C6qHJrSDwX2GTGLinC3mMJqSBiK+c2w5iTYG/o+uKAyoE1e3DqiTm3E++Klt
LdXpGzLxIFJonoxIobkYze3MlFswg+z0DS3ghmw6Tm7KZeysLlBHlwNxzGf8
7J/cXmMoWsqBhiNiaP/EMvJhnFidp05vRRPtWlJnt1lwAijpSIClsEEJAFAA
Rw2nv6/lA+H0nYYTHN/WMbcQnlZwlABXIp/cuYq08RemtCYXB1pXGLJ7eXKW
2uRj6jEfUna0QCDlhOzYy8g7GMSTLRVdIJBK9XyFzLaw8NwhC19VwjWp1nWa
b0jJS+bihCbBcSnTqtOXBo/c1j9GXdubdTXMpLmqKzsq0Sdy04B04w+5A0yr
6/rnqDW9CtXcLu1o0bQu52k74TzVFaA2u0t7tbJXido+OE/dPTwLdLYUV0+D
o6nUok2qo3MSiVoeG885D/tHtWWfiECLYAXHRyHQ0rD63NDLmaF1CqB1ak2K
iQj+bW0K/gWdbG0qaFZoZX2H/sy1EsHX/kzym6SCCpNKa629vyhfPT2tRO2r
LVMr+1UGxfYBQqKJRk9MLqFDo226/IVLKU9yZX9t0CZwHGJie/IbHF1aaPwH
eA40LLTG8Jp4vJx9ntFkliFi9QEkhfGAseUB/BjAcwG8CPO/xavKhtYvacEC
6xxnlAPwEIv4OvLcwN+jVwFbrslDzw7mDKUxClsACtMYiVt55RNGYrjp9A84
TgO5GSSuc5H4NzwYiSBcgEVofY1EdDRiQOChMaz5re5bof40P1Udp5mVjMbN
/Q0afyMwsWMCFhTN3GmB4i9dpClCGv2OniPI1CYUsVc0/gocNzgzd+IpL4Wx
F7oGy6/pdEZ15prgkdtrEHuszW3qnal6n19F2Lu6VyvAW5wJFPiuDPRJJqvb
QK3b0i9fLetRokZ2rETs6bXGcVmkqZ1x65ESdd3AQnXfiCz1+NgUgF1CI4zW
zGE0V6tLVHePbEsZMo8D/LQ34xgcvlaX5Gp1EaD3FUDva4DeyTOw2ilithRi
tu903GCdxA3WM87+XJelXp9bqJ6aWkLrGQJgGCs5NO3rrtFl6rdTStTHS/PI
c/39OkxczwHrrMxg7I9X8rond4E19vIszuz+Ekywg5M4h79uQKXaP67McWni
Qh+4tM/peoyH34AGz+ltwGObgcM25NJxYm1rkNVjdQWYMI5QXVxEB+mEMzDO
B8yG0ySB23bWliOmEJa1uFQhnts/qT0t4AdHAG/C1ZDgdrSn6IBH4sMD9KIg
vRJfb4Li8LuuppI8F4BISr1FXG6jHNBt9kpiomz6Lg0wvK5J8VpZsEyBRmdY
fq9hucaBpTqF65ms9AnyfyROhx6O9+Zmq4Wyo9QjYwqN8vnE2Dy1dUCZhuZv
GTHauU/5Zvl8zompOyxZR6irFiw6Gmc033tE4xZ/kvicvu6AptbGEtmYFrNT
/33Aq/1ydvTx7f2jiRYxN2bKpSwg00Db3D4wmWkRjj0Cz7sFnqHui7uHNVe3
AB2u71ukpnSqUGMukXyWc2m5g7GXVqpFPdqrbTXF6t4RuQDVjBBWbBbmaER4
osK5eWAZQfN3U7ONs9EonALPjwCexxdbCufPgWddODyPzM1Xh6YVqQfGtlMb
B2krvy15OB4c1069NqdQfbY8BywZELRrUkma/gb3IZRtLC4D4+0NgPIPgNFb
h5WTp+SfV6cSFvH7PyzOp2eg5oq5q+jiOLkGgLZCcm8GVEbMu8G0OEypTE8l
pOrsmzQBCfyO9TkrSM4JBM2pDTQxcxsmmtSngjllwLJFgyWVo2Jw/OMan8R+
uNqgBR4AePEyDVq+XYVHCFpWuGj5RhJQHhvL+UvzwHB4e2YGaEt56tYhJdi/
GjHPsDQ7s5ha8zknwC2IudQV/kZBEiM0JbR1QDAS4ujQrsR0Po2uCTsm92tB
VdIhr+618dENN/WNJlJb3R1XjANKA/1gefdCtUOQY0e/ETXo+LtXkIP+eddP
gYG2FLV7aI66FhhtLTAbwqbH+Vr5LKGZi7O7VqjNNaVqz/AC9fi4LGC41DCF
8tUZaaAzlKtRl1apw9Mz2PlnQ8dmNoEPQedKhs6fFqcDA2aqDxZmqrfntVSv
z26lXp7RWh2ema+em9pGPTGprXp4fLG6/rJyNbmL+ABi1JSuVerGy8vVryeV
qD8sygMdNAskH3RLYDaviPTH79cyyL5by2BBotJguQrAgsD6Ua57Z77MNFzc
Sv14NeueCKCDE9upn+Dzvzamqq9X5bBSiXvuLM1nl/+WNHUSziNY9H48RHpA
HZRhiknhWzLiESE4DTotDj/FIFZiiEyArMYzN55cm4NICeB8H4wqpGJ8IdUr
jAyUDQyUv69PYVqB47u1Pq18K2DRQGlYaQMlSf1ZwIIhZnSgvz0rW90yhNtm
LgBmBwCl34VUF4xwoRP9OR8sJsKV556LAJbqJoKlwPM1RPSDBBA1AboqeMiz
fgQuCBF7KuHjdDo/Ne+IV3dkYnTDLf1i1LY+ScZPjrbXtn6ZjeqAOpx1vwWX
hwUuto8cXRqP1aao+0dmqd3D8tS2gcVqFsAE4GIS/3oBdHCy0fLe6BXe0L8M
1O3rBpeqjTVlNJsBj5uGlKo7hhVT4lf9oDK1rn+5uqp3hVoGx2zogNpq2oue
3HBemZoEtvK1Q8rVzuFl6snJbdXb81sxkYiZ9e1qJoXviBj4f/z+W5H/H0T+
tw/nea1X9a5Ur+BqDKAHorzjvX9d3ZyIAckDn4EYwO9uASLC6SxIPkgoiAVM
2nx0IvM3hrhOb6JkjS1pOKdtM6/pcmxZPil6tuJ3cEo7dXQRqF5Lc9TpzTh7
Jq0ZggF1KgRIvdBFFD0Bl82f2aNKnVydI4j492aExSa84CdtADEkMFaXAmPi
DyGI+BseaxgRpzQi6hgR/6MRgXmLyzh38RtBBHr6PluciAqXUHIQF20mLx/+
vODzhJmU04rPOQFfFw4RjB2UdooEkdnjRdd5viP8kHCElylsYIWKTG4Vi37b
1LxDXm3DgugjewbHqHU9WmIkl0Qf9atba5JI9MMjuXFOGsaDEUQ/kjdP2z5P
TUhVd1+Rp3ZcBizStwzItkLN645JPVM6o9k94pIqLfICj/OJKWZ0rVRLelWQ
2KP4Y67UjqGlau+IYnXXyGL12Pg26tcT2qhnprQGNmilDsPx5tyWxBTHr0xX
XyzVnj1UtJJB0UpW36wQRWulKFqibOFfPIef/yZ4wDH/6Lx8VLhINq8EPLw8
sw3J/T/FB4G4wusQDzTRck0KKVf/2sA4eG4ar27yw/oMwgl6w0BCSTiPzGcl
C22qU+uzGRqxBA21KZVoAyeNnViZR5AAfcskLqIetnMk2EeLC4k+ABNwbWo8
fkByQHVra2oQJ3bjKuyrc9TM7lWqrn8lElSQwJHJOwHambvi/mZTJMX4675v
jDM0QgQlgpAAale4fg1mJlHcNVE9PylP7YNuG3ephKWDx5f0qjI4eVm0nhCP
eK7Qgx1+daHieOcieew4fBo84Fmec0agszsZfqYnB/ATB6yqU1fM9qoLrw4e
2T0oRi3rmm/8BMu6FUYEi2+MxIXHUuF4NAJYfuuAJYFzluB4QayRl4010oys
kcNT04gnUCA3AVf8HlSrt+ckqnfmJqp34TBq1XxLrVroq1XHSbVKcqySz+Ew
YFkmYFmeDB25ItlrzZhZ4eOF+ASOp6e0VVNk0xPMlnhxRhvDLT+QH4GvRd54
dbasNLqoFfHNacQIcMU/gFs+XiJZvWh8bMBzKIupGiZfrcxRK2Qpig+W5Mv4
rujXplRGDcp4rjp2VT5OgEY5NwmDl/DGKsg/aMQAFNBQ2YJQkSeg72ABlw4Z
jFb73ogoBVx4uTyphCaW6MS8FIqUhgaHyIe2SswP8Wb/1daobP4QrerEojTy
bN8Lo9nK3hUmkXhd3/ZHHqstqR1+b6z3mo8NezZKjnCFHUAVbFTzV5ofyPQO
iRbNsbChUxEK8L88F4lac2KzJBrfoslMr34mWQhdESnH1/YpwyQ/SqfHDL/1
PVup2wfGGqTYZvu+CEh5SLIOGCnxhJTfNAEpL4UhBTf9yjXU8sjY1uotsN1d
pCSqDxpDyiILKXAQUuD47Cqx38PRgmABmCSDkZKjHh5XrBN5toFG9rvpbbQG
FkA4eOkElP+pSyYwIChortL0tqyMrUkhYCCB4GCM/6Oh8cgENjTwPJIMgQTM
dS8BdPwMdfcY1s2fmlZC/6MO9m88NgmhbGSBD6LoozcN9DNc9eOZ6ZJP2FHz
byxvSARoQNvm8OwiQsjJOtDH1mfAt/BUL46Q8sP65mq/vPflmW3Vvzfwets/
obIFkAGa+RHhDMc/QtILKGeHQkDJlF5gg8b1cCWpL5akqVemt6bw6t4rStEB
rY28/hf5vvMZXSqPvDE1t3bIPbFvsHAjZxgftPCJs0d9tIMZjQVSvSLY4gU+
bBwocQgpmOpZP1nySLF77IRZXSJCLbu/Oh1YvHhxQ+3APg0zq4vVxI4+hjb1
bkkYuvMsGHrgP8TQ7xrB0EtgyINdQg2LVsmLUzPI/0UYmuNj6P0z4WixiyOD
Ic04SxlDL0HfbhtcbrLf7h5Zqj66MhNUsmSknQDyDkj5X8VaQZghA/2lrjnl
ImBeAmphDXWoqcDlgA64HEkGlTn0km0GJe6fGlNw/u9rWYkjDIEVA3h4cWYR
kQyulvKX1VmErACyFFAOfATYXEMgwgMNmY2pUYSEGPU1UNQHwF5PTy1RO8B6
krCSjkIhmOrg1G3wFc73R6B8sqQVjBw59PmXskrHBwsxy+6n9SleBqHmR8Q4
HbxZOy2hJchpWJmuvrwKFN1FLWG0yqaMtzdmtVavz2ytXpjaRv1uShv15IS2
6h5oybX9Ktg6iVfjwWTcOKAc9PFi0MdLwSxlh970zpVHHh5VUjtwb6x31KcW
Ax2hGyeSKtDhTLioA56vdmHOjtjltTYkrPipifREK3PO/GTzI7WGhqBBGHFc
6RJ0UiPz0AJ9gzv9qmEyoKW2Y3uDGNTPtlv6GSLmrrMhRvSzx86GGDgiIgaO
g7W5qvcFbLvvGd4WUJTGKQoRmMegBhGzIALzLNbMk6Sen9pa3XJ5mdZptg8t
A5unjU0+Hutq8YQMAg0c38B3Wl+7uqYD6WqAHrgWzgQQKICR79ewAYM4OQQK
HfLMKTDykV80TuAz+szgFyg/gM7Pl+VQBBVl9l1Me4CBPoBDfiKO/SDw/7oa
J8zz8fe1zYEqc9T7C/NxFwb1yPhStRUQJiod280BddnF5wKx4Jaly/tUqk0A
aPRVT4P/cYtiKJWXSNVPpnSAiZ2q1NaB5ereUcXqiXEF0BO56k/zcZYSrtGU
p+preNxa1L3i0MO17Wr77o59h2VPz4IgAmjJ53BoNkFJR6pjcESvEwLQCdg4
8nPeWLBOuIL4Iop+UyaA+eE3OBsyYcyFbHL23pZpcda34Dqyh3pdfEED2uY9
z+N1UobA56XG7IhtGhGMCBXr+Ihi/WxjYj0V/09V2wbiasEg2F6e2g1i/QqI
9ZuzLLEOI4PEMDJ4elJrtXNYKc1vwvqMgw68E4j8zTnZ6jMQ8c9txUpI4WuW
b3g3GSMg2rjY4fAyzPcEnaklDfcg7JgNgwKNsh0FOngK0A5bFG/OBeEECYf7
UI7JOFkrMr0WgYA8EUPyvndUGck+GvIYMQFJj0e1BWR+HX5ax5+8UvXOvHyz
te6twCxvz22tXp3ZRj03ta36zYRi9WBtqdo9okztvqJM7YLjvtGl6rHxxerg
uGL11MS2ZnR+dQbqpLkwQuRCc+ZCE2arD+dnqI8XpqnPxbF0YlEi5SxjoF3L
N6ZYPjSqQI2+hMpwaHTnC+ren9uhoKOK9d53dQ7SL3gwdcN7IuSLeZyNnKfi
wkIMCFptolOnTrjQsbB1AdnEi7oUqRv7pRtNZTcI6F4Q0Lsvs23iOPKdogPJ
Fs6DjQknHIcmaOFMMDYxCigK52/GZaFwsmw2UzsuLwZrKoNk0x52STbh+M34
1iC/xWpWNz0VK460x9uGlkKn5IYPvVcmBUBjSQKh+uyqJFtnCaB8wmmU0MMz
OEHmlZmtWUabqb9YgzAeKKd/rUOnCf/Fgfi+MaVgKpLArubBOEiSGgO6cYp6
C2RsGidZkvZy4qqceBTZAH4bh+oziPRbIHhTxf7G3V/fnIvRcFCnvXyyRP+G
5oW89lRoIEys0W/gOLk0SX0tzhr0aKLD5lMRvo9F+DC3F/OuWACbqQ/m8HTQ
e4bj1lBUBhQLWj3/QxYV7YMkr6cow07ETITwShbC0ISNg42OzcVI/DhKYtSB
Ns7BFqgW8q/vmynkH+uQ/z0ySt47DIUwzvFi2kL4eG08ezHheGocC+GT41JA
IFPA3ARBnJygXrRGyUeA9P0RMlot7FGhnp6YpR4fn6vuuqKtWtxT2/XN1Lp+
5ZRI9eLUbBklE2GUTPQVgIWiACzCHByQQxAPkUQURBwpAyCHSfCa389im/GB
McV6sNQD5Td6tIxxJPF6MESv7FWJ0hhAMYRnk2SsMkcUOi8AFCg8fwb98jEY
zVDAMKf+GlAgjl/ZEp2AcejriMar4No/r0gnvUEL4oYBHUCbbyNCh29ameS1
jCx7S1n2vtKOQhn0PqVBj2XvIxn4UPaOadmbDbIHx7sgf2/PxOkJeWpTf73j
Q9DIIf78kYXLXnIHR7hMf5w0i8iKOC7xGTssU+ERXyZDdoUpQpnECBjKpFkF
Hh2GI0EmJ1zSXs2obqcWdClRq3oUqtU9C9U1ffLVjTU5asfgTLUTjn3DktW9
w5Mtr7rIIxxP1Pry+LQMij5r48CYQAPjvSPy1O2XF6IkssKfokYCOG+DgfGJ
8bmuLmoNjD5pa3FMRHGEBgWBBB1RRJIHRhkcD8/gGTb3ji4WAgfR/AJ/fbk0
CRTRr5YKgcNxcpl4SOB4RYbLDxbgXt4gn1EonDiWLkVvcrI+WETj4L509Siw
55TOIIfA+1eDfP1xIQjUShpLY1DQ4G4cVvHUi9Pa4Kw8rSrvB+79cEE2ix6L
H9QKBNDLIhHkoS+JgzmWCJ4wIpjoiCANf3Nx+Gum3hcRxFWeUAyPzsAp43lq
Yz8jik4w6GNfFJFotSOvBcuUEw8SUWSVMGwmLi8rQ7aYWS+KM7qDuMwUbu6J
yQs6IqUuv6iS1rHofJ6eJpNEe+0OvKiK0tgmV1eouV3aq6t6tFNrepeoZT3b
qeU9y9T6viVq64AiNbNLhZrVpcLTs6eHd6xSy3qVq5sGF2P4kge+eLUABr7t
lxXT4HdkZjOmYUtNfHdOIrQLyJsnEjePJY6kbr5IHRw0CMLx2kye9nLHcGB4
ELsADoNgI3x6JQ2ELHUseSh4YA1j36L0BeHKNLITHqzFVbhB/jB7SyTwGzaX
licH1Z/x119opPxyabp6eGwxJRyjfrmufwWULJuEBX6twKfiwPU8aG7XGU9F
kK57qLYYiRSfiuEPECqvFcnzV1gsS7Q+tUTreIhoHbNE673ZzcJE683pwEWg
8OwCfI/oSIMt9jL2No52n7GshK6XksFyoUMoxMUiXct83rVdvTJbx1mNjHMq
L0DO1dJFXYN8i4rftf0y1Y6BSWrnoCR104BMdXNNpqrv10ptgjFufe9CdXWf
QkqaXNStnZrduT1J3GiQvMEggUN+VaUWdGuvlvcqI2nbeVkBjGM5NLYh374w
Cfk2gfj2+YmpNL5h4Ly3rJo9FT5fN6hUPTwmT70yLRXErhmIXTMWu9ky0NmD
3VwRvXksdq9MYzEDLRDHu0QYcz7yaVh9bI17JxZrpRAEMUYzMh1bwBhd0KMS
BTEKJZEEMQijIHwCSQDEfY3DjXWgfHwKYvogEDiasyiua/pVqJentwbdoS1+
NkKG5/G6Dxfg0nsgVXDuS5ItdI0irEC6vBbMno3I2IeWjL0fImNvWTL2xjRa
h0ftuqxQze9WYbMq9j9Jwpcy2tgeIpE0Z0tTkbTlLqU6my08GEHc0uh3uVbz
HJFDNW9OpxK1uXdLtQPUvF2g5u0eHOvbGqDm7Qc17z5Q8x4gNS+ObI1HLEP4
cbI14oFS411KheN5m1In4/8p6r6ReWp9vzIMVzOtg+ihmodi9/i4XKBeTGwA
oQOufAualcRuNosditwLU7IpUYampvCoF0DZC+CYB+MTj3rQVXwEQPDgF0ge
MJiWvWcni5kxA/cgAAEEo+RKkDBWCfHXF0vg3y9INuAjWDSt1f2jiz09DREl
9IN5GSQpLC9wsx6TFuO5TxYlehlEeSw3UCjM77ZlZ44rOzg2vTWDZeeIkZ0E
9doUzB/LAQZpF4kJv/EpzyxIIeLj+OY5oOut9GlQx2tRuh7wJYeegD9MpsU2
DZKBQNk9MFgt71aobu6fDhaqLzV3WVLjGwdxjbhPWGp+C8rY02IcPGtbqGaw
wkntWTRYze9eQQwZEBcsSk9dn3J1/eBS9QgMWs9OylK/n54KxgIHIbfUoP6A
bBmj3pvjD1rWwEXSA4Lz4XymTDlg/CJ5Qln6YF6aGltdpW4fVhoFopQYxO4F
awJ6OhoemaGeA4HaP6pYba4pR6+w2ChF9P+dw0vVExMK1LzulcZjg583wXd3
gLV8YExb9Rqu2Tg3jflLy0gIj2lZeceSlTcjyMprkzEEmKe29C9Rwy6uwi7T
481fXU2dhpXmvgJk1HCRlTp/qAlbRF7PhINHmNVK9vpiZ4SIHSaltkZvrMyR
FuNpIdpzBiE6MCLOFSI4fkMaPQoRDj/x7OYY7w4/JERwvCyC9MgYsDJrSmkI
YjuT43SbBpSpG0CQUHieBBX/uclZ6vDUDPXGjFQSomZQN8N6cxHlIEJBlCFc
HUMocO8VxegIQeUMM9ePzsqAISsXFLnW6rFxBRQruGFwmVrRuwJFSquB1wwo
p9MPjgaDdkpuEEcMlsBo6Pg09cCoQhghy9TsrpU4+omAtaCRcGaXSrWuLwga
WCYPjioA/AAGpqUYEtIC8ntLQJ4e11zdNqRQLelOExBxREGM08qq3/lSYvxe
nARIi9MYB4JIyWr6HWP7vfS6NvjZitKZsWhPhPGJ44nFoTxFwmILyi0D0tUu
EpRY1xUBx/0gLA+CsBwAYXlYeOpgKE+JsDwtwmJGnIky4kzyheUwHI+MyRF3
RBS6JtQCGIGmsuBoucEQRV850H+DzsQZ0CkzuqJvbEnPioCa2RWTs8ZcWqWT
POE2DrnWwrmrgcswgLRneLF6blIuCFwGClSzAIIf3vuBqBkyBIAs4q93gCPj
aCjA3sZefxQspp2XFalVfdqraVDGPhecqydi4UA5pVMl2CLtwSZpr+Z2rVBD
f0Warx4hEJ//4J5xtm9lDcL1eUrfr6HfsXZsSacyYP+ThiyLmjlTcQvoXJHu
bNyf5tBFF13U0Pm8X5AePBeUkq19WqqdoAfvhc6+CzobFZJ9l/sd/YB09EMw
KpBCAsdjo9xRgZQS6Ww9Kjw3AU3LLLWmD4c1JkKr/BbgAB0ewB6HPnllKspB
inp2YnM6HhyFGVcFAbVrWGEAegoVgetBX7kBDhw08Ng8AJlmM/BNNBhzpcBW
xSQEKBQPjsZ5L09NwA2NcUB5Fyl/Ng4n1JHQpdDJePIdGt9B6ZkFp9+a2QzT
aaxhnpA8PQGe9fo0LCchGo5Xp/DxCiD78OT4gHp5UjwYhi9NilcvToxXz45P
BhhkgU2K6/5X6Y1qEfS637EnfuKeDU0cS/VFwqxuJd2/1icIHZAx7p273W6n
UYTXsmuDowy+FF9OuujgCytJD13ZvRAw3hLwncQEYOmf91yebGEbuzyOsQ3H
49LliO37rshSK3pyouy4SysBD/nQANztz2tSmIhtCGiHZjd4h+PwZBGBKBKB
V+V4bRqc/j20eJx6nXtAjmbqyIxm6uHRPB/rkdF5QTwRDb8SoG/xmtdx3J2G
b4N+8lpyL02hN9EbdRe9AMfvJsRDCeEYH6+eg+NZFFocpVCAa7HGoGsNaaU2
9ytSy3u0U9M6Vahp1RUIXz1+k1HBMWC/M+0NGVNcDcDuzPX8j1YkdfxC4OuY
IrzxTCYKDfYl6qLYlwjh410v+C91hUAY+/PG/pnqtoHpaveQJILvriHpavtA
XDOllbpuQD6Ys0XAQu1o0t+YSyrVzQPzo7BDAzhie80YytK3v7XH7nEo2NBS
utUmYCtjz0aZcVz6NoBNzR0bVPU1JTQYPjMeF0mAvgAW9XsD73F7g3pivPQE
HE/jkFKLR5z67Zg49SQctw9upW4ZmK829i1SU8EcB1Ncr7KHbYJKj+4dWueR
ekhSXxy7T7rH8V9J91zN3RPq2d/rdg/pYecwI9ujq4YaCkuU+PPQjUULbXQt
URt758Mgi56d+4bGQQsi4u7TA+2wuABCD1iExlsNQDgeBRA+NirOH3PHUCcF
cNCFp2BbPSPtBu0XwIaEF2OXPT0uWU2orlSzu1TgZ2guaGwvLXJzj+Wux6Z+
Ao/Rceo3o5EBUKxy1I01IEa9i8gTMshvegSF3fTkx6amT4nQ9DL9VTt3qCGl
6Tf4w1yYF3u3/yhz23/TuQIND3w3QkT3A4oE9QWyXZ/zz1GXXVSpRl9cQUsK
TYIDN31Y2KVELe1WpFb3KFQboHPq+7ZSN/RvqbbXoHcoE9gwiTroAVF5dK88
CsdB6JVfj4JOe3x0nJdJTfUESWo8HffDCIkj447B+dB5ydSseM3jo7C/09WO
QfAqQOY6aNLF3dqpiZei070C3ZzojNfNGsB2BQsABnKspS/YIfEAIvykCKOI
tO5GFuxQx+wut2FJlbhEOkIaFl+NB9nCAWzeALavl4RF1K2MBxYbJb+h6/m/
aBh44bkNIy6ubFg2dqiaeikoStXt1fTq9iA1Mzq195LUrE7tya8mR8OCru0b
YKg9PrzjL/A5xyd0qjo0ofN/Hxja6QJsBnqjtAUWxJW0Nn5bGF1a2sLRfnm4
9jZxW2Az2RbXna5sUlsov+3c6KB4rx2DTh6/2RVkx3d0+5nfEbbRgiRtOBaB
vGar36O2j0F2VcGPZnBTVq1Ds3J5jT1382B5Q71fkTDLNMaviKd/rnNfTdcp
v0XCPL3xfL2z2am8mr1qzULD/HjSNnvwNfg9ver6xl6/xRdyMxDF+yJjKDro
VAMv1wssedaSg0blvoGv0zTiv2+r/4Vx9cS5F1Nl5H3X+82s9TsjLze7t9F/
yu8bV+R1rpo9Sso7eFvKMLXjJvcp/uN5p2l3aTnpcmd0kcfzc8Jo80a/g93H
c/e662vJ43W+Ef3H+azSCpGXYL7+zO8IU7Rlsp4DXHnNrXxH6Bh5nf8GI6bK
F5SwJVyi/MoZzMobtrtl0tJxrd/a7huu93vUSK71eANYefwOt52ckafef4e5
jd5xQ4R3BCNUWd6x028ke/kxkXknW4IeLzLg8FTAPWc//na/CmFjzmb/HcZE
pnew+MU6YIAfZxaOPP9OLn7owGLNFtBLBZs71/oN7r6WxTLGnitnT26QN8re
HDY2QhYxNRWkNwVoo3b8dAs/35Zg/XxsRnn+brfT8VvsGGoE1qmCTr6e9eho
mwxMPEOeyzpv2A4hV/uPNNJNjxT06PR1rb/J0+7yW8He6oDNITdlhp62yhcR
U3J2ldOUcr2ZPd4kb7g7vB3MILHWf40BfehrjCSKJ8bmGXv8pwfiz//h9/Lq
0WGjBjtt3HHGfqXDBIl+2+F5DdIQ1qFRWAJU+/mOUJys9t9qBlH7rRF2MaWS
63bG57AvMUpPxsSvsELMmN69bjM7Y0wdv8SJjNlvd6b+WL7tkGaO0qtz43f4
YNblvPv98tpDT6JfNU//zPFLYpzkVklitMMEv7RLEKnF2SsrKwxHXoGOuSsG
W9VuSc3ColU5LnsqzRRXFug/KyqpZQGMvPBisQGgqRT9R9WeLLUsVlaBnMO/
spZyfCSNCqugQwzEoZEWSZ/XxDrQQ9mbRUiNIFmaLLVkcaa+Zii89w79cEnJ
xzxms8askNNxz5oEZq1bezzkXszuN7NcROTtwRj/hoi8XlV6gZTIdqrSQ1nN
cNEkYtgUeW5tVzhaz9Spl+6qpcLT3M9YZ46BVTmqNA98cXr2aIPcWy3P0ivZ
cM87A6OeQCqZjI3XMMJqp1FaXM6EGV4jXGvC1Z61MGrIvL47/G4J6m6vsq6r
k3PU/bL2aeiiIovdWlBh7VpEUFmdsRYF0hIBuyalTkV0s1LzywDmLHEZa/pO
vtUTR6iaMsyH5q8scktJDUjFH0hPw2pxMmq0JlUbVF4jqCp3Sq6nVnpWyfX8
F6qN3srEs5ZA0rqyJ4sE+nWIPGV/QWMVqYnQDzLORcILVs3GyzlOVbAax0Oq
UudZUiJVCV/QhpYikNXWQudSz5f+so0nKvsF8gYooxn4xPniOBdkBUV7MG2M
w//LqY9Zg/Fn1ydkzZEUvwS2eM1za+b7HKRmjionNXPUlgS/xRrRE+zaXfD/
p3KslYUp7kL04Q4VqZyjtVuVC1nRL6ipyhZDG1H4roudmjVEqJkeH6qtJ1d7
oWtjhKAx3W9eW62Z7dbMd+RIzRxTi2pGloMeXpsAq2qnPs44FlKfKqs+zojm
r/XBcI48bYivwtdO8ksXsVKOxcndFaVtnzMhqptTFWdga3SYDulCaThnAOQS
xIYKnUYCNW7AL45+lDfBrabvGpJqOvaG1f9ngJce1ns5NXVgoye8eOHMqluk
2rquzrMW/pfZDloxoncHIjQ056hHcHpd4H5BPZvsN8PZVKJ+drXisRMOSYch
wvF/rKqj/nDV4qrkOuzIKvlOT4rG6635bGFxhaluoek/uzYO+BIarU1QI4ua
aBBXpd7vDTOQBZXpNfNjTc7WWzHYaq9RXVlLDrMzRf12JMqugkNoPPw0yc68
nN/KjsAobV7Uyt8k/3SNdZoV2zAFZ7JfRtdHx2WMc/QCjx03TbBIeUdwWbIo
skU6kd8c7h0s8HveUEELv4O1ktyYuLIHwHvJ7xPbBz/hLG91HH1ncTeYDhnP
r3zZr22Yg2xchMfb73U64Gf4HLj/vFf4jtDRcGwT3mpEUwywJlqG0/nFr7rN
rBmy1n+x63O0OjckwNuksYiZV5YxiZx3oRdagM+68fApw/gl4V5QLlGMraac
zYRiZdp7nUthe+5NhWWAtp3P3lC/CK63Uq+dYveGpCVqGSAOC0ZW69hS9HiR
ihibJ/D1WgQJkr4HM97tCPov5WdJAKf8C0tHHsR5GIjg5IwUc2nWuBiEqkd1
/OqjvvDZ4+7ws7w1whJQTbIN1vFb3+I7QmOUw/y3uv5SK8/B6MEBv+R4r/Za
NaK3s67vve22tDOaMie43lrWqcwWmPRicdTqwmhZbESt5vCc965fWnssvcx/
pzFIrHcaEyy96R3LLjPvPb+mYSPpYH6aYwZJXq9j9CX6HXu2QZSDFN4HfEfo
IDrIf6FxncoLHXfq2X22trLI1qr3B78/7PEz2m8yY9n2ivDOv0ZojJ8xnJLx
EGCfjrPcjHhzbNclfhZaP0a/Y0OH30g8aVzy+NPDr4GpFdcgxq5BI8Ov0eJ4
ifdYLJjWOrWTrd5zl6iq9cLdWwVeuBdTa7P0w0iW2Z6xenjHguDhSE4ffqTj
ev1AXg33GdLl0dwwuu7qSMJ4Hl0aV+35enKtdIMudX0jFeRRhVT049aleCuq
goesc7qSf+KChYaH+0WolyzHit1g5E88RQ5zWV6cJmiKF/ET7DWRdN10eUk+
Q3ajqfOvi9ImibaimGe9j+h35KhTb36aM0w9T02IxQ2ZRUl3nIGdQlHVUR7u
hW8AEmmDHey6I55rEjsb7Eh9Pvbb1Wa7Xo1VJcTDYjn1DPnFNlopVyY7Ryh9
yFYlVEuxKqvsc1L6T6SvQob0nm7pycyQ0jt6UsjUQytu3CQ1ubv0qGcvs8Xn
HDdYpNXmpQIn6Hdk9pXHO95VqxZG4RRPjK4FPudsvmKRVG0211old7ytOgVE
rimwukh7GOZYtZEZnqF6e7fGK+Lo8o1bRmFo6P+zKhCvu0iHTFKlMnXWeT14
fe53SZia0IVf4WhdUhPHk2WpCWdT+wc3XhNHiKzV2HWJG/RFPNKZ2JH0Bk+B
DNM82DmH7/5VE2sjOkhTICHWiDPShCx6esB/ZAz20yHP9+Fgf+C9ohJ8Rb9j
bR7B5ozkjnO2X7+Q3+g4iaVijknMJWuqaTJCmss7ywgcaUHXUfzna2kKiz1s
r5tRRi6Wx9rD6v3+vaairAHE2EwZLm9h+nAtP0k73GzVxvGkhkTpCqyK8PzI
sGSRS9xyU1nvi9Dw6X5d8FrqyEgxb3bnxOnmtV1+dVY36OQ+z/ZUo+wJpP/M
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
9VZTT3j/5/8Co06n6A==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"182ec736-0ac3-e342-b496-21af9ea45131"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position Vector for the ellipsoid can be defined as - ", "Section",
 CellChangeTimes->{{3.927386833439474*^9, 
  3.927386883220972*^9}},ExpressionUUID->"672e2cb0-7996-5643-a0eb-\
827f5a93ed74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vsph", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"R", "-", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
   RowBox[{"er", "[", 
    RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Eqn", ".", " ", "2"}], "d"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.927386886567675*^9, 3.927386916780527*^9}, {
  3.9323982028805084`*^9, 3.9323982082883816`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"795221b7-c001-2840-a048-3ac460d42f8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"R", "-", 
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
  RowBox[{"er", "[", 
   RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.9273869181530666`*^9, 3.9276229060340347`*^9, 3.92765152221834*^9, 
   3.9277144516264*^9, 3.927798242801134*^9, 3.927799097524061*^9, 
   3.9279741948721256`*^9, 3.92798409582436*^9, 3.9282593641611576`*^9, {
   3.92903019479216*^9, 3.929030207067421*^9}, 3.9290392335365944`*^9, 
   3.9290923354173336`*^9, 3.929094526384165*^9, 3.929109091021822*^9, {
   3.9294534304786434`*^9, 3.929453449714472*^9}, 3.929525575690838*^9, 
   3.9312602269783096`*^9, 3.9312604572472534`*^9, 3.9323995072506065`*^9, 
   3.932431898336361*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"fa56a0b7-be53-4747-b339-0cf54ed9c89b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"i", ",", " ", "j"}], "]"}], " ", "=", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Conjugate", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "i", ",", " ", "j", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"2", " ", "\[Epsilon]", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
           RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "i"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", "4"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "5"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.927397003774472*^9, 3.927397014591189*^9}, {
  3.9323987249591618`*^9, 3.9323987313157253`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"5bc728bc-4cf9-394a-acf8-1daa184e5644"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "3"], " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "R"}], "+", 
       RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["16", "3"]}], " ", 
      SqrtBox[
       FractionBox["\[Pi]", "5"]], " ", "\[Epsilon]"}], ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.927397020715788*^9, 3.927622912730774*^9, 3.927651529640165*^9, 
   3.927714458501278*^9, 3.927798249944788*^9, 3.927799104382424*^9, 
   3.927974202183616*^9, 3.927984101517231*^9, 3.9282593733634167`*^9, 
   3.9290302135906754`*^9, 3.929039240517081*^9, 3.9290923421908913`*^9, 
   3.92909453342721*^9, 3.929109097137743*^9, {3.929453437697574*^9, 
   3.929453455398235*^9}, 3.929525583136009*^9, 3.931260234535902*^9, 
   3.9323995132053013`*^9, 3.9324319034924335`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"18dd3353-e79e-8841-8b13-2c8301b15642"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normal Vector at surface of spheroid can be written as -", "Section",
 CellChangeTimes->{{3.927387581695189*^9, 3.927387605227198*^9}, {
  3.932431682512783*^9, 
  3.9324316839058704`*^9}},ExpressionUUID->"da6a49cf-1a4a-f649-af6f-\
587af444391d"],

Cell["\<\
This section does not contain any references for the equation in the notes as \
it is explained in more detail in the mathematica file - \
\[OpenCurlyDoubleQuote]Normal Vector to Surface of Spheroid.nb\
\[CloseCurlyDoubleQuote]. Please refer to this notebook file or Section B(b) \
of my notes. \
\>", "Text",
 CellChangeTimes->{{3.932431695729149*^9, 3.9324318284015446`*^9}, 
   3.932431930805071*^9},
 Background->GrayLevel[
  0.85],ExpressionUUID->"3050e69b-eaba-d648-8cae-5fe351779993"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vsph\[Theta]", "[", " ", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vsph", "[", " ", 
      RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", " ", 
     RowBox[{"{", "\[Theta]", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vsph\[Phi]", "[", " ", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vsph", "[", " ", 
      RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", " ", 
     RowBox[{"{", "\[Phi]", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finvsph\[Theta]", "[", " ", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"vsph\[Theta]", "[", 
      RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"er", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], ",", " ", 
       RowBox[{
        SuperscriptBox["er", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], ",", " ", 
       RowBox[{
        SuperscriptBox["er", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], "}"}], ",", " ", 
     "Simplify"}], "]"}], "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["er", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "->", 
      RowBox[{"e\[Theta]", "[", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["er", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "->", " ", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"e\[Phi]", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finvsph\[Phi]", "[", " ", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"vsph\[Phi]", "[", 
      RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"er", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], ",", " ", 
       RowBox[{
        SuperscriptBox["er", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], ",", " ", 
       RowBox[{
        SuperscriptBox["er", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], "}"}], ",", " ", 
     "Simplify"}], "]"}], "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["er", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "->", 
      RowBox[{"e\[Theta]", "[", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["er", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "->", " ", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"e\[Phi]", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}]}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.927387292407486*^9, 3.927387377622168*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"444a3934-2342-6e4c-8676-32ec9d58a83c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"R", "-", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"e\[Theta]", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], "+", 
  RowBox[{"2", " ", "\[Epsilon]", " ", 
   RowBox[{"er", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.927387350101202*^9, 3.927387383306381*^9, 3.927622916358415*^9, 
   3.927651532562022*^9, 3.92771471981106*^9, 3.927798257692377*^9, 
   3.927799105757595*^9, 3.92797420431394*^9, 3.927984101655257*^9, 
   3.9282593810217133`*^9, 3.929030213775165*^9, 3.9290392439952736`*^9, 
   3.929092345043028*^9, 3.9290945365799446`*^9, 3.9291091099865513`*^9, {
   3.929453437766592*^9, 3.9294534562472744`*^9}, 3.929525583353979*^9, 
   3.931260658283087*^9, 3.9323995137897396`*^9, 3.9324319038542213`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"bc1e2f93-b579-6847-a0f1-d396b8ffcdaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"R", "-", 
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
  RowBox[{"e\[Phi]", "[", 
   RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{
  3.927387350101202*^9, 3.927387383306381*^9, 3.927622916358415*^9, 
   3.927651532562022*^9, 3.92771471981106*^9, 3.927798257692377*^9, 
   3.927799105757595*^9, 3.92797420431394*^9, 3.927984101655257*^9, 
   3.9282593810217133`*^9, 3.929030213775165*^9, 3.9290392439952736`*^9, 
   3.929092345043028*^9, 3.9290945365799446`*^9, 3.9291091099865513`*^9, {
   3.929453437766592*^9, 3.9294534562472744`*^9}, 3.929525583353979*^9, 
   3.931260658283087*^9, 3.9323995137897396`*^9, 3.9324319038860836`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"2e2bf5e0-7176-3641-9dec-5237b89aaa43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"e\[Theta]", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"er", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e\[Phi]", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalvsph\[Theta]", "[", " ", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
  RowBox[{"finvsph\[Theta]", "[", " ", 
   RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalvsph\[Phi]", "[", " ", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
  RowBox[{"finvsph\[Phi]", "[", " ", 
   RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9273874120685616`*^9, 3.9273874378225*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"b8897f90-2d46-494f-8fa3-a7e42be1b080"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "\[Epsilon]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ",", 
   RowBox[{"R", "-", 
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.927387426338297*^9, 3.927387438740572*^9}, 
   3.92762291870632*^9, 3.927651536983869*^9, 3.927714722201166*^9, 
   3.927798263943865*^9, 3.927799107853863*^9, 3.927974207801374*^9, 
   3.927984102040667*^9, 3.928259385010391*^9, 3.929030216963461*^9, 
   3.929039245846939*^9, 3.92909234868203*^9, 3.929094538324055*^9, 
   3.9291091117756176`*^9, {3.9294534378356*^9, 3.929453458089907*^9}, 
   3.9295255834382052`*^9, 3.9312606609213657`*^9, 3.9323995187345867`*^9, 
   3.9324319054265537`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"1d3fbb61-2308-1e4a-afc2-b4d001dd8195"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"R", "-", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.927387426338297*^9, 3.927387438740572*^9}, 
   3.92762291870632*^9, 3.927651536983869*^9, 3.927714722201166*^9, 
   3.927798263943865*^9, 3.927799107853863*^9, 3.927974207801374*^9, 
   3.927984102040667*^9, 3.928259385010391*^9, 3.929030216963461*^9, 
   3.929039245846939*^9, 3.92909234868203*^9, 3.929094538324055*^9, 
   3.9291091117756176`*^9, {3.9294534378356*^9, 3.929453458089907*^9}, 
   3.9295255834382052`*^9, 3.9312606609213657`*^9, 3.9323995187345867`*^9, 
   3.9324319054265537`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"69f624d7-18cf-ff48-9392-550e50dc3906"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nvsph", "[", " ", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", " ", 
  RowBox[{"Cross", "[", 
   RowBox[{
    RowBox[{"finalvsph\[Theta]", "[", 
     RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", " ", 
    RowBox[{"finalvsph\[Phi]", "[", 
     RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nvsph", "[", " ", 
   RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.927387464682139*^9, 3.927387504210417*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"fe33ab7e-cc7b-8d46-8943-5ddb75dc56e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"R", "-", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{"4", " ", "\[Epsilon]", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "R"}], "+", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.927387495734421*^9, 3.927387505075072*^9}, 
   3.927622921114643*^9, 3.927651547640051*^9, 3.927714725135748*^9, 
   3.927798272557148*^9, 3.9277991099834805`*^9, 3.927974213352015*^9, 
   3.9279841045630264`*^9, 3.928259391111261*^9, 3.929030218822895*^9, 
   3.929039247805386*^9, 3.9290923509793854`*^9, 3.92909454055418*^9, 
   3.9291091137964725`*^9, 3.929453460095318*^9, 3.9295255854837513`*^9, 
   3.931260662763979*^9, 3.932399521976202*^9, 3.93243190764349*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"1ef062aa-acd6-da49-9afe-8f34003579bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nnvsph", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Refine", "[", 
    RowBox[{
     RowBox[{"Normalize", "[", 
      RowBox[{"nvsph", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"R", "-", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ">", "0"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.927624584390406*^9, 3.927624615177115*^9}, {
   3.927624680082955*^9, 3.927624722001156*^9}, {3.927631800048908*^9, 
   3.9276318036742744`*^9}, {3.927631858591193*^9, 3.927631886381769*^9}, {
   3.9276333341702423`*^9, 3.927633367312874*^9}, {3.927633643104273*^9, 
   3.927633669021019*^9}, {3.9276337996267576`*^9, 3.927633826514921*^9}, 
   3.927798301226115*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"cc682f8d-8c35-0246-a7a0-70607bde259a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"R", "-", 
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"16", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[Epsilon]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "R"}], "+", 
            RowBox[{"\[Epsilon]", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"R", "-", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", "\[Epsilon]", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"R", "-", 
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "R"}], "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"R", "-", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "4"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]]]}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9276338276712856`*^9, 3.927651552765018*^9, 
  3.927714727751683*^9, 3.927798278922287*^9, 3.927799113001999*^9, 
  3.927974219724268*^9, 3.927984107154337*^9, 3.929030220600317*^9, 
  3.929039249494285*^9, 3.929092353410759*^9, 3.929094542935416*^9, 
  3.92910911625169*^9, 3.929453462332512*^9, 3.9295255871606407`*^9, 
  3.9312606651548157`*^9, 3.932399525524618*^9, 3.932431909924198*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"eddcccc8-3f12-f849-99f0-c4a1275d526d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplified Normal vector without any prior assumptions -", "Subsection",
 CellChangeTimes->{{3.929031346101368*^9, 
  3.9290313612945366`*^9}},ExpressionUUID->"4a1f8d99-6751-f840-8f52-\
a55147154c7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplifiednormal", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", " ", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"R", "-", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"R", "-", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Epsilon]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]]], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "\[Epsilon]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"R", "-", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Epsilon]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]]]}], ",", "0"}], 
   "}"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "7"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.927633006671409*^9, 3.927633019822424*^9}, {
   3.9276330890781155`*^9, 3.927633090698057*^9}, {3.9276339369810905`*^9, 
   3.927633937983797*^9}, {3.927634119304304*^9, 3.927634176411598*^9}, {
   3.927634351130139*^9, 3.927634470052342*^9}, {3.927634652307129*^9, 
   3.927634761069901*^9}, 3.927976459737118*^9, {3.932399078029991*^9, 
   3.9323990822303658`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"ebc38827-15d2-da4c-8ac3-b243eb6ed82f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"R", "-", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"\[Epsilon]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Epsilon]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Epsilon]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"R", "-", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Epsilon]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]]]}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.927634160769427*^9, 3.927634241417883*^9, 
  3.92763476270549*^9, 3.927651556999368*^9, 3.9277147299822216`*^9, 
  3.927799012972311*^9, 3.927799129151137*^9, 3.9279764656010895`*^9, 
  3.927984110980131*^9, 3.9279890442455482`*^9, 3.928259658552143*^9, 
  3.9290302325056057`*^9, 3.929039267326404*^9, 3.9290923554737225`*^9, 
  3.929094545149838*^9, 3.9291091453971825`*^9, 3.9294534644069557`*^9, 
  3.929525589307247*^9, 3.9312607594869843`*^9, 3.932399529583273*^9, 
  3.9324319120311527`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"136a4428-a41c-e745-ad54-95dd2000aee7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Defining the Magnetic field ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "0"], TraditionalForm]],ExpressionUUID->
  "97d9b020-f5d8-1545-814c-22ae5cba2552"]
}], "Section",
 CellChangeTimes->{{3.9273877686357613`*^9, 
  3.927387787518061*^9}},ExpressionUUID->"af8a91aa-d57f-8b45-93aa-\
5f464e427855"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], " ", ")"}], "bz", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"(", 
         RowBox[{"z", "+", "dz"}], ")"}]}]}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "8"}], "d"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{"B", "[", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "9"}], "d"}], "*)"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BSpherical", "[", 
    RowBox[{"r_", ",", " ", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "z", ",", "er", ",", "etheta", ",", "ephi"}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"z", "=", 
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"er", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"etheta", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ephi", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], ".", "er"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], ".", "etheta"}], ")"}], 
        ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], ".", "ephi"}], ")"}]}], 
       "}"}]}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Eqn", ".", " ", "10"}], "d"}], " ", "-", " ", 
    RowBox[{"13", "d"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0Spherical", "[", 
   RowBox[{"r_", ",", " ", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"BSpherical", "[", 
    RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"B0Spherical", "[", 
  RowBox[{"r", ",", " ", "\[Theta]", ",", "\[Phi]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.927393031217846*^9, 3.927393040003927*^9}, {
  3.92739460276772*^9, 3.927394605891775*^9}, {3.932399475547247*^9, 
  3.9323994962339573`*^9}, {3.9324003685565376`*^9, 3.9324003827451496`*^9}, {
  3.932401289627905*^9, 3.9324012912618103`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"6e192480-3ec4-ae4a-b6ae-381274f6027b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.927387883414967*^9, 3.92739304137647*^9, 
  3.92739460686324*^9, 3.927622923114298*^9, 3.927634777746109*^9, 
  3.927651562124336*^9, 3.92771474106688*^9, 3.927798833287239*^9, 
  3.927799132286995*^9, 3.927882262850436*^9, 3.927976468921179*^9, 
  3.9279841180836315`*^9, 3.928259709721613*^9, 3.929030262826069*^9, 
  3.92903926964818*^9, 3.929092358794007*^9, 3.92909454776519*^9, 
  3.9291091587037354`*^9, 3.929453467007515*^9, 3.929525591586714*^9, 
  3.9312607629807663`*^9, 3.932399533455059*^9, 3.932431950026943*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"fc4831b6-e5d6-1547-a6d6-c75fc02b3d57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], " ", "bz", " ", 
    RowBox[{"(", 
     RowBox[{"r", "+", 
      RowBox[{"4", " ", "dz", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"3", " ", "r", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", "bz", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "dz"}], "+", 
      RowBox[{"3", " ", "r", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.927387883414967*^9, 3.92739304137647*^9, 
  3.92739460686324*^9, 3.927622923114298*^9, 3.927634777746109*^9, 
  3.927651562124336*^9, 3.92771474106688*^9, 3.927798833287239*^9, 
  3.927799132286995*^9, 3.927882262850436*^9, 3.927976468921179*^9, 
  3.9279841180836315`*^9, 3.928259709721613*^9, 3.929030262826069*^9, 
  3.92903926964818*^9, 3.929092358794007*^9, 3.92909454776519*^9, 
  3.9291091587037354`*^9, 3.929453467007515*^9, 3.929525591586714*^9, 
  3.9312607629807663`*^9, 3.932399533455059*^9, 3.932431950081341*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"13f86e84-ed29-f64d-a473-b0efcafe849e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Boundary Condition - ", "Section",
 CellChangeTimes->{{3.927387939761757*^9, 
  3.927387960330658*^9}},ExpressionUUID->"91e0d645-2f33-4441-9d76-\
612b6d380260"],

Cell[TextData[{
 StyleBox["We define the boundary condition as ",
  FontColor->RGBColor[
   0.0784313725490196, 0.0392156862745098, 0.4627450980392157]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["B", "out"], "(", 
      RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], ")"}], " ", 
     ".", " ", 
     RowBox[{"n", "(", 
      RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], ")"}]}], " ", "=", " ", "0"}],
    TraditionalForm]],
  FontColor->RGBColor[
   0.0784313725490196, 0.0392156862745098, 0.4627450980392157],ExpressionUUID->
  "9cebd534-d738-184b-9020-d0903a1af585"],
 StyleBox["\nThis equation can further be broken into left hand side (lhs) \
and right hand side (rhs) which should be equal to zero at surface of the \
spheroid. \nLHS  = ",
  FontColor->RGBColor[
   0.0784313725490196, 0.0392156862745098, 0.4627450980392157]],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SubscriptBox["B", "0"], "(", 
      RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], ")"}], " ", 
     ".", " ", 
     RowBox[{"n", "(", 
      RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], ")"}]}]}], TraditionalForm]],
  FontColor->RGBColor[
   0.0784313725490196, 0.0392156862745098, 0.4627450980392157],ExpressionUUID->
  "4052cafd-7421-744c-9a1b-3f7f01d7b8a5"],
 StyleBox["\nRHS  = ",
  FontColor->RGBColor[
   0.0784313725490196, 0.0392156862745098, 0.4627450980392157]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Grad", "[", 
     RowBox[{"\[CapitalPhi]", "(", 
      RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], ")"}], "]"}], 
    " ", ".", " ", 
    RowBox[{"n", "(", 
     RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], ")"}]}], TraditionalForm]],
  FontColor->RGBColor[
   0.0784313725490196, 0.0392156862745098, 0.4627450980392157],ExpressionUUID->
  "ce42cf62-7fd3-b64b-b81f-87ee604baba4"]
}], "Text",
 CellChangeTimes->{{3.927388008460728*^9, 3.9273880314228935`*^9}, {
  3.927388104366785*^9, 3.927388322280838*^9}, {3.932382894389759*^9, 
  3.9323829637095966`*^9}},ExpressionUUID->"ee43cfec-4975-dd46-b003-\
f1c2a7580184"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Calculating the left hand side of Boundary Condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["B", "0"], "(", 
     RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], ")"}], ".", 
    RowBox[{"n", "(", 
     RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"a574a876-8670-9d4f-a127-db25f45bf92f"]
}], "Section",
 CellChangeTimes->{{3.927387916815232*^9, 3.9273879334134007`*^9}, {
  3.92738797904352*^9, 
  3.927387998264358*^9}},ExpressionUUID->"34f2c4ef-c3ef-0742-a4a6-\
abf3db354404"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LhsBCvsph", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", " ", 
  RowBox[{
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"B0Spherical", "[", 
      RowBox[{
       RowBox[{"rSpheroid", "[", "\[Theta]", "]"}], ",", "\[Theta]", ",", " ",
        "\[Phi]"}], "]"}], ",", " ", 
     RowBox[{"Simplifiednormal", "[", 
      RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "->", 
     RowBox[{"R", " ", "s"}]}], "}"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Eqn", ".", " ", "14"}], "d"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.9273884158873215`*^9, 3.927388523566035*^9}, {
  3.927389305822031*^9, 3.927389312725099*^9}, {3.927389374376051*^9, 
  3.9273893810785656`*^9}, {3.927389431958868*^9, 3.927389556463471*^9}, {
  3.9276250892948303`*^9, 3.927625095102661*^9}, {3.927631751957077*^9, 
  3.927631757387324*^9}, {3.927634787641686*^9, 3.927634827348749*^9}, {
  3.927634877051638*^9, 3.927634886840485*^9}, {3.929030439945474*^9, 
  3.9290304654856434`*^9}, {3.932401805418516*^9, 3.9324018104525642`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"b6fe085b-2262-9843-bb36-4c416b8ab3d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"bz", " ", 
     RowBox[{"(", 
      RowBox[{"R", "-", 
       RowBox[{"R", " ", "s", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "dz", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"R", "-", 
          RowBox[{"R", " ", "s", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"R", "-", 
          RowBox[{"R", " ", "s", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]]}]]}], "-", 
  FractionBox[
   RowBox[{"bz", " ", "R", " ", "s", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"8", " ", "dz", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"6", " ", "R", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"3", " ", "R", " ", "s", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]]}]]}]], "Output",
 CellChangeTimes->{
  3.927635078418871*^9, 3.927651570671152*^9, 3.927714746701189*^9, 
   3.927799139212567*^9, 3.927976490682677*^9, 3.927984158955551*^9, 
   3.9282597496818676`*^9, 3.9290302906128902`*^9, {3.929030448732262*^9, 
   3.929030466256548*^9}, 3.92903928356929*^9, 3.9290923768210087`*^9, 
   3.929094557525107*^9, 3.929109281800551*^9, 3.9312607818306866`*^9, 
   3.9324018221248913`*^9, 3.932431955091213*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"36af7af0-ac8f-074c-a46c-b99f9fd280a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simplifying the LHS by Taylor Expanding it w.r.t s about 0, up to first order:\
\>", "Subsection",
 CellChangeTimes->{{3.932432756718052*^9, 
  3.9324327875858917`*^9}},ExpressionUUID->"fc7773b7-e5aa-5945-aff9-\
5eb83379dfd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AppLHSBCvsph", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Refine", "[", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"LhsBCvsph", "[", 
         RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"s", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"R", ">", "0"}], "}"}]}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "15"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.929030640591236*^9, 3.9290307395171432`*^9}, {
  3.932402153877739*^9, 3.932402159778799*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c73ce59b-af54-7147-8512-35cfa5b44307"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", "bz", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "R"}], "-", 
    RowBox[{"3", " ", "R", " ", "s"}], "-", 
    RowBox[{"8", " ", "dz", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "s"}], ")"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"2", " ", "R", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "s"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"8", " ", "dz", " ", "s", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"9", " ", "R", " ", "s", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.9290307009623*^9, 3.929030740387242*^9}, 
   3.92903928707204*^9, 3.929092380946337*^9, 3.92909455809507*^9, 
   3.9291092939379845`*^9, 3.931260822123476*^9, 3.9324021656856956`*^9, 
   3.9324319592442245`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e63c6c5a-3839-b345-a5c8-a30a82e6dbf2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verifying whether it can be expressed as expansion of Spherical Harmonics or \
not: Passed\
\>", "Subsection",
 CellChangeTimes->{{3.932432638815943*^9, 
  3.9324326720195656`*^9}},ExpressionUUID->"412d8c94-202c-7248-bbe6-\
c55dadf73dde"],

Cell["\<\
As the integration of the below expression is finite, which confirms that it \
can be expressed as Spherical harmonics expansion terms \
\>", "Text",
 CellChangeTimes->{{3.932432678092802*^9, 3.932432714299383*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"851d95b2-1f13-5c42-8b69-0cc0db8b602e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AppLHSBCvsph", "[", 
     RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9324325997018375`*^9, 3.932432624891474*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"47c15e8f-36c0-d34b-8b00-76417f5428d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["32", "15"]}], " ", "bz", " ", "\[Pi]", " ", "R", " ", 
  "s"}]], "Output",
 CellChangeTimes->{3.932432625519476*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"68b7f8f1-e97a-eb47-a494-9860c2817ec0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coefficients of LHS: ", "Subsection",
 CellChangeTimes->{{3.932432741270527*^9, 
  3.932432746337679*^9}},ExpressionUUID->"8f448007-62a9-1d47-8329-\
f2dc5f7515bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"l", ",", " ", "k"}], "]"}], " ", "=", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Conjugate", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "l", ",", " ", "k", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}], 
          RowBox[{"AppLHSBCvsph", "[", 
           RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
           RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"k", ",", " ", "0", ",", " ", "l"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", " ", "0", ",", " ", "5"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Eqn", ".", " ", "16"}], "d"}], " ", "-", " ", 
    RowBox[{"17", "d"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.92903078029891*^9, 3.929030801394991*^9}, {
  3.9324325473015804`*^9, 3.9324325560121536`*^9}, {3.932432849653738*^9, 
  3.9324328511569786`*^9}},ExpressionUUID->"cdd738a9-3dff-0140-9e13-\
5f355a54fd3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["16", "15"]}], " ", "bz", " ", 
     SqrtBox["\[Pi]"], " ", "R", " ", "s"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "5"]}], " ", "bz", " ", "dz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "3"]], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"8", " ", "s"}]}], ")"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "21"]}], " ", "bz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "5"]], " ", "R", " ", 
      RowBox[{"(", 
       RowBox[{"21", "+", 
        RowBox[{"11", " ", "s"}]}], ")"}]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["16", "5"], " ", "bz", " ", "dz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "7"]], " ", "s"}], ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["48", "35"], " ", "bz", " ", 
      SqrtBox["\[Pi]"], " ", "R", " ", "s"}], ",", "0", ",", "0", ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.929030788876416*^9, 3.9290308233627434`*^9, 
  3.929039308534067*^9, 3.929092404088125*^9, 3.929094576726036*^9, 
  3.9291093198700027`*^9, 3.9312608445976715`*^9, 3.932431984698248*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"dbb9e816-5380-af44-a495-25c001ef7b0b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verifying that all non zero coefficients are included: ", "Subsection",
 CellChangeTimes->{{3.932432003143255*^9, 
  3.932432030525402*^9}},ExpressionUUID->"9164f1d2-af2a-334d-a17c-\
d4a42b7bbfed"],

Cell["\<\
We can observe that the limit of k is from 0 to 0 meaning, that k = 0 are the \
only non zero coefficients with varying l. \
\>", "Text",
 CellChangeTimes->{{3.9324321751548424`*^9, 
  3.9324322218327847`*^9}},ExpressionUUID->"c891cdd3-cdd0-be45-b8e2-\
6265e257718a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", 
         RowBox[{"l", ",", "k"}], "]"}], 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{
         "l", ",", " ", "k", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "0", ",", " ", "5"}], "}"}]}], "]"}], "-", 
   RowBox[{"AppLHSBCvsph", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92739278080492*^9, 3.927392782030312*^9}, {
   3.927392859817091*^9, 3.92739286597136*^9}, 3.927635345233994*^9, 
   3.927635391906809*^9, {3.932432039676094*^9, 3.9324321662188606`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"9a66e88c-39b4-2a49-b4bf-c11b7f843163"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.9324321408516216`*^9, 3.932432166753498*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"3efabe2d-9615-3e4a-ad7f-c2b3ad77c969"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Grad Phi term Calculation - Defining the induced magnetic field \
\>", "Section",
 CellChangeTimes->{{3.927389857980013*^9, 3.92738987452174*^9}, {
  3.927389927781174*^9, 3.927389931930067*^9}, {3.9277166243583813`*^9, 
  3.927716639477829*^9}},ExpressionUUID->"6b3e73a3-7469-324e-b3f5-\
a4d085dcb671"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PhiOut", "[", 
   RowBox[{"r_", ",", "\[Theta]_", ",", "\[Phi]_", ",", " ", "Nmax_"}], "]"}],
   ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "^", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}]}]}], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"n", ",", "m"}], "]"}], "*", " ", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{
         "n", ",", " ", "m", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "Nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiOut", "[", 
   RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]", ",", " ", "Nmax"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "17"}], "d"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.92738994813148*^9, 3.927389959846274*^9}, 
   3.927389996275898*^9, {3.92739005170777*^9, 3.927390081287567*^9}, {
   3.9276228490532265`*^9, 3.927622849260718*^9}, {3.927623167307806*^9, 
   3.927623168161833*^9}, {3.9276235199839497`*^9, 3.927623525173956*^9}, {
   3.927623627214119*^9, 3.927623658101845*^9}, {3.927623829420435*^9, 
   3.927623831922714*^9}, {3.927623868667862*^9, 3.9276238692267914`*^9}, {
   3.9276354570350094`*^9, 3.927635459927229*^9}, {3.92903163552602*^9, 
   3.92903164359214*^9}, {3.9324332927363224`*^9, 3.932433298590557*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"878450fd-2264-864d-bfa0-262c80273174"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "0"}], "Nmax"], 
  RowBox[{
   SuperscriptBox["r", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "n"}]], " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"m", "=", 
      RowBox[{"-", "n"}]}], "n"], 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"n", ",", "m"}], "]"}], " ", 
     RowBox[{"SphericalHarmonicY", "[", 
      RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
      "]"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.929031645369597*^9, 3.929031757641992*^9, 
  3.929039316348156*^9, 3.9290924090353107`*^9, 3.929094581522066*^9, 
  3.929109324519766*^9, 3.931260855780575*^9, 3.9324333107801*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"b75f3d2a-6f21-ed48-80d7-65edc4f0d9e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Taking the gradient of induced magnetic field in spherical coordinates \
\>", "Subsubsection",
 CellChangeTimes->{{3.927623672838272*^9, 3.9276236923560905`*^9}, {
   3.927623769892391*^9, 3.927623781571284*^9}, 3.927623825650326*^9, 
   3.927716535256363*^9, {3.927716642294697*^9, 
   3.927716663261454*^9}},ExpressionUUID->"d374c2e8-85cf-2245-9c29-\
50ab9828394f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gradph", "[", 
   RowBox[{
   "r_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_", ",", " ", "Nmax_"}], 
   "]"}], " ", "=", " ", 
  RowBox[{"Grad", "[", 
   RowBox[{
    RowBox[{"PhiOut", "[", 
     RowBox[{
     "r", ",", " ", "\[Theta]", ",", " ", "\[Phi]", ",", " ", "Nmax"}], "]"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "}"}], ",", 
    " ", "\"\<Spherical\>\""}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "5"}], 
    RowBox[{"c", "/", " ", "18"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.932433514105221*^9, 3.932433523595709*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"4f411454-1b77-6e4b-a900-1f87a8888810"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "0"}], "Nmax"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", 
         RowBox[{
          RowBox[{"-", "2"}], "-", "n"}]]}], "-", 
       RowBox[{"n", " ", 
        SuperscriptBox["r", 
         RowBox[{
          RowBox[{"-", "2"}], "-", "n"}]]}]}], ")"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", 
        RowBox[{"-", "n"}]}], "n"], 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"n", ",", "m"}], "]"}], " ", 
       RowBox[{"SphericalHarmonicY", "[", 
        RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
        "]"}]}]}]}]}], ",", 
   FractionBox[
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "0"}], "Nmax"], 
     RowBox[{
      SuperscriptBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "-", "n"}]], " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", 
         RowBox[{"-", "n"}]}], "n"], 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"n", ",", "m"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", 
           RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
          "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
            SqrtBox[
             RowBox[{"Gamma", "[", 
              RowBox[{"1", "-", "m", "+", "n"}], "]"}]], " ", 
            SqrtBox[
             RowBox[{"Gamma", "[", 
              RowBox[{"2", "+", "m", "+", "n"}], "]"}]], " ", 
            RowBox[{"SphericalHarmonicY", "[", 
             RowBox[{"n", ",", 
              RowBox[{"1", "+", "m"}], ",", "\[Theta]", ",", "\[Phi]"}], 
             "]"}]}], 
           RowBox[{
            SqrtBox[
             RowBox[{"Gamma", "[", 
              RowBox[{
               RowBox[{"-", "m"}], "+", "n"}], "]"}]], " ", 
            SqrtBox[
             RowBox[{"Gamma", "[", 
              RowBox[{"1", "+", "m", "+", "n"}], "]"}]]}]]}], ")"}]}]}]}]}], 
    "r"], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       SuperscriptBox["r", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "n"}]], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "n"}]}], "n"], 
        RowBox[{"\[ImaginaryI]", " ", "m", " ", 
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "m"}], "]"}], " ", 
         RowBox[{"SphericalHarmonicY", "[", 
          RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
          "]"}]}]}]}]}]}], "r"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.927390092823582*^9, 3.927390122864634*^9, 3.927623212798647*^9, 
   3.927623554578377*^9, {3.927623636175201*^9, 3.927623661786904*^9}, 
   3.92762378831266*^9, 3.927623835471916*^9, 3.927623879139641*^9, 
   3.927627360491802*^9, 3.927635467008671*^9, 3.9276516420300694`*^9, 
   3.927716069581759*^9, 3.9278085020141335`*^9, 3.927976943500674*^9, 
   3.927987694502379*^9, 3.928260042839466*^9, 3.929031490251646*^9, 
   3.92903159724133*^9, 3.929031648371084*^9, 3.9290317590330296`*^9, 
   3.929039338712908*^9, 3.9290924285883293`*^9, 3.92909460144409*^9, 
   3.929109344020907*^9, 3.931260875093073*^9, 3.9324335424031773`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"d097fe73-20c3-5f44-ac1a-ee30ccea3c8a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating the RHS part of the BC -", "Section",
 CellChangeTimes->{{3.929031978445183*^9, 
  3.929031990737196*^9}},ExpressionUUID->"9066ff06-202b-1949-bfde-\
4ce00b8a0938"],

Cell["\<\
Taking the dot product of Grad PHI and normalized normal vector which forms \
the right hand side of the calculation\
\>", "Text",
 CellChangeTimes->{{3.927623697982361*^9, 3.927623714314339*^9}, 
   3.9276238176654186`*^9, {3.927716670209835*^9, 3.9277167178006353`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"fe678794-55a0-9245-9f6a-aa4e69cbe071"],

Cell["\<\
The below three equations are both the combinations of equation 19d - 20d of \
my notes. \
\>", "Text",
 CellChangeTimes->{{3.932435528903862*^9, 3.932435558773554*^9}, {
  3.9324355968928776`*^9, 3.932435598303276*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"c8a6d525-9712-5e40-bc95-a17196e957be"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9324355226986885`*^9, 
  3.932435524272047*^9}},ExpressionUUID->"7c2460ab-5219-bd4c-998b-\
4f5f41c38af4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rhsbcvsph", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_", ",", " ", "Nmax_"}], "]"}], "=", 
  " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"gradph", "[", 
      RowBox[{
       RowBox[{"rSpheroid", "[", "\[Theta]", "]"}], ",", " ", "\[Theta]", ",",
        " ", "\[Phi]", ",", " ", "Nmax"}], "]"}], ",", " ", 
     RowBox[{"Simplifiednormal", "[", 
      RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Eqn", ".", " ", "19"}], "d"}], "-", 
    RowBox[{"20", "d"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.927390154565912*^9, 3.927390254319981*^9}, {
  3.927390320198056*^9, 3.9273903335497017`*^9}, {3.927635477722044*^9, 
  3.927635497374609*^9}, {3.9324358339569683`*^9, 
  3.932435841174135*^9}},ExpressionUUID->"024e16b1-c0ba-6d40-ad56-\
87dd925e5c59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"R", "-", 
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "2"}], "-", "n"}]]}], "-", 
         RowBox[{"n", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "2"}], "-", "n"}]]}]}], ")"}], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "n"}]}], "n"], 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "m"}], "]"}], " ", 
         RowBox[{"SphericalHarmonicY", "[", 
          RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
          "]"}]}]}]}]}]}], "-", 
    RowBox[{"2", " ", "\[Epsilon]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"R", "-", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
        RowBox[{
         RowBox[{"-", "1"}], "-", "n"}]], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "n"}]}], "n"], 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "m"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m", " ", 
            RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"SphericalHarmonicY", "[", 
             RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}],
            "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"1", "-", "m", "+", "n"}], "]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"2", "+", "m", "+", "n"}], "]"}]], " ", 
             RowBox[{"SphericalHarmonicY", "[", 
              RowBox[{"n", ",", 
               RowBox[{"1", "+", "m"}], ",", "\[Theta]", ",", "\[Phi]"}], 
              "]"}]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{
                RowBox[{"-", "m"}], "+", "n"}], "]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"1", "+", "m", "+", "n"}], "]"}]]}]]}], 
          ")"}]}]}]}]}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"R", "-", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"\[Epsilon]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Epsilon]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.927390889824978*^9, 3.92762325081958*^9, 
  3.927623576829857*^9, 3.927623843738069*^9, 3.927623887791363*^9, 
  3.927627380576866*^9, 3.927635500905184*^9, 3.927636097409493*^9, 
  3.927651645186301*^9, 3.927716086312969*^9, 3.927808514915367*^9, 
  3.927977714472569*^9, 3.927987700101486*^9, 3.928260127383402*^9, 
  3.9290317343817234`*^9, 3.929031766629444*^9, 3.92903934539292*^9, 
  3.929092431724214*^9, 3.929094604647129*^9, 3.929109347227818*^9, 
  3.9312608782348595`*^9, 3.932433544257986*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"9a2d5759-e224-6046-bd1e-70607dfb7c7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simplifying the above equation by cancelling (R-\[Epsilon] Cos[2 \[Theta]]) \
from numerator and denominator\
\>", "Subsubsection",
 CellChangeTimes->{{3.927716802922428*^9, 
  3.927716849529757*^9}},ExpressionUUID->"82efac36-a1d8-4041-9b6d-\
79cb3913af79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SimplifiedRhsBC", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_", ",", " ", "Nmax_"}], "]"}], "=", 
  " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"R", "-", 
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "0"}], "Nmax"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"R", "-", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
            RowBox[{
             RowBox[{"-", "2"}], "-", "n"}]]}], "-", 
          RowBox[{"n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"R", "-", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
            RowBox[{
             RowBox[{"-", "2"}], "-", "n"}]]}]}], ")"}], " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"m", "=", 
           RowBox[{"-", "n"}]}], "n"], 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"n", ",", "m"}], "]"}], " ", 
          RowBox[{"SphericalHarmonicY", "[", 
           RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
           "]"}]}]}]}]}]}], "-", 
     RowBox[{"4", " ", "\[Epsilon]", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "0"}], "Nmax"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"R", "-", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"-", "2"}], "-", "n"}]], " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"m", "=", 
           RowBox[{"-", "n"}]}], "n"], 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"n", ",", "m"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"m", " ", 
             RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"SphericalHarmonicY", "[", 
              RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
              "]"}]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
              SqrtBox[
               RowBox[{"Gamma", "[", 
                RowBox[{"1", "-", "m", "+", "n"}], "]"}]], " ", 
              SqrtBox[
               RowBox[{"Gamma", "[", 
                RowBox[{"2", "+", "m", "+", "n"}], "]"}]], " ", 
              RowBox[{"SphericalHarmonicY", "[", 
               RowBox[{"n", ",", 
                RowBox[{"1", "+", "m"}], ",", "\[Theta]", ",", "\[Phi]"}], 
               "]"}]}], 
             RowBox[{
              SqrtBox[
               RowBox[{"Gamma", "[", 
                RowBox[{
                 RowBox[{"-", "m"}], "+", "n"}], "]"}]], " ", 
              SqrtBox[
               RowBox[{"Gamma", "[", 
                RowBox[{"1", "+", "m", "+", "n"}], "]"}]]}]]}], 
           ")"}]}]}]}]}]}]}], ")"}], "/", 
   RowBox[{"(", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"\[Epsilon]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Epsilon]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], ")"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Eqn", ".", " ", "19"}], "d"}], "-", 
     RowBox[{"20", "d"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.927636205197359*^9, 3.927636257770542*^9}, 
   3.927636323009054*^9, 
   3.932435856081068*^9},ExpressionUUID->"4a8f1042-ad84-0d45-96f9-\
d2fad90bd22a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"R", "-", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "2"}], "-", "n"}]]}], "-", 
         RowBox[{"n", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "2"}], "-", "n"}]]}]}], ")"}], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "n"}]}], "n"], 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "m"}], "]"}], " ", 
         RowBox[{"SphericalHarmonicY", "[", 
          RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
          "]"}]}]}]}]}]}], "-", 
    RowBox[{"4", " ", "\[Epsilon]", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"R", "-", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
        RowBox[{
         RowBox[{"-", "2"}], "-", "n"}]], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "n"}]}], "n"], 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "m"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m", " ", 
            RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"SphericalHarmonicY", "[", 
             RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}],
            "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"1", "-", "m", "+", "n"}], "]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"2", "+", "m", "+", "n"}], "]"}]], " ", 
             RowBox[{"SphericalHarmonicY", "[", 
              RowBox[{"n", ",", 
               RowBox[{"1", "+", "m"}], ",", "\[Theta]", ",", "\[Phi]"}], 
              "]"}]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{
                RowBox[{"-", "m"}], "+", "n"}], "]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"1", "+", "m", "+", "n"}], "]"}]]}]]}], 
          ")"}]}]}]}]}]}]}], ")"}], "/", 
  RowBox[{"(", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"R", "-", 
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Epsilon]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], ")"}]}]], "Output",
 CellChangeTimes->{3.929032049748852*^9, 3.92903934815358*^9, 
  3.9290924317913837`*^9, 3.9290946047311516`*^9, 3.929109347297327*^9, 
  3.9312609356050777`*^9, 3.932435582731825*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"0bdd12db-b628-5146-9af8-abc0cf7018c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simplifying it by multiplying the remaining (R-\[Epsilon] Cos[2 \[Theta]]) in \
the first part of the above expression \
\>", "Subsection",
 CellChangeTimes->{{3.9290320186080837`*^9, 3.929032031067808*^9}, {
  3.9290320633826447`*^9, 
  3.92903208507403*^9}},ExpressionUUID->"315f6735-7016-314f-825d-\
bac18f8f9c84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"moreSimplifiedRhsBC", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_", ",", " ", "Nmax_"}], "]"}], " ", 
  "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "0"}], "Nmax"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"R", "-", 
               RowBox[{"\[Epsilon]", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
           RowBox[{"n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"R", "-", 
               RowBox[{"\[Epsilon]", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"m", "=", 
            RowBox[{"-", "n"}]}], "n"], 
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"n", ",", "m"}], "]"}], " ", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
            "]"}]}]}]}]}], "-", 
       RowBox[{"4", " ", "\[Epsilon]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "0"}], "Nmax"], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "2"}], "-", "n"}]], " ", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"m", "=", 
             RowBox[{"-", "n"}]}], "n"], 
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{"n", ",", "m"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", " ", 
               RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"SphericalHarmonicY", "[", 
                RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
                "]"}]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
                SqrtBox[
                 RowBox[{"Gamma", "[", 
                  RowBox[{"1", "-", "m", "+", "n"}], "]"}]], " ", 
                SqrtBox[
                 RowBox[{"Gamma", "[", 
                  RowBox[{"2", "+", "m", "+", "n"}], "]"}]], " ", 
                RowBox[{"SphericalHarmonicY", "[", 
                 RowBox[{"n", ",", 
                  RowBox[{"1", "+", "m"}], ",", "\[Theta]", ",", "\[Phi]"}], 
                 "]"}]}], 
               RowBox[{
                SqrtBox[
                 RowBox[{"Gamma", "[", 
                  RowBox[{
                   RowBox[{"-", "m"}], "+", "n"}], "]"}]], " ", 
                SqrtBox[
                 RowBox[{"Gamma", "[", 
                  RowBox[{"1", "+", "m", "+", "n"}], "]"}]]}]]}], 
             ")"}]}]}]}]}]}]}], ")"}], "/", 
     RowBox[{"(", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"R", "-", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Epsilon]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], ")"}]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "->", 
     RowBox[{"R", " ", "s"}]}], "}"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Eqn", ".", " ", "19"}], "d"}], "-", 
     RowBox[{"20", "d"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.927810262349556*^9, 3.927810296633345*^9}, {
   3.92903183219841*^9, 3.9290318681692696`*^9}, 
   3.932435859836664*^9},ExpressionUUID->"5dcaa75b-77c0-384a-a3d8-\
7bf0e53b2002"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "0"}], "Nmax"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"R", " ", "s", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"R", " ", "s", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", 
         RowBox[{"-", "n"}]}], "n"], 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"n", ",", "m"}], "]"}], " ", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
         "]"}]}]}]}]}], "-", 
    RowBox[{"4", " ", "R", " ", "s", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"R", "-", 
          RowBox[{"R", " ", "s", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
        RowBox[{
         RowBox[{"-", "2"}], "-", "n"}]], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", 
          RowBox[{"-", "n"}]}], "n"], 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "m"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m", " ", 
            RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"SphericalHarmonicY", "[", 
             RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}],
            "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"1", "-", "m", "+", "n"}], "]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"2", "+", "m", "+", "n"}], "]"}]], " ", 
             RowBox[{"SphericalHarmonicY", "[", 
              RowBox[{"n", ",", 
               RowBox[{"1", "+", "m"}], ",", "\[Theta]", ",", "\[Phi]"}], 
              "]"}]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{
                RowBox[{"-", "m"}], "+", "n"}], "]"}]], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"1", "+", "m", "+", "n"}], "]"}]]}]]}], 
          ")"}]}]}]}]}]}]}], ")"}], "/", 
  RowBox[{"(", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"R", "-", 
        RowBox[{"R", " ", "s", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["R", "2"], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], ")"}]}]], "Output",
 CellChangeTimes->{
  3.927810337441044*^9, 3.9279777539962616`*^9, 3.927987731100369*^9, 
   3.928260204275614*^9, {3.9290318194703045`*^9, 3.929031873518156*^9}, 
   3.929039351963821*^9, 3.929092431858559*^9, 3.92909460478146*^9, 
   3.929109347359825*^9, 3.9312609526040993`*^9, 3.9324356056604576`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"b637381c-f5d5-1944-949e-7627d3506895"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Taking m=0 because of the azimuthal symmetry ", "Subsection",
 CellChangeTimes->{
  3.9290367492518406`*^9},ExpressionUUID->"ce414152-a170-ba40-ad6d-\
260815e6844a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AppRHSBC", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_", ",", " ", "Nmax_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"R", " ", "s", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
         RowBox[{"n", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"R", " ", "s", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "0"}], "0"], 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "m"}], "]"}], " ", 
         RowBox[{"SphericalHarmonicY", "[", 
          RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
          "]"}]}]}]}]}], "-", 
     RowBox[{"4", " ", "R", " ", "s", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "0"}], "Nmax"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"R", "-", 
           RowBox[{"R", " ", "s", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"-", "2"}], "-", "n"}]], " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"m", "=", "0"}], "0"], 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"n", ",", "m"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"m", " ", 
             RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"SphericalHarmonicY", "[", 
              RowBox[{"n", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], 
              "]"}]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
              SqrtBox[
               RowBox[{"Gamma", "[", 
                RowBox[{"1", "-", "m", "+", "n"}], "]"}]], " ", 
              SqrtBox[
               RowBox[{"Gamma", "[", 
                RowBox[{"2", "+", "m", "+", "n"}], "]"}]], " ", 
              RowBox[{"SphericalHarmonicY", "[", 
               RowBox[{"n", ",", 
                RowBox[{"1", "+", "m"}], ",", "\[Theta]", ",", "\[Phi]"}], 
               "]"}]}], 
             RowBox[{
              SqrtBox[
               RowBox[{"Gamma", "[", 
                RowBox[{
                 RowBox[{"-", "m"}], "+", "n"}], "]"}]], " ", 
              SqrtBox[
               RowBox[{"Gamma", "[", 
                RowBox[{"1", "+", "m", "+", "n"}], "]"}]]}]]}], 
           ")"}]}]}]}]}]}]}], ")"}], "/", 
   RowBox[{"(", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], ")"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Eqn", ".", " ", "21"}], "d"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.929036542900593*^9, 3.929036599152645*^9}, {
  3.932437858478693*^9, 3.932437869712494*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"f417457c-b8f7-ac4c-bf8b-b496fd2db344"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "0"}], "Nmax"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"R", " ", "s", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"R", " ", "s", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
      RowBox[{"g", "[", 
       RowBox[{"n", ",", "0"}], "]"}], " ", 
      RowBox[{"SphericalHarmonicY", "[", 
       RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]}], 
    "-", 
    RowBox[{"4", " ", "R", " ", "s", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"R", "-", 
           RowBox[{"R", " ", "s", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"-", "2"}], "-", "n"}]], " ", 
        RowBox[{"g", "[", 
         RowBox[{"n", ",", "0"}], "]"}], " ", 
        SqrtBox[
         RowBox[{"Gamma", "[", 
          RowBox[{"2", "+", "n"}], "]"}]], " ", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"n", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SqrtBox[
        RowBox[{"Gamma", "[", "n", "]"}]]]}]}]}], ")"}], "/", 
  RowBox[{"(", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"R", "-", 
        RowBox[{"R", " ", "s", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["R", "2"], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], ")"}]}]], "Output",
 CellChangeTimes->{3.9290366035802364`*^9, 3.929039356955145*^9, 
  3.929092431992697*^9, 3.9290946049154625`*^9, 3.92910934748222*^9, 
  3.9312609646521187`*^9, 3.932440682444004*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"623a0398-067b-284b-9be5-97fb9e878958"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplifying the expression using taylor series expansion:", "Subsection",
 CellChangeTimes->{{3.9324416308092117`*^9, 
  3.9324416521485386`*^9}},ExpressionUUID->"12ad0bf8-edc9-f24d-b5cf-\
3f5b820484b5"],

Cell["\<\
In this subsection we have manually implemented the Taylor series expansion \
rather than just using the direct in built function of Mathematica \
\>", "Text",
 CellChangeTimes->{{3.9324416605282936`*^9, 3.932441709868141*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"bb9eb0b9-0205-624f-900e-a5da0fa66dbd"],

Cell[CellGroupData[{

Cell["Assigning the above equation as a function of s:", "Subsubsection",
 CellChangeTimes->{{3.9324417321370697`*^9, 3.9324417340860157`*^9}, {
  3.9324417796601677`*^9, 
  3.9324417956321716`*^9}},ExpressionUUID->"4924bb41-87fe-4440-b1a5-\
15873621b618"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TaylorRHSBc", "[", 
   RowBox[{"\[Theta]_", ",", "\[Phi]_", ",", " ", "Nmax_", ",", " ", "s_"}], 
   "]"}], "=", " ", 
  RowBox[{"AppRHSBC", "[", 
   RowBox[{"\[Theta]", ",", " ", "\[Phi]", ",", " ", "Nmax"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9324406927823257`*^9, 3.9324407561142597`*^9}, {
  3.9324408102871895`*^9, 3.9324408104253864`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"63377f4d-dab2-344b-814b-8ff029ca8b25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "0"}], "Nmax"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"R", " ", "s", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"R", " ", "s", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
      RowBox[{"g", "[", 
       RowBox[{"n", ",", "0"}], "]"}], " ", 
      RowBox[{"SphericalHarmonicY", "[", 
       RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]}], 
    "-", 
    RowBox[{"4", " ", "R", " ", "s", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"R", "-", 
           RowBox[{"R", " ", "s", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"-", "2"}], "-", "n"}]], " ", 
        RowBox[{"g", "[", 
         RowBox[{"n", ",", "0"}], "]"}], " ", 
        SqrtBox[
         RowBox[{"Gamma", "[", 
          RowBox[{"2", "+", "n"}], "]"}]], " ", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"n", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SqrtBox[
        RowBox[{"Gamma", "[", "n", "]"}]]]}]}]}], ")"}], "/", 
  RowBox[{"(", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"R", "-", 
        RowBox[{"R", " ", "s", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["R", "2"], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], ")"}]}]], "Output",
 CellChangeTimes->{3.932440766575102*^9, 3.9324408107440186`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"4543c720-1473-f040-a8e1-6cd3102b94d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Taking the Derivative of the above function wrt s ", "Subsubsection",
 CellChangeTimes->{{3.9324418029298325`*^9, 3.93244181505818*^9}, 
   3.9324460109165154`*^9},ExpressionUUID->"5e9078ec-2d02-fb4e-b3ab-\
ef73262d84b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"primeRHSBC", "[", 
   RowBox[{"\[Theta]_", ",", "\[Phi]_", ",", " ", "Nmax_", ",", " ", "s_"}], 
   "]"}], "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"TaylorRHSBc", "[", 
     RowBox[{"\[Theta]", ",", "\[Phi]", ",", " ", "Nmax", ",", " ", "s"}], 
     "]"}], ",", " ", "s"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "22"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.932440870915491*^9, 3.932440899011791*^9}, {
  3.9324459954489*^9, 
  3.932446002301281*^9}},ExpressionUUID->"cbea63fe-d664-7745-ad1c-\
b6c8c3f643ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"R", " ", "s", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["R", "2"], " ", "s", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"n", "=", "0"}], "Nmax"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"R", "-", 
                 RowBox[{"R", " ", "s", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
             RowBox[{"n", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"R", "-", 
                 RowBox[{"R", " ", "s", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
           RowBox[{"g", "[", 
            RowBox[{"n", ",", "0"}], "]"}], " ", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], 
            "]"}]}]}], "-", 
         RowBox[{"4", " ", "R", " ", "s", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"n", "=", "0"}], "Nmax"], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"R", "-", 
                RowBox[{"R", " ", "s", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
              RowBox[{
               RowBox[{"-", "2"}], "-", "n"}]], " ", 
             RowBox[{"g", "[", 
              RowBox[{"n", ",", "0"}], "]"}], " ", 
             SqrtBox[
              RowBox[{"Gamma", "[", 
               RowBox[{"2", "+", "n"}], "]"}]], " ", 
             RowBox[{"SphericalHarmonicY", "[", 
              RowBox[{"n", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], 
              "]"}]}], 
            SqrtBox[
             RowBox[{"Gamma", "[", "n", "]"}]]]}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"R", " ", "s", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox["s", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}], ")"}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "R"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"R", " ", "s", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "2"}], "-", "n"}]]}], "-", 
         RowBox[{"n", " ", "R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"R", "-", 
             RowBox[{"R", " ", "s", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "2"}], "-", "n"}]]}], "-", 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"R", "-", 
                RowBox[{"R", " ", "s", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
              RowBox[{
               RowBox[{"-", "2"}], "-", "n"}]]}], "+", 
            RowBox[{"n", " ", "R", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"R", "-", 
                RowBox[{"R", " ", "s", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
              RowBox[{
               RowBox[{"-", "2"}], "-", "n"}]]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"n", ",", "0"}], "]"}], " ", 
       RowBox[{"SphericalHarmonicY", "[", 
        RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]}], 
     "-", 
     RowBox[{"4", " ", "R", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "0"}], "Nmax"], 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"R", "-", 
            RowBox[{"R", " ", "s", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], "-", "n"}]], " ", 
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "0"}], "]"}], " ", 
         SqrtBox[
          RowBox[{"Gamma", "[", 
           RowBox[{"2", "+", "n"}], "]"}]], " ", 
         RowBox[{"SphericalHarmonicY", "[", 
          RowBox[{"n", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        SqrtBox[
         RowBox[{"Gamma", "[", "n", "]"}]]]}]}], "-", 
     RowBox[{"4", " ", "R", " ", "s", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "0"}], "Nmax"], 
       RowBox[{
        FractionBox["1", 
         SqrtBox[
          RowBox[{"Gamma", "[", "n", "]"}]]], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "R", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"R", "-", 
               RowBox[{"R", " ", "s", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
             RowBox[{
              RowBox[{"-", "3"}], "-", "n"}]]}], "+", 
           RowBox[{"n", " ", "R", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"R", "-", 
               RowBox[{"R", " ", "s", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], 
             RowBox[{
              RowBox[{"-", "3"}], "-", "n"}]]}]}], ")"}], " ", 
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "0"}], "]"}], " ", 
         SqrtBox[
          RowBox[{"Gamma", "[", 
           RowBox[{"2", "+", "n"}], "]"}]], " ", 
         RowBox[{"SphericalHarmonicY", "[", 
          RowBox[{"n", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], 
          "]"}]}]}]}]}]}], ")"}], "/", 
   RowBox[{"(", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.9324409019372616`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"f5f1fa6f-dd9f-c442-bd0b-c7a46f09c971"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applying the Taylor series expansion formula:", "Subsubsection",
 CellChangeTimes->{{3.9324418285654793`*^9, 
  3.9324418447044144`*^9}},ExpressionUUID->"81d81dca-6ed1-6845-b185-\
67a9188eaaac"],

Cell[TextData[{
 "f(s) = f(0) + f\[CloseCurlyQuote](0)s + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["s", "2"], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7d68dbbf-3ab5-474d-bb00-de25bd2c5680"]
}], "Text",
 CellChangeTimes->{{3.9324418576591873`*^9, 
  3.9324420011858807`*^9}},ExpressionUUID->"3cb0f740-db03-0c4f-b40c-\
67ddfc3c0c9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AfterTaylor", "[", 
   RowBox[{"\[Theta]_", ",", "\[Phi]_", ",", " ", "Nmax_", ",", " ", "s_"}], 
   "]"}], "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"TaylorRHSBc", "[", 
       RowBox[{"\[Theta]", ",", "\[Phi]", ",", " ", "Nmax", ",", " ", "0"}], 
       "]"}], "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"primeRHSBC", "[", 
         RowBox[{"\[Theta]", ",", "\[Phi]", ",", " ", "Nmax", ",", " ", "0"}],
          "]"}], ")"}], "*", "s"}]}], "]"}], ",", " ", 
    RowBox[{"R", ">", "0"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "25"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9324407798106728`*^9, 3.9324408528836403`*^9}, {
  3.932440951300049*^9, 3.932441004197155*^9}, {3.9324508252044163`*^9, 
  3.932450830585472*^9}, {3.93245137691074*^9, 
  3.9324513825274086`*^9}},ExpressionUUID->"2a884bf4-d786-8d4b-b59f-\
e04656cc4fc5"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "R"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"s", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "Nmax"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["R", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
         RowBox[{"n", " ", 
          SuperscriptBox["R", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"n", ",", "0"}], "]"}], " ", 
       RowBox[{"SphericalHarmonicY", "[", 
        RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]}]}], 
    "+", 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "0"}], "Nmax"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["R", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "n"}]]}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{"n", " ", 
            SuperscriptBox["R", 
             RowBox[{
              RowBox[{"-", "1"}], "-", "n"}]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["R", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "n"}]], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{"n", " ", 
               SuperscriptBox["R", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "n"}]], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}], 
         " ", 
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "0"}], "]"}], " ", 
         RowBox[{"SphericalHarmonicY", "[", 
          RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]}], 
       "-", 
       RowBox[{"2", " ", "R", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "0"}], "Nmax"], 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
           SuperscriptBox["R", 
            RowBox[{
             RowBox[{"-", "2"}], "-", "n"}]], " ", 
           RowBox[{"g", "[", 
            RowBox[{"n", ",", "0"}], "]"}], " ", 
           SqrtBox[
            RowBox[{"Gamma", "[", 
             RowBox[{"2", "+", "n"}], "]"}]], " ", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{"n", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
          SqrtBox[
           RowBox[{"Gamma", "[", "n", "]"}]]]}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.9324409629706383`*^9, 3.9324409752940216`*^9}, 
   3.932441006008547*^9, 3.9324508347726707`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"ce3416c6-f871-6c40-a625-ae570a269f94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"AfterTaylor", "[", 
     RowBox[{"\[Theta]", ",", "\[Phi]", ",", " ", "Nmax", ",", " ", "s"}], 
     "]"}], ",", "s"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "to", " ", "simplify", " ", "the", " ", 
    "expression", " ", "and", " ", "verify", " ", "the", " ", "results", " ", 
    "from", " ", "the", " ", "notes", " ", "easily"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.932441019149267*^9, 3.932441024974079*^9}, {
  3.932441164669819*^9, 3.9324411698287964`*^9}, {3.932446164320404*^9, 
  3.9324461733089848`*^9}, {3.932451897268242*^9, 
  3.9324519241740646`*^9}},ExpressionUUID->"a0398066-c558-a84f-8aec-\
238e16372233"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "0"}], "Nmax"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["R", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
       RowBox[{"n", " ", 
        SuperscriptBox["R", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
     RowBox[{"g", "[", 
      RowBox[{"n", ",", "0"}], "]"}], " ", 
     RowBox[{"SphericalHarmonicY", "[", 
      RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]}], 
   "R"], "+", 
  RowBox[{
   FractionBox["1", "R"], 
   RowBox[{"s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "0"}], "Nmax"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["R", 
             RowBox[{
              RowBox[{"-", "1"}], "-", "n"}]]}], "-", 
           RowBox[{"n", " ", 
            SuperscriptBox["R", 
             RowBox[{
              RowBox[{"-", "1"}], "-", "n"}]]}]}], ")"}], " ", 
         RowBox[{"g", "[", 
          RowBox[{"n", ",", "0"}], "]"}], " ", 
         RowBox[{"SphericalHarmonicY", "[", 
          RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], 
          "]"}]}]}]}], "+", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "0"}], "Nmax"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["R", 
             RowBox[{
              RowBox[{"-", "1"}], "-", "n"}]]}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"n", " ", 
           SuperscriptBox["R", 
            RowBox[{
             RowBox[{"-", "1"}], "-", "n"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["R", 
               RowBox[{
                RowBox[{"-", "1"}], "-", "n"}]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{"n", " ", 
              SuperscriptBox["R", 
               RowBox[{
                RowBox[{"-", "1"}], "-", "n"}]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}], 
        " ", 
        RowBox[{"g", "[", 
         RowBox[{"n", ",", "0"}], "]"}], " ", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"n", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]}], 
      "-", 
      RowBox[{"2", " ", "R", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "0"}], "Nmax"], 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
          SuperscriptBox["R", 
           RowBox[{
            RowBox[{"-", "2"}], "-", "n"}]], " ", 
          RowBox[{"g", "[", 
           RowBox[{"n", ",", "0"}], "]"}], " ", 
          SqrtBox[
           RowBox[{"Gamma", "[", 
            RowBox[{"2", "+", "n"}], "]"}]], " ", 
          RowBox[{"SphericalHarmonicY", "[", 
           RowBox[{"n", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
         SqrtBox[
          RowBox[{"Gamma", "[", "n", "]"}]]]}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.9324410258997974`*^9, 3.9324411985644836`*^9, 
  3.9324461736646023`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"667a96b8-7bb9-454a-a783-0fc6ff3bfaaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Taylor Expanding it up to first order ", "Subsection",
 CellChangeTimes->{{3.9290367703934116`*^9, 3.929036773332464*^9}, 
   3.9324512849447975`*^9, {3.9324513409336376`*^9, 
   3.9324513507266216`*^9}},ExpressionUUID->"65b9f273-4be4-5e43-af14-\
6a72c4ca76ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"final", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
  RowBox[{"Refine", "[", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"AppRHSBC", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]", ",", " ", "8"}], "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"s", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}], "]"}], 
    ",", " ", 
    RowBox[{"R", ">", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.929036619340021*^9, 3.929036647879309*^9}, {
  3.929036694937244*^9, 3.929036711882489*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"a9e783c2-02ba-234b-b2d4-844060b2f7ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "R"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"g", "[", 
        RowBox[{"0", ",", "0"}], "]"}], 
       RowBox[{"2", " ", 
        SqrtBox["\[Pi]"], " ", "R"}]]}], "-", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["3", "\[Pi]"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], 
      SuperscriptBox["R", "2"]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SqrtBox[
        FractionBox["5", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "0"}], "]"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["R", "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["7", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"5", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0"}], "]"}]}], 
      SuperscriptBox["R", "4"]], "-", 
     FractionBox[
      RowBox[{"15", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"30", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{"35", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "0"}], "]"}]}], 
      RowBox[{"16", " ", 
       SqrtBox["\[Pi]"], " ", 
       SuperscriptBox["R", "5"]}]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SqrtBox[
        FractionBox["11", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"15", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"70", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
         RowBox[{"63", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}]}], 
      RowBox[{"8", " ", 
       SuperscriptBox["R", "6"]}]], "-", 
     FractionBox[
      RowBox[{"7", " ", 
       SqrtBox[
        FractionBox["13", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"105", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"315", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
         RowBox[{"231", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}]}], 
      RowBox[{"32", " ", 
       SuperscriptBox["R", "7"]}]], "-", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["15", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "35"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"315", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "-", 
         RowBox[{"693", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
         RowBox[{"429", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "7"]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["R", "8"]}]], "-", 
     FractionBox[
      RowBox[{"9", " ", 
       SqrtBox[
        FractionBox["17", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{"35", "-", 
         RowBox[{"1260", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{"6930", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "-", 
         RowBox[{"12012", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "+", 
         RowBox[{"6435", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "8"]}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], 
      RowBox[{"256", " ", 
       SuperscriptBox["R", "9"]}]]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"128", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["R", "10"]}]], 
   RowBox[{"s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "128"}], " ", 
       SuperscriptBox["R", "8"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"0", ",", "0"}], "]"}]}], "-", 
      RowBox[{"384", " ", 
       SqrtBox["3"], " ", 
       SuperscriptBox["R", "7"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], "+", 
      RowBox[{"384", " ", 
       SqrtBox["5"], " ", 
       SuperscriptBox["R", "6"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "0"}], "]"}]}], "-", 
      RowBox[{"1152", " ", 
       SqrtBox["5"], " ", 
       SuperscriptBox["R", "6"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "0"}], "]"}]}], "+", 
      RowBox[{"1920", " ", 
       SqrtBox["7"], " ", 
       SuperscriptBox["R", "5"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0"}], "]"}]}], "-", 
      RowBox[{"3200", " ", 
       SqrtBox["7"], " ", 
       SuperscriptBox["R", "5"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0"}], "]"}]}], "-", 
      RowBox[{"2160", " ", 
       SuperscriptBox["R", "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "0"}], "]"}]}], "+", 
      RowBox[{"21600", " ", 
       SuperscriptBox["R", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "0"}], "]"}]}], "-", 
      RowBox[{"25200", " ", 
       SuperscriptBox["R", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "0"}], "]"}]}], "-", 
      RowBox[{"5040", " ", 
       SqrtBox["11"], " ", 
       SuperscriptBox["R", "3"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}]}], "+", 
      RowBox[{"23520", " ", 
       SqrtBox["11"], " ", 
       SuperscriptBox["R", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}]}], "-", 
      RowBox[{"21168", " ", 
       SqrtBox["11"], " ", 
       SuperscriptBox["R", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}]}], "+", 
      RowBox[{"1120", " ", 
       SqrtBox["13"], " ", 
       SuperscriptBox["R", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}]}], "-", 
      RowBox[{"23520", " ", 
       SqrtBox["13"], " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}]}], "+", 
      RowBox[{"70560", " ", 
       SqrtBox["13"], " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}]}], "-", 
      RowBox[{"51744", " ", 
       SqrtBox["13"], " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}]}], "+", 
      RowBox[{"10080", " ", 
       SqrtBox["15"], " ", "R", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], "-", 
      RowBox[{"90720", " ", 
       SqrtBox["15"], " ", "R", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], "+", 
      RowBox[{"199584", " ", 
       SqrtBox["15"], " ", "R", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], "-", 
      RowBox[{"123552", " ", 
       SqrtBox["15"], " ", "R", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "7"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], "-", 
      RowBox[{"1575", " ", 
       SqrtBox["17"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], "+", 
      RowBox[{"56700", " ", 
       SqrtBox["17"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], "-", 
      RowBox[{"311850", " ", 
       SqrtBox["17"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], "+", 
      RowBox[{"540540", " ", 
       SqrtBox["17"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], "-", 
      RowBox[{"289575", " ", 
       SqrtBox["17"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "8"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], "+", 
      RowBox[{"256", " ", 
       SqrtBox["3"], " ", 
       SuperscriptBox["R", "7"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"768", " ", 
       SqrtBox["5"], " ", 
       SuperscriptBox["R", "6"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"384", " ", 
       SqrtBox["7"], " ", 
       SuperscriptBox["R", "5"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"1920", " ", 
       SqrtBox["7"], " ", 
       SuperscriptBox["R", "5"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"5760", " ", 
       SuperscriptBox["R", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"13440", " ", 
       SuperscriptBox["R", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"480", " ", 
       SqrtBox["11"], " ", 
       SuperscriptBox["R", "3"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"6720", " ", 
       SqrtBox["11"], " ", 
       SuperscriptBox["R", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"10080", " ", 
       SqrtBox["11"], " ", 
       SuperscriptBox["R", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"3360", " ", 
       SqrtBox["13"], " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"20160", " ", 
       SqrtBox["13"], " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"22176", " ", 
       SqrtBox["13"], " ", 
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"560", " ", 
       SqrtBox["15"], " ", "R", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"15120", " ", 
       SqrtBox["15"], " ", "R", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"55440", " ", 
       SqrtBox["15"], " ", "R", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"48048", " ", 
       SqrtBox["15"], " ", "R", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "7"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"5040", " ", 
       SqrtBox["17"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"55440", " ", 
       SqrtBox["17"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"144144", " ", 
       SqrtBox["17"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"102960", " ", 
       SqrtBox["17"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "8"], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.9290366245853157`*^9, 3.9290366523285847`*^9}, 
   3.929036717334503*^9, 3.9290393644970512`*^9, 3.9290924352123203`*^9, 
   3.92909460820241*^9, 3.929109350690506*^9, 3.9312609801245766`*^9, 
   3.932441148103895*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"e776f74c-b3bb-8d47-836f-55ec64c3ac12"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verifying the above expression derived from two different ways are same or \
not: Passed\
\>", "Subsubsection",
 CellChangeTimes->{{3.9324512219764175`*^9, 
  3.932451275077837*^9}},ExpressionUUID->"3f8667d0-4545-a941-9925-\
854dfe20ac41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"AfterTaylor", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]", ",", " ", "8", ",", " ", "s"}], "]"}], 
   " ", "-", " ", 
   RowBox[{"final", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9324412180282974`*^9, 3.9324412196320057`*^9}, {
  3.9324412631828384`*^9, 3.932441266530281*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"4f8c5d16-8334-d241-9a62-00edfa4cc341"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.932441267099676*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"8773e70e-378f-6143-bbe1-60517fb18040"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluating the coefficients for the RHS: ", "Subsubsection",
 CellChangeTimes->{{3.93245198032926*^9, 
  3.932451990358961*^9}},ExpressionUUID->"ba539c6f-2585-3242-9e94-\
d89dfcfbfa28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"n", ",", " ", "m"}], "]"}], " ", "=", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Conjugate", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "n", ",", " ", "m", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}], 
          RowBox[{"final", "[", 
           RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
           RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "26"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9290368088658695`*^9, 3.9290368142583847`*^9}, {
  3.9324518769892445`*^9, 
  3.932451883909395*^9}},ExpressionUUID->"63420161-bb04-0247-89a6-\
821f9356aa32"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.92903805335967*^9, 3.929092463418689*^9, 
  3.9291097010015736`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"4709736b-d6cb-b44f-993f-63fe25db3d74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "[", 
      RowBox[{"n", ",", " ", "m"}], "]"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"m", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.929038067544681*^9},
 CellLabel->
  "In[437]:=",ExpressionUUID->"ab203d22-2fe1-0d4b-a9d2-3c6b437512fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "s"}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"0", ",", "0"}], "]"}]}], 
      RowBox[{"3", " ", 
       SuperscriptBox["R", "2"]}]], "-", 
     FractionBox[
      RowBox[{"8", " ", "s", " ", 
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "0"}], "]"}]}], 
      RowBox[{
       SqrtBox["5"], " ", 
       SuperscriptBox["R", "4"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{"14", " ", 
       SuperscriptBox["R", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", "s"}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], "-", 
      RowBox[{"48", " ", 
       SqrtBox["21"], " ", "s", " ", 
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0"}], "]"}]}]}], 
     RowBox[{"35", " ", 
      SuperscriptBox["R", "5"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"56", " ", 
        SuperscriptBox["R", "4"], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"0", ",", "0"}], "]"}]}], "+", 
       RowBox[{"3", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"21", "-", 
          RowBox[{"4", " ", "s"}]}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"2", ",", "0"}], "]"}]}], "+", 
       RowBox[{"480", " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"4", ",", "0"}], "]"}]}]}], 
      RowBox[{"21", " ", 
       SqrtBox["5"], " ", 
       SuperscriptBox["R", "6"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"792", " ", 
          SqrtBox["21"], " ", 
          SuperscriptBox["R", "4"], " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"1", ",", "0"}], "]"}]}], "-", 
         RowBox[{"77", " ", 
          SuperscriptBox["R", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "45"}], "+", 
            RowBox[{"7", " ", "s"}]}], ")"}], " ", 
          RowBox[{"g", "[", 
           RowBox[{"3", ",", "0"}], "]"}]}], "+", 
         RowBox[{"1500", " ", 
          SqrtBox["77"], " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"5", ",", "0"}], "]"}]}]}], ")"}]}], 
      RowBox[{"3465", " ", 
       SuperscriptBox["R", "7"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"18304", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["R", "4"], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"2", ",", "0"}], "]"}]}], "+", 
       RowBox[{"325", " ", 
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"77", "-", 
          RowBox[{"10", " ", "s"}]}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"4", ",", "0"}], "]"}]}], "+", 
       RowBox[{"29400", " ", 
        SqrtBox["13"], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"6", ",", "0"}], "]"}]}]}], 
      RowBox[{"5005", " ", 
       SuperscriptBox["R", "8"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "[", 
     RowBox[{"5", ",", "0"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "[", 
     RowBox[{"6", ",", "0"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "[", 
     RowBox[{"7", ",", "0"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "[", 
     RowBox[{"8", ",", "0"}], "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929038068061667*^9},
 CellLabel->
  "Out[437]=",ExpressionUUID->"0c7809fd-72a1-fc48-8791-5440fefb2813"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"n", ",", " ", "m"}], "]"}], " ", "=", " ", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"SphericalHarmonicY", "[", 
           RowBox[{
           "n", ",", " ", "m", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
           "]"}], "]"}], 
         RowBox[{"final", "[", 
          RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"m", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "5", ",", " ", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9290381239503136`*^9, 3.92903812409746*^9}, {
  3.929038977609125*^9, 3.9290389782633953`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"b5dc9660-d5a7-a142-9ebd-d3de969fe50d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1040", " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"3", ",", "0"}], "]"}]}], 
       RowBox[{"9", " ", 
        SqrtBox["77"], " ", 
        SuperscriptBox["R", "5"]}]]}], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}]}], 
      RowBox[{"3", " ", 
       SuperscriptBox["R", "7"]}]], "-", 
     FractionBox[
      RowBox[{"1568", " ", 
       SqrtBox[
        FractionBox["3", "55"]], " ", "s", " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], 
      RowBox[{"13", " ", 
       SuperscriptBox["R", "9"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"760", " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"4", ",", "0"}], "]"}]}], 
       RowBox[{"11", " ", 
        SqrtBox["13"], " ", 
        SuperscriptBox["R", "6"]}]]}], "+", 
     FractionBox[
      RowBox[{"7", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "165"}], "+", 
         RowBox[{"16", " ", "s"}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}]}], 
      RowBox[{"165", " ", 
       SuperscriptBox["R", "8"]}]], "-", 
     FractionBox[
      RowBox[{"2688", " ", "s", " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], 
      RowBox[{"5", " ", 
       SqrtBox["221"], " ", 
       SuperscriptBox["R", "10"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"112", " ", 
        SqrtBox[
         FractionBox["3", "55"]], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"5", ",", "0"}], "]"}]}], 
       SuperscriptBox["R", "7"]]}], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "221"}], "+", 
         RowBox[{"19", " ", "s"}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], 
      RowBox[{"221", " ", 
       SuperscriptBox["R", "9"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"448", " ", 
        SqrtBox[
         FractionBox["17", "13"]], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"6", ",", "0"}], "]"}]}], 
       RowBox[{"15", " ", 
        SuperscriptBox["R", "8"]}]]}], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "285"}], "+", 
         RowBox[{"22", " ", "s"}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], 
      RowBox[{"95", " ", 
       SuperscriptBox["R", "10"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929038434606704*^9, 3.929040912442751*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"e82c2ae6-efa9-6a41-b60e-0cb5703ab10f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Final Coefficients for the RHS part of the BC - (Results of Eqn. 26d)\
\>", "Subsection",
 CellChangeTimes->{{3.929041424358347*^9, 3.9290414372552414`*^9}, {
  3.9324520198451405`*^9, 
  3.932452027703579*^9}},ExpressionUUID->"ed9fae75-5fd1-b24b-a490-\
6ac287a92498"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zcoeffRHS", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"2", " ", "s"}]}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"0", ",", "0"}], "]"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox["R", "2"]}]], "-", 
      FractionBox[
       RowBox[{"8", " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"2", ",", "0"}], "]"}]}], 
       RowBox[{
        SqrtBox["5"], " ", 
        SuperscriptBox["R", "4"]}]]}], "}"}], ",", 
    RowBox[{"{", 
     FractionBox[
      RowBox[{
       RowBox[{"14", " ", 
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", "s"}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"1", ",", "0"}], "]"}]}], "-", 
       RowBox[{"48", " ", 
        SqrtBox["21"], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"3", ",", "0"}], "]"}]}]}], 
      RowBox[{"35", " ", 
       SuperscriptBox["R", "5"]}]], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"56", " ", 
         SuperscriptBox["R", "4"], " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"0", ",", "0"}], "]"}]}], "+", 
        RowBox[{"3", " ", 
         SqrtBox["5"], " ", 
         SuperscriptBox["R", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"21", "-", 
           RowBox[{"4", " ", "s"}]}], ")"}], " ", 
         RowBox[{"g", "[", 
          RowBox[{"2", ",", "0"}], "]"}]}], "+", 
        RowBox[{"480", " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"4", ",", "0"}], "]"}]}]}], 
       RowBox[{"21", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["R", "6"]}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"792", " ", 
           SqrtBox["21"], " ", 
           SuperscriptBox["R", "4"], " ", "s", " ", 
           RowBox[{"g", "[", 
            RowBox[{"1", ",", "0"}], "]"}]}], "-", 
          RowBox[{"77", " ", 
           SuperscriptBox["R", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "45"}], "+", 
             RowBox[{"7", " ", "s"}]}], ")"}], " ", 
           RowBox[{"g", "[", 
            RowBox[{"3", ",", "0"}], "]"}]}], "+", 
          RowBox[{"1500", " ", 
           SqrtBox["77"], " ", "s", " ", 
           RowBox[{"g", "[", 
            RowBox[{"5", ",", "0"}], "]"}]}]}], ")"}]}], 
       RowBox[{"3465", " ", 
        SuperscriptBox["R", "7"]}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"18304", " ", 
         SqrtBox["5"], " ", 
         SuperscriptBox["R", "4"], " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"2", ",", "0"}], "]"}]}], "+", 
        RowBox[{"325", " ", 
         SuperscriptBox["R", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"77", "-", 
           RowBox[{"10", " ", "s"}]}], ")"}], " ", 
         RowBox[{"g", "[", 
          RowBox[{"4", ",", "0"}], "]"}]}], "+", 
        RowBox[{"29400", " ", 
         SqrtBox["13"], " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"6", ",", "0"}], "]"}]}]}], 
       RowBox[{"5005", " ", 
        SuperscriptBox["R", "8"]}]]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"1040", " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"3", ",", "0"}], "]"}]}], 
        RowBox[{"9", " ", 
         SqrtBox["77"], " ", 
         SuperscriptBox["R", "5"]}]]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"5", ",", "0"}], "]"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox["R", "7"]}]], "-", 
      FractionBox[
       RowBox[{"1568", " ", 
        SqrtBox[
         FractionBox["3", "55"]], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"7", ",", "0"}], "]"}]}], 
       RowBox[{"13", " ", 
        SuperscriptBox["R", "9"]}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"760", " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"4", ",", "0"}], "]"}]}], 
        RowBox[{"11", " ", 
         SqrtBox["13"], " ", 
         SuperscriptBox["R", "6"]}]]}], "+", 
      FractionBox[
       RowBox[{"7", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "165"}], "+", 
          RowBox[{"16", " ", "s"}]}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"6", ",", "0"}], "]"}]}], 
       RowBox[{"165", " ", 
        SuperscriptBox["R", "8"]}]], "-", 
      FractionBox[
       RowBox[{"2688", " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"8", ",", "0"}], "]"}]}], 
       RowBox[{"5", " ", 
        SqrtBox["221"], " ", 
        SuperscriptBox["R", "10"]}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"112", " ", 
         SqrtBox[
          FractionBox["3", "55"]], " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"5", ",", "0"}], "]"}]}], 
        SuperscriptBox["R", "7"]]}], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "221"}], "+", 
          RowBox[{"19", " ", "s"}]}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"7", ",", "0"}], "]"}]}], 
       RowBox[{"221", " ", 
        SuperscriptBox["R", "9"]}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"448", " ", 
         SqrtBox[
          FractionBox["17", "13"]], " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"6", ",", "0"}], "]"}]}], 
        RowBox[{"15", " ", 
         SuperscriptBox["R", "8"]}]]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "285"}], "+", 
          RowBox[{"22", " ", "s"}]}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"8", ",", "0"}], "]"}]}], 
       RowBox[{"95", " ", 
        SuperscriptBox["R", "10"]}]]}], "}"}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "27"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.929041279105374*^9, 3.929041292556834*^9}, {
  3.9290414556420193`*^9, 3.92904145610557*^9}, {3.9324520335230637`*^9, 
  3.9324520436903496`*^9}, {3.93245214839275*^9, 3.9324521494275513`*^9}, {
  3.9324739167448025`*^9, 
  3.9324739203192844`*^9}},ExpressionUUID->"ea8f0844-f6e4-2744-a718-\
79b10504b436"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "s"}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"0", ",", "0"}], "]"}]}], 
      RowBox[{"3", " ", 
       SuperscriptBox["R", "2"]}]], "-", 
     FractionBox[
      RowBox[{"8", " ", "s", " ", 
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "0"}], "]"}]}], 
      RowBox[{
       SqrtBox["5"], " ", 
       SuperscriptBox["R", "4"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{"14", " ", 
       SuperscriptBox["R", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", "s"}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], "-", 
      RowBox[{"48", " ", 
       SqrtBox["21"], " ", "s", " ", 
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0"}], "]"}]}]}], 
     RowBox[{"35", " ", 
      SuperscriptBox["R", "5"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"56", " ", 
        SuperscriptBox["R", "4"], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"0", ",", "0"}], "]"}]}], "+", 
       RowBox[{"3", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"21", "-", 
          RowBox[{"4", " ", "s"}]}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"2", ",", "0"}], "]"}]}], "+", 
       RowBox[{"480", " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"4", ",", "0"}], "]"}]}]}], 
      RowBox[{"21", " ", 
       SqrtBox["5"], " ", 
       SuperscriptBox["R", "6"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"792", " ", 
          SqrtBox["21"], " ", 
          SuperscriptBox["R", "4"], " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"1", ",", "0"}], "]"}]}], "-", 
         RowBox[{"77", " ", 
          SuperscriptBox["R", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "45"}], "+", 
            RowBox[{"7", " ", "s"}]}], ")"}], " ", 
          RowBox[{"g", "[", 
           RowBox[{"3", ",", "0"}], "]"}]}], "+", 
         RowBox[{"1500", " ", 
          SqrtBox["77"], " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"5", ",", "0"}], "]"}]}]}], ")"}]}], 
      RowBox[{"3465", " ", 
       SuperscriptBox["R", "7"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"18304", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["R", "4"], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"2", ",", "0"}], "]"}]}], "+", 
       RowBox[{"325", " ", 
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"77", "-", 
          RowBox[{"10", " ", "s"}]}], ")"}], " ", 
        RowBox[{"g", "[", 
         RowBox[{"4", ",", "0"}], "]"}]}], "+", 
       RowBox[{"29400", " ", 
        SqrtBox["13"], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"6", ",", "0"}], "]"}]}]}], 
      RowBox[{"5005", " ", 
       SuperscriptBox["R", "8"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1040", " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"3", ",", "0"}], "]"}]}], 
       RowBox[{"9", " ", 
        SqrtBox["77"], " ", 
        SuperscriptBox["R", "5"]}]]}], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"5", ",", "0"}], "]"}]}], 
      RowBox[{"3", " ", 
       SuperscriptBox["R", "7"]}]], "-", 
     FractionBox[
      RowBox[{"1568", " ", 
       SqrtBox[
        FractionBox["3", "55"]], " ", "s", " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], 
      RowBox[{"13", " ", 
       SuperscriptBox["R", "9"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"760", " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"4", ",", "0"}], "]"}]}], 
       RowBox[{"11", " ", 
        SqrtBox["13"], " ", 
        SuperscriptBox["R", "6"]}]]}], "+", 
     FractionBox[
      RowBox[{"7", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "165"}], "+", 
         RowBox[{"16", " ", "s"}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"6", ",", "0"}], "]"}]}], 
      RowBox[{"165", " ", 
       SuperscriptBox["R", "8"]}]], "-", 
     FractionBox[
      RowBox[{"2688", " ", "s", " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], 
      RowBox[{"5", " ", 
       SqrtBox["221"], " ", 
       SuperscriptBox["R", "10"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"112", " ", 
        SqrtBox[
         FractionBox["3", "55"]], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"5", ",", "0"}], "]"}]}], 
       SuperscriptBox["R", "7"]]}], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "221"}], "+", 
         RowBox[{"19", " ", "s"}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"7", ",", "0"}], "]"}]}], 
      RowBox[{"221", " ", 
       SuperscriptBox["R", "9"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"448", " ", 
        SqrtBox[
         FractionBox["17", "13"]], " ", "s", " ", 
        RowBox[{"g", "[", 
         RowBox[{"6", ",", "0"}], "]"}]}], 
       RowBox[{"15", " ", 
        SuperscriptBox["R", "8"]}]]}], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "285"}], "+", 
         RowBox[{"22", " ", "s"}]}], ")"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"8", ",", "0"}], "]"}]}], 
      RowBox[{"95", " ", 
       SuperscriptBox["R", "10"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929041294292618*^9, 3.929041457462387*^9, 
  3.929092472390476*^9, 3.929094608286267*^9, 3.9291097061617813`*^9, 
  3.9312610294805317`*^9, 3.932452052101015*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"fc6d734d-d9eb-7245-aeb3-1c19bfc3a1c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coefficients of LHS part -", "Subsection",
 CellChangeTimes->{{3.929042808888191*^9, 
  3.9290428172380486`*^9}},ExpressionUUID->"3e8b0a3a-674d-9744-b82e-\
887f2808fdff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcoeffLHS", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["16", "15"]}], " ", "bz", " ", 
      SqrtBox["\[Pi]"], " ", "R", " ", "s"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "5"]}], " ", "bz", " ", "dz", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "3"]], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"8", " ", "s"}]}], ")"}]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "21"]}], " ", "bz", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "5"]], " ", "R", " ", 
       RowBox[{"(", 
        RowBox[{"21", "+", 
         RowBox[{"11", " ", "s"}]}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["16", "5"], " ", "bz", " ", "dz", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "7"]], " ", "s"}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["48", "35"], " ", "bz", " ", 
       SqrtBox["\[Pi]"], " ", "R", " ", "s"}], ",", "0", ",", "0", ",", "0", 
      ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "}"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "28"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9290414856814384`*^9, 3.929041491280878*^9}, {
  3.9324521581898823`*^9, 3.932452160871395*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d6406d89-8e78-a34a-94d7-1da97289b8a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["16", "15"]}], " ", "bz", " ", 
     SqrtBox["\[Pi]"], " ", "R", " ", "s"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "5"]}], " ", "bz", " ", "dz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "3"]], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"8", " ", "s"}]}], ")"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "21"]}], " ", "bz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "5"]], " ", "R", " ", 
      RowBox[{"(", 
       RowBox[{"21", "+", 
        RowBox[{"11", " ", "s"}]}], ")"}]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["16", "5"], " ", "bz", " ", "dz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "7"]], " ", "s"}], ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["48", "35"], " ", "bz", " ", 
      SqrtBox["\[Pi]"], " ", "R", " ", "s"}], ",", "0", ",", "0", ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9290414921833*^9, 3.929092475694172*^9, 
  3.9290946083197975`*^9, 3.92910971004047*^9, 3.9312610351112366`*^9, 
  3.9324802046059647`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"a1e93a92-a64f-3142-9762-3de139f7d670"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Comparing the Coefficients both the sides and Obtaining the g\
\[CloseCurlyQuote]s\
\>", "Section",
 CellChangeTimes->{{3.929042825137249*^9, 
  3.9290428464409695`*^9}},ExpressionUUID->"c7f19bdb-b901-c74a-baf4-\
5f942706564f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", "s"}]}], ")"}], " ", 
         RowBox[{"g", "[", 
          RowBox[{"0", ",", "0"}], "]"}]}], 
        RowBox[{"3", " ", 
         SuperscriptBox["R", "2"]}]], "-", 
       FractionBox[
        RowBox[{"8", " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"2", ",", "0"}], "]"}]}], 
        RowBox[{
         SqrtBox["5"], " ", 
         SuperscriptBox["R", "4"]}]]}], "==", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["16", "15"]}], " ", "bz", " ", 
       SqrtBox["\[Pi]"], " ", "R", " ", "s"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"56", " ", 
          SuperscriptBox["R", "4"], " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"0", ",", "0"}], "]"}]}], "+", 
         RowBox[{"3", " ", 
          SqrtBox["5"], " ", 
          SuperscriptBox["R", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"21", "-", 
            RowBox[{"4", " ", "s"}]}], ")"}], " ", 
          RowBox[{"g", "[", 
           RowBox[{"2", ",", "0"}], "]"}]}], "+", 
         RowBox[{"480", " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"4", ",", "0"}], "]"}]}]}], 
        RowBox[{"21", " ", 
         SqrtBox["5"], " ", 
         SuperscriptBox["R", "6"]}]]}], "==", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "21"]}], " ", "bz", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "5"]], " ", "R", " ", 
       RowBox[{"(", 
        RowBox[{"21", "+", 
         RowBox[{"11", " ", "s"}]}], ")"}]}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"18304", " ", 
          SqrtBox["5"], " ", 
          SuperscriptBox["R", "4"], " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"2", ",", "0"}], "]"}]}], "+", 
         RowBox[{"325", " ", 
          SuperscriptBox["R", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"77", "-", 
            RowBox[{"10", " ", "s"}]}], ")"}], " ", 
          RowBox[{"g", "[", 
           RowBox[{"4", ",", "0"}], "]"}]}], "+", 
         RowBox[{"29400", " ", 
          SqrtBox["13"], " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"6", ",", "0"}], "]"}]}]}], 
        RowBox[{"5005", " ", 
         SuperscriptBox["R", "8"]}]]}], "==", 
      RowBox[{
       FractionBox["48", "35"], " ", "bz", " ", 
       SqrtBox["\[Pi]"], " ", "R", " ", "s"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"760", " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"4", ",", "0"}], "]"}]}], 
         RowBox[{"11", " ", 
          SqrtBox["13"], " ", 
          SuperscriptBox["R", "6"]}]]}], "+", 
       FractionBox[
        RowBox[{"7", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "165"}], "+", 
           RowBox[{"16", " ", "s"}]}], ")"}], " ", 
         RowBox[{"g", "[", 
          RowBox[{"6", ",", "0"}], "]"}]}], 
        RowBox[{"165", " ", 
         SuperscriptBox["R", "8"]}]]}], "==", "0"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"0", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"g", "[", 
       RowBox[{"2", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"g", "[", 
       RowBox[{"4", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"g", "[", 
       RowBox[{"6", ",", " ", "0"}], "]"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "32"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9290415033975544`*^9, 3.9290416757105083`*^9}, {
  3.9324803921731033`*^9, 
  3.932480398084593*^9}},ExpressionUUID->"ec3b20cb-9312-a647-b4bb-\
6804bd4c7456"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"0", ",", "0"}], "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"80", " ", "bz", " ", 
       SqrtBox["\[Pi]"], " ", 
       SuperscriptBox["R", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6435"}], " ", 
          SuperscriptBox["s", "2"]}], "-", 
         RowBox[{"76986", " ", 
          SuperscriptBox["s", "3"]}], "+", 
         RowBox[{"82144", " ", 
          SuperscriptBox["s", "4"]}]}], ")"}]}], 
      RowBox[{"675675", "-", 
       RowBox[{"732420", " ", "s"}], "-", 
       RowBox[{"12335580", " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"9782256", " ", 
        SuperscriptBox["s", "3"]}], "+", 
       RowBox[{"9893632", " ", 
        SuperscriptBox["s", "4"]}]}]]}], ",", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"2", ",", "0"}], "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"75075", " ", "bz", " ", 
          SqrtBox[
           RowBox[{"5", " ", "\[Pi]"}]], " ", 
          SuperscriptBox["R", "5"]}], "-", 
         RowBox[{"27755", " ", "bz", " ", 
          SqrtBox[
           RowBox[{"5", " ", "\[Pi]"}]], " ", 
          SuperscriptBox["R", "5"], " ", "s"}], "-", 
         RowBox[{"764820", " ", "bz", " ", 
          SqrtBox[
           RowBox[{"5", " ", "\[Pi]"}]], " ", 
          SuperscriptBox["R", "5"], " ", 
          SuperscriptBox["s", "2"]}], "-", 
         RowBox[{"25316", " ", "bz", " ", 
          SqrtBox[
           RowBox[{"5", " ", "\[Pi]"}]], " ", 
          SuperscriptBox["R", "5"], " ", 
          SuperscriptBox["s", "3"]}], "+", 
         RowBox[{"1555648", " ", "bz", " ", 
          SqrtBox[
           RowBox[{"5", " ", "\[Pi]"}]], " ", 
          SuperscriptBox["R", "5"], " ", 
          SuperscriptBox["s", "4"]}]}], ")"}]}], 
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{"675675", "-", 
         RowBox[{"732420", " ", "s"}], "-", 
         RowBox[{"12335580", " ", 
          SuperscriptBox["s", "2"]}], "+", 
         RowBox[{"9782256", " ", 
          SuperscriptBox["s", "3"]}], "+", 
         RowBox[{"9893632", " ", 
          SuperscriptBox["s", "4"]}]}], ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"4", ",", "0"}], "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"624", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"825", " ", "bz", " ", 
           SqrtBox["\[Pi]"], " ", 
           SuperscriptBox["R", "7"], " ", "s"}], "-", 
          RowBox[{"410", " ", "bz", " ", 
           SqrtBox["\[Pi]"], " ", 
           SuperscriptBox["R", "7"], " ", 
           SuperscriptBox["s", "2"]}], "-", 
          RowBox[{"1288", " ", "bz", " ", 
           SqrtBox["\[Pi]"], " ", 
           SuperscriptBox["R", "7"], " ", 
           SuperscriptBox["s", "3"]}], "+", 
          RowBox[{"128", " ", "bz", " ", 
           SqrtBox["\[Pi]"], " ", 
           SuperscriptBox["R", "7"], " ", 
           SuperscriptBox["s", "4"]}]}], ")"}]}], 
       RowBox[{"675675", "-", 
        RowBox[{"732420", " ", "s"}], "-", 
        RowBox[{"12335580", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"9782256", " ", 
         SuperscriptBox["s", "3"]}], "+", 
        RowBox[{"9893632", " ", 
         SuperscriptBox["s", "4"]}]}]]}]}], ",", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"6", ",", "0"}], "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"547200", " ", 
        SuperscriptBox["s", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "5"}], " ", "bz", " ", 
           SqrtBox[
            RowBox[{"13", " ", "\[Pi]"}]], " ", 
           SuperscriptBox["R", "9"]}], "+", 
          RowBox[{"2", " ", "bz", " ", 
           SqrtBox[
            RowBox[{"13", " ", "\[Pi]"}]], " ", 
           SuperscriptBox["R", "9"], " ", "s"}], "+", 
          RowBox[{"8", " ", "bz", " ", 
           SqrtBox[
            RowBox[{"13", " ", "\[Pi]"}]], " ", 
           SuperscriptBox["R", "9"], " ", 
           SuperscriptBox["s", "2"]}]}], ")"}]}], 
       RowBox[{"7", " ", 
        RowBox[{"(", 
         RowBox[{"675675", "-", 
          RowBox[{"732420", " ", "s"}], "-", 
          RowBox[{"12335580", " ", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"9782256", " ", 
           SuperscriptBox["s", "3"]}], "+", 
          RowBox[{"9893632", " ", 
           SuperscriptBox["s", "4"]}]}], ")"}]}]]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.929041676559503*^9, 3.929092478679207*^9, 
  3.929109732858559*^9, 3.9312610511542263`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"1cf85461-1907-174a-82ca-5cf8edb30de3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"14", " ", 
         SuperscriptBox["R", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", "s"}], ")"}], " ", 
         RowBox[{"g", "[", 
          RowBox[{"1", ",", "0"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SqrtBox["21"], " ", "s", " ", 
         RowBox[{"g", "[", 
          RowBox[{"3", ",", "0"}], "]"}]}]}], 
       RowBox[{"35", " ", 
        SuperscriptBox["R", "5"]}]], "==", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "5"]}], " ", "bz", " ", "dz", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "3"]], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"8", " ", "s"}]}], ")"}]}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"792", " ", 
            SqrtBox["21"], " ", 
            SuperscriptBox["R", "4"], " ", "s", " ", 
            RowBox[{"g", "[", 
             RowBox[{"1", ",", "0"}], "]"}]}], "-", 
           RowBox[{"77", " ", 
            SuperscriptBox["R", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "45"}], "+", 
              RowBox[{"7", " ", "s"}]}], ")"}], " ", 
            RowBox[{"g", "[", 
             RowBox[{"3", ",", "0"}], "]"}]}], "+", 
           RowBox[{"1500", " ", 
            SqrtBox["77"], " ", "s", " ", 
            RowBox[{"g", "[", 
             RowBox[{"5", ",", "0"}], "]"}]}]}], ")"}]}], 
        RowBox[{"3465", " ", 
         SuperscriptBox["R", "7"]}]]}], "==", " ", 
      RowBox[{
       FractionBox["16", "5"], " ", "bz", " ", "dz", " ", 
       SqrtBox[
        FractionBox["\[Pi]", "7"]], " ", "s"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1040", " ", "s", " ", 
          RowBox[{"g", "[", 
           RowBox[{"3", ",", "0"}], "]"}]}], 
         RowBox[{"9", " ", 
          SqrtBox["77"], " ", 
          SuperscriptBox["R", "5"]}]]}], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", 
         RowBox[{"g", "[", 
          RowBox[{"5", ",", "0"}], "]"}]}], 
        RowBox[{"3", " ", 
         SuperscriptBox["R", "7"]}]]}], "==", "0"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"1", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"g", "[", 
       RowBox[{"3", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"g", "[", 
       RowBox[{"5", ",", "0"}], "]"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "33"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.929041706993613*^9, 3.929041819432677*^9}, {
  3.9324804047959557`*^9, 
  3.932480407349348*^9}},ExpressionUUID->"9042b015-41d9-6e41-8177-\
d93baeba09f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"1", ",", "0"}], "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"35", " ", "bz", " ", "dz", " ", 
        SqrtBox[
         FractionBox["\[Pi]", "3"]], " ", 
        SuperscriptBox["R", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "99"}], "-", 
          RowBox[{"132", " ", "s"}], "+", 
          RowBox[{"703", " ", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"1336", " ", 
           SuperscriptBox["s", "3"]}]}], ")"}]}], 
       RowBox[{"3465", "-", 
        RowBox[{"1617", " ", "s"}], "-", 
        RowBox[{"40049", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"7033", " ", 
         SuperscriptBox["s", "3"]}]}]]}]}], ",", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"3", ",", "0"}], "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"132", " ", "bz", " ", "dz", " ", 
       SqrtBox[
        RowBox[{"7", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "5"], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9"}], "-", 
         RowBox[{"8", " ", "s"}], "+", 
         SuperscriptBox["s", "2"]}], ")"}]}], 
      RowBox[{"3465", "-", 
       RowBox[{"1617", " ", "s"}], "-", 
       RowBox[{"40049", " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"7033", " ", 
        SuperscriptBox["s", "3"]}]}]]}], ",", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"5", ",", "0"}], "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"2080", " ", 
       SuperscriptBox["s", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bz", " ", "dz", " ", 
          SqrtBox[
           RowBox[{"11", " ", "\[Pi]"}]], " ", 
          SuperscriptBox["R", "7"]}], "+", 
         RowBox[{"bz", " ", "dz", " ", 
          SqrtBox[
           RowBox[{"11", " ", "\[Pi]"}]], " ", 
          SuperscriptBox["R", "7"], " ", "s"}]}], ")"}]}], 
      RowBox[{"3465", "-", 
       RowBox[{"1617", " ", "s"}], "-", 
       RowBox[{"40049", " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"7033", " ", 
        SuperscriptBox["s", "3"]}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9290418198181*^9, 3.9290924814459114`*^9, 
  3.929109737902926*^9, 3.9312610539240017`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"a2c24194-aff3-8847-ae37-5800712e3bd3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9290389942947655`*^9, 
  3.92903901247554*^9}},ExpressionUUID->"aed14104-ebdf-434c-ae32-\
ba2299dc3b40"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final values of the coefficients of PHI term ", "Section",
 CellChangeTimes->{{3.9290428568617287`*^9, 
  3.929042871970627*^9}},ExpressionUUID->"99910962-5b68-1c4f-8770-\
4da678051969"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"0", ",", "0"}], "]"}], "=", 
   FractionBox[
    RowBox[{"80", " ", "bz", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["R", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "6435"}], " ", 
        SuperscriptBox["s", "2"]}], "-", 
       RowBox[{"76986", " ", 
        SuperscriptBox["s", "3"]}], "+", 
       RowBox[{"82144", " ", 
        SuperscriptBox["s", "4"]}]}], ")"}]}], 
    RowBox[{"675675", "-", 
     RowBox[{"732420", " ", "s"}], "-", 
     RowBox[{"12335580", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"9782256", " ", 
      SuperscriptBox["s", "3"]}], "+", 
     RowBox[{"9893632", " ", 
      SuperscriptBox["s", "4"]}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"2", ",", "0"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"75075", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"5", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "5"]}], "-", 
        RowBox[{"27755", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"5", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "5"], " ", "s"}], "-", 
        RowBox[{"764820", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"5", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "5"], " ", 
         SuperscriptBox["s", "2"]}], "-", 
        RowBox[{"25316", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"5", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "5"], " ", 
         SuperscriptBox["s", "3"]}], "+", 
        RowBox[{"1555648", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"5", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "5"], " ", 
         SuperscriptBox["s", "4"]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "-", 
        RowBox[{"732420", " ", "s"}], "-", 
        RowBox[{"12335580", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"9782256", " ", 
         SuperscriptBox["s", "3"]}], "+", 
        RowBox[{"9893632", " ", 
         SuperscriptBox["s", "4"]}]}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"4", ",", "0"}], "]"}], "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"624", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"825", " ", "bz", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["R", "7"], " ", "s"}], "-", 
        RowBox[{"410", " ", "bz", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["R", "7"], " ", 
         SuperscriptBox["s", "2"]}], "-", 
        RowBox[{"1288", " ", "bz", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["R", "7"], " ", 
         SuperscriptBox["s", "3"]}], "+", 
        RowBox[{"128", " ", "bz", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["R", "7"], " ", 
         SuperscriptBox["s", "4"]}]}], ")"}]}], 
     RowBox[{"675675", "-", 
      RowBox[{"732420", " ", "s"}], "-", 
      RowBox[{"12335580", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9782256", " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"9893632", " ", 
       SuperscriptBox["s", "4"]}]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"6", ",", "0"}], "]"}], "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"547200", " ", 
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "5"}], " ", "bz", " ", 
         SqrtBox[
          RowBox[{"13", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "9"]}], "+", 
        RowBox[{"2", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"13", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "9"], " ", "s"}], "+", 
        RowBox[{"8", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"13", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "9"], " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], 
     RowBox[{"7", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "-", 
        RowBox[{"732420", " ", "s"}], "-", 
        RowBox[{"12335580", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"9782256", " ", 
         SuperscriptBox["s", "3"]}], "+", 
        RowBox[{"9893632", " ", 
         SuperscriptBox["s", "4"]}]}], ")"}]}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"1", ",", "0"}], "]"}], "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"35", " ", "bz", " ", "dz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "3"]], " ", 
      SuperscriptBox["R", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "99"}], "-", 
        RowBox[{"132", " ", "s"}], "+", 
        RowBox[{"703", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"1336", " ", 
         SuperscriptBox["s", "3"]}]}], ")"}]}], 
     RowBox[{"3465", "-", 
      RowBox[{"1617", " ", "s"}], "-", 
      RowBox[{"40049", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"7033", " ", 
       SuperscriptBox["s", "3"]}]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"3", ",", "0"}], "]"}], "=", 
   FractionBox[
    RowBox[{"132", " ", "bz", " ", "dz", " ", 
     SqrtBox[
      RowBox[{"7", " ", "\[Pi]"}]], " ", 
     SuperscriptBox["R", "5"], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "9"}], "-", 
       RowBox[{"8", " ", "s"}], "+", 
       SuperscriptBox["s", "2"]}], ")"}]}], 
    RowBox[{"3465", "-", 
     RowBox[{"1617", " ", "s"}], "-", 
     RowBox[{"40049", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"7033", " ", 
      SuperscriptBox["s", "3"]}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"5", ",", "0"}], "]"}], "=", 
   FractionBox[
    RowBox[{"2080", " ", 
     SuperscriptBox["s", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"bz", " ", "dz", " ", 
        SqrtBox[
         RowBox[{"11", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "7"]}], "+", 
       RowBox[{"bz", " ", "dz", " ", 
        SqrtBox[
         RowBox[{"11", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "7"], " ", "s"}]}], ")"}]}], 
    RowBox[{"3465", "-", 
     RowBox[{"1617", " ", "s"}], "-", 
     RowBox[{"40049", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"7033", " ", 
      SuperscriptBox["s", "3"]}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "34"}], "d"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.929041846868025*^9, 3.929041851734213*^9}, {
  3.9290418901209145`*^9, 3.929041955379423*^9}, {3.932480526898512*^9, 
  3.9324805325827236`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"09c037e3-dabc-5d4a-9649-18929658213c"],

Cell[CellGroupData[{

Cell["List of all the non zero coefficients in the PHIOut term", "Subsection",
 CellChangeTimes->{{3.9290429183498783`*^9, 
  3.929042934896179*^9}},ExpressionUUID->"60240bd6-328d-714a-ad7f-\
025bdd4a1b10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"glist", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"0", ",", " ", "0"}], "]"}], ",", " ", 
    RowBox[{"g", "[", 
     RowBox[{"1", ",", " ", "0"}], "]"}], ",", " ", 
    RowBox[{"g", "[", 
     RowBox[{"2", ",", " ", "0"}], "]"}], ",", " ", 
    RowBox[{"g", "[", 
     RowBox[{"3", ",", " ", "0"}], "]"}], ",", " ", 
    RowBox[{"g", "[", 
     RowBox[{"4", ",", " ", "0"}], "]"}], ",", " ", 
    RowBox[{"g", "[", 
     RowBox[{"5", ",", " ", "0"}], "]"}], ",", " ", 
    RowBox[{"g", "[", 
     RowBox[{"6", ",", " ", "0"}], "]"}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "35"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.929041965584528*^9, 3.92904201186846*^9}, 
   3.929042208513933*^9, {3.932480730671688*^9, 
   3.9324807340329113`*^9}},ExpressionUUID->"01741954-786d-2d40-8e44-\
9c2c3057804f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"80", " ", "bz", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["R", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "6435"}], " ", 
        SuperscriptBox["s", "2"]}], "-", 
       RowBox[{"76986", " ", 
        SuperscriptBox["s", "3"]}], "+", 
       RowBox[{"82144", " ", 
        SuperscriptBox["s", "4"]}]}], ")"}]}], 
    RowBox[{"675675", "-", 
     RowBox[{"732420", " ", "s"}], "-", 
     RowBox[{"12335580", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"9782256", " ", 
      SuperscriptBox["s", "3"]}], "+", 
     RowBox[{"9893632", " ", 
      SuperscriptBox["s", "4"]}]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"35", " ", "bz", " ", "dz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "3"]], " ", 
      SuperscriptBox["R", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "99"}], "-", 
        RowBox[{"132", " ", "s"}], "+", 
        RowBox[{"703", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"1336", " ", 
         SuperscriptBox["s", "3"]}]}], ")"}]}], 
     RowBox[{"3465", "-", 
      RowBox[{"1617", " ", "s"}], "-", 
      RowBox[{"40049", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"7033", " ", 
       SuperscriptBox["s", "3"]}]}]]}], ",", 
   FractionBox[
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"75075", " ", "bz", " ", 
        SqrtBox[
         RowBox[{"5", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "5"]}], "-", 
       RowBox[{"27755", " ", "bz", " ", 
        SqrtBox[
         RowBox[{"5", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "5"], " ", "s"}], "-", 
       RowBox[{"764820", " ", "bz", " ", 
        SqrtBox[
         RowBox[{"5", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "5"], " ", 
        SuperscriptBox["s", "2"]}], "-", 
       RowBox[{"25316", " ", "bz", " ", 
        SqrtBox[
         RowBox[{"5", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "5"], " ", 
        SuperscriptBox["s", "3"]}], "+", 
       RowBox[{"1555648", " ", "bz", " ", 
        SqrtBox[
         RowBox[{"5", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "5"], " ", 
        SuperscriptBox["s", "4"]}]}], ")"}]}], 
    RowBox[{"5", " ", 
     RowBox[{"(", 
      RowBox[{"675675", "-", 
       RowBox[{"732420", " ", "s"}], "-", 
       RowBox[{"12335580", " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"9782256", " ", 
        SuperscriptBox["s", "3"]}], "+", 
       RowBox[{"9893632", " ", 
        SuperscriptBox["s", "4"]}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"132", " ", "bz", " ", "dz", " ", 
     SqrtBox[
      RowBox[{"7", " ", "\[Pi]"}]], " ", 
     SuperscriptBox["R", "5"], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "9"}], "-", 
       RowBox[{"8", " ", "s"}], "+", 
       SuperscriptBox["s", "2"]}], ")"}]}], 
    RowBox[{"3465", "-", 
     RowBox[{"1617", " ", "s"}], "-", 
     RowBox[{"40049", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"7033", " ", 
      SuperscriptBox["s", "3"]}]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"624", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"825", " ", "bz", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["R", "7"], " ", "s"}], "-", 
        RowBox[{"410", " ", "bz", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["R", "7"], " ", 
         SuperscriptBox["s", "2"]}], "-", 
        RowBox[{"1288", " ", "bz", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["R", "7"], " ", 
         SuperscriptBox["s", "3"]}], "+", 
        RowBox[{"128", " ", "bz", " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["R", "7"], " ", 
         SuperscriptBox["s", "4"]}]}], ")"}]}], 
     RowBox[{"675675", "-", 
      RowBox[{"732420", " ", "s"}], "-", 
      RowBox[{"12335580", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9782256", " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"9893632", " ", 
       SuperscriptBox["s", "4"]}]}]]}], ",", 
   FractionBox[
    RowBox[{"2080", " ", 
     SuperscriptBox["s", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"bz", " ", "dz", " ", 
        SqrtBox[
         RowBox[{"11", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "7"]}], "+", 
       RowBox[{"bz", " ", "dz", " ", 
        SqrtBox[
         RowBox[{"11", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["R", "7"], " ", "s"}]}], ")"}]}], 
    RowBox[{"3465", "-", 
     RowBox[{"1617", " ", "s"}], "-", 
     RowBox[{"40049", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"7033", " ", 
      SuperscriptBox["s", "3"]}]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"547200", " ", 
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "5"}], " ", "bz", " ", 
         SqrtBox[
          RowBox[{"13", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "9"]}], "+", 
        RowBox[{"2", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"13", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "9"], " ", "s"}], "+", 
        RowBox[{"8", " ", "bz", " ", 
         SqrtBox[
          RowBox[{"13", " ", "\[Pi]"}]], " ", 
         SuperscriptBox["R", "9"], " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], 
     RowBox[{"7", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "-", 
        RowBox[{"732420", " ", "s"}], "-", 
        RowBox[{"12335580", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"9782256", " ", 
         SuperscriptBox["s", "3"]}], "+", 
        RowBox[{"9893632", " ", 
         SuperscriptBox["s", "4"]}]}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.929042002382618*^9, 3.929042012431797*^9}, 
   3.929042209030895*^9, 3.9290924872315197`*^9, 3.929094622804432*^9, 
   3.929109749834395*^9, 3.929453490972227*^9, 3.929525611258524*^9, 
   3.9312610758052044`*^9, 3.932480552866308*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"82aa3f78-1974-d146-9388-84b4a715c075"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplified Coefficients ", "Subsection",
 CellChangeTimes->{{3.929042895460495*^9, 
  3.9290429023405857`*^9}},ExpressionUUID->"36a4429f-d33e-2841-83f0-\
8584f874444a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gs", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{"glist", " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"s", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}], "]"}], 
   "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "36"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.929042164555965*^9, 3.929042219088776*^9}, {
  3.929042265481195*^9, 3.929042273787807*^9}, {3.931261081451643*^9, 
  3.931261106604185*^9}, {3.932480737607115*^9, 
  3.93248073969631*^9}},ExpressionUUID->"3dd04e79-55a5-f240-8539-\
579a966ece6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    FractionBox["1", "5"], " ", "bz", " ", "dz", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "3"]], " ", 
    SuperscriptBox["R", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"9", " ", "s"}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["2", "21"], " ", "bz", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "5"]], " ", 
    SuperscriptBox["R", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"7", "+", 
      RowBox[{"5", " ", "s"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["12", "5"]}], " ", "bz", " ", "dz", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "7"]], " ", 
    SuperscriptBox["R", "5"], " ", "s"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["16", "21"]}], " ", "bz", " ", 
    SqrtBox["\[Pi]"], " ", 
    SuperscriptBox["R", "7"], " ", "s"}], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.929042196648388*^9, 3.9290422205081177`*^9}, 
   3.929042274467525*^9, 3.929092489646011*^9, 3.929094624887928*^9, 
   3.929109754515385*^9, 3.92945349351675*^9, 3.929525612918585*^9, 
   3.931261107722788*^9, 3.9324805619907017`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"dae01784-5338-ce4d-889e-c2e521f177f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gold", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"glist", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["s", "2"], "->", "0"}], ",", " ", 
      RowBox[{
       SuperscriptBox["s", "3"], "->", "0"}], ",", " ", 
      RowBox[{
       SuperscriptBox["s", "4"], "->", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.931261225678032*^9, 3.931261260170429*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"aa7325e3-cd64-794d-9141-ad133cc4747f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"5", " ", "bz", " ", "dz", " ", 
      SqrtBox[
       FractionBox["\[Pi]", "3"]], " ", 
      SuperscriptBox["R", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"4", " ", "s"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "15"}], "+", 
      RowBox[{"7", " ", "s"}]}]]}], ",", 
   FractionBox[
    RowBox[{"14", " ", "bz", " ", 
     SqrtBox[
      RowBox[{"5", " ", "\[Pi]"}]], " ", 
     SuperscriptBox["R", "5"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "165"}], "+", 
       RowBox[{"61", " ", "s"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "17325"}], "+", 
     RowBox[{"18780", " ", "s"}]}]], ",", 
   FractionBox[
    RowBox[{"4", " ", "bz", " ", "dz", " ", 
     SqrtBox[
      FractionBox["\[Pi]", "7"]], " ", 
     SuperscriptBox["R", "5"], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{"9", "+", 
       RowBox[{"8", " ", "s"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "15"}], "+", 
     RowBox[{"7", " ", "s"}]}]], ",", 
   FractionBox[
    RowBox[{"880", " ", "bz", " ", 
     SqrtBox["\[Pi]"], " ", 
     SuperscriptBox["R", "7"], " ", "s"}], 
    RowBox[{
     RowBox[{"-", "1155"}], "+", 
     RowBox[{"1252", " ", "s"}]}]], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.9312612503446255`*^9, 3.931261260671772*^9}, 
   3.9324805661319294`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"5c9d5ec5-9b44-8842-bac9-808d4d74cf5c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Passed the test for Sphere ", "Subsection",
 CellChangeTimes->{{3.9290428830495834`*^9, 
  3.9290428889653893`*^9}},ExpressionUUID->"1b9be1ff-84bf-2646-83e8-\
59855525a580"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gtest", " ", "=", " ", 
  RowBox[{"glist", "/.", 
   RowBox[{"{", 
    RowBox[{"s", "->", "0"}], "}"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Eqn", ".", " ", "37"}], "d"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.929042223431473*^9, 3.929042244810425*^9}, {
  3.9324808383313923`*^9, 
  3.932480844118988*^9}},ExpressionUUID->"3a5a4ae8-b76c-f74e-bf78-\
27086b4f1062"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"bz", " ", "dz", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "3"]], " ", 
    SuperscriptBox["R", "3"]}], ",", 
   RowBox[{
    FractionBox["2", "3"], " ", "bz", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "5"]], " ", 
    SuperscriptBox["R", "5"]}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.929042245389879*^9, 3.929092491742438*^9, 
  3.92909462711829*^9, 3.9291097579932613`*^9, 3.929453496324364*^9, 
  3.929525614444929*^9, 3.931261129365797*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"268c97d3-af8c-bb4d-a989-a040e0ac2232"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gtest2", " ", "=", " ", 
  RowBox[{"gs", "/.", 
   RowBox[{"{", 
    RowBox[{"s", "->", "0"}], "}"}], " "}]}]], "Input",
 CellChangeTimes->{{3.9312611324051647`*^9, 3.9312611534933414`*^9}, {
   3.9324808531113186`*^9, 3.9324808572286167`*^9}, 
   3.9324824996550484`*^9},ExpressionUUID->"e885c001-c1d4-834f-bdd3-\
eb1f894ff95c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"bz", " ", "dz", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "3"]], " ", 
    SuperscriptBox["R", "3"]}], ",", 
   RowBox[{
    FractionBox["2", "3"], " ", "bz", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "5"]], " ", 
    SuperscriptBox["R", "5"]}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.931261154348913*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"c1e501bf-1ac0-404f-92a6-38d7443e764a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Calculating the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", 
    RowBox[{"out", " "}]], TraditionalForm]],ExpressionUUID->
  "f9773e42-3f40-f348-93c5-d9fdfb4cd5b8"],
 "from the above calculated simplified coefficients - "
}], "Chapter",
 CellChangeTimes->{{3.929092503028475*^9, 
  3.929092527746763*^9}},ExpressionUUID->"d3d8061c-8d6d-7149-8962-\
ea7e3611cc26"],

Cell[CellGroupData[{

Cell["\<\
Defining the PhiOut and Grad[PhiOut] with the evaluated coefficients \
\>", "Section",
 CellChangeTimes->{{3.929093374287119*^9, 
  3.9290934083459454`*^9}},ExpressionUUID->"c550692a-4a51-2e42-a861-\
b26c4732807a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PhiOutSpheroid", "[", 
   RowBox[{"r_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "^", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}]}]}], "*", 
     RowBox[{"glist", "[", 
      RowBox[{"[", 
       RowBox[{"n", "+", "1"}], "]"}], "]"}], "*", " ", 
     RowBox[{"SphericalHarmonicY", "[", 
      RowBox[{"n", ",", " ", "0", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "6"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "38"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9290932849549274`*^9, 3.929093286784474*^9}, {
   3.9324811872982597`*^9, 3.932481188217636*^9}, 
   3.932482502408476*^9},ExpressionUUID->"633e20b6-60fe-8243-8612-\
7d5ca776fd20"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"40", " ", "bz", " ", 
    SuperscriptBox["R", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "6435"}], " ", 
       SuperscriptBox["s", "2"]}], "-", 
      RowBox[{"76986", " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"82144", " ", 
       SuperscriptBox["s", "4"]}]}], ")"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"(", 
     RowBox[{"675675", "-", 
      RowBox[{"732420", " ", "s"}], "-", 
      RowBox[{"12335580", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9782256", " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"9893632", " ", 
       SuperscriptBox["s", "4"]}]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"35", " ", "bz", " ", "dz", " ", 
    SuperscriptBox["R", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "99"}], "-", 
      RowBox[{"132", " ", "s"}], "+", 
      RowBox[{"703", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"1336", " ", 
       SuperscriptBox["s", "3"]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["r", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"3465", "-", 
      RowBox[{"1617", " ", "s"}], "-", 
      RowBox[{"40049", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"7033", " ", 
       SuperscriptBox["s", "3"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"75075", " ", "bz", " ", 
       SqrtBox[
        RowBox[{"5", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "5"]}], "-", 
      RowBox[{"27755", " ", "bz", " ", 
       SqrtBox[
        RowBox[{"5", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "5"], " ", "s"}], "-", 
      RowBox[{"764820", " ", "bz", " ", 
       SqrtBox[
        RowBox[{"5", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "5"], " ", 
       SuperscriptBox["s", "2"]}], "-", 
      RowBox[{"25316", " ", "bz", " ", 
       SqrtBox[
        RowBox[{"5", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "5"], " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"1555648", " ", "bz", " ", 
       SqrtBox[
        RowBox[{"5", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "5"], " ", 
       SuperscriptBox["s", "4"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{"5", " ", "\[Pi]"}]], " ", 
    SuperscriptBox["r", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"675675", "-", 
      RowBox[{"732420", " ", "s"}], "-", 
      RowBox[{"12335580", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9782256", " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"9893632", " ", 
       SuperscriptBox["s", "4"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"231", " ", "bz", " ", "dz", " ", 
    SuperscriptBox["R", "5"], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "9"}], "-", 
      RowBox[{"8", " ", "s"}], "+", 
      SuperscriptBox["s", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["r", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"3465", "-", 
      RowBox[{"1617", " ", "s"}], "-", 
      RowBox[{"40049", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"7033", " ", 
       SuperscriptBox["s", "3"]}]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"117", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"825", " ", "bz", " ", 
       SqrtBox["\[Pi]"], " ", 
       SuperscriptBox["R", "7"], " ", "s"}], "-", 
      RowBox[{"410", " ", "bz", " ", 
       SqrtBox["\[Pi]"], " ", 
       SuperscriptBox["R", "7"], " ", 
       SuperscriptBox["s", "2"]}], "-", 
      RowBox[{"1288", " ", "bz", " ", 
       SqrtBox["\[Pi]"], " ", 
       SuperscriptBox["R", "7"], " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"128", " ", "bz", " ", 
       SqrtBox["\[Pi]"], " ", 
       SuperscriptBox["R", "7"], " ", 
       SuperscriptBox["s", "4"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"30", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"35", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SuperscriptBox["r", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"675675", "-", 
      RowBox[{"732420", " ", "s"}], "-", 
      RowBox[{"12335580", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9782256", " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"9893632", " ", 
       SuperscriptBox["s", "4"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"130", " ", 
    SqrtBox[
     FractionBox["11", "\[Pi]"]], " ", 
    SuperscriptBox["s", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bz", " ", "dz", " ", 
       SqrtBox[
        RowBox[{"11", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "7"]}], "+", 
      RowBox[{"bz", " ", "dz", " ", 
       SqrtBox[
        RowBox[{"11", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "7"], " ", "s"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"15", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"70", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
      RowBox[{"63", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["r", "6"], " ", 
    RowBox[{"(", 
     RowBox[{"3465", "-", 
      RowBox[{"1617", " ", "s"}], "-", 
      RowBox[{"40049", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"7033", " ", 
       SuperscriptBox["s", "3"]}]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"17100", " ", 
    SqrtBox[
     FractionBox["13", "\[Pi]"]], " ", 
    SuperscriptBox["s", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "5"}], " ", "bz", " ", 
       SqrtBox[
        RowBox[{"13", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "9"]}], "+", 
      RowBox[{"2", " ", "bz", " ", 
       SqrtBox[
        RowBox[{"13", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "9"], " ", "s"}], "+", 
      RowBox[{"8", " ", "bz", " ", 
       SqrtBox[
        RowBox[{"13", " ", "\[Pi]"}]], " ", 
       SuperscriptBox["R", "9"], " ", 
       SuperscriptBox["s", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"105", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{"315", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
      RowBox[{"231", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}]}], ")"}]}], 
   RowBox[{"7", " ", 
    SuperscriptBox["r", "7"], " ", 
    RowBox[{"(", 
     RowBox[{"675675", "-", 
      RowBox[{"732420", " ", "s"}], "-", 
      RowBox[{"12335580", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9782256", " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{"9893632", " ", 
       SuperscriptBox["s", "4"]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.929093304391756*^9, 3.929094629231741*^9, 
  3.9291097753700485`*^9, 3.929453499749201*^9, 3.929525616893064*^9, 
  3.931261567092312*^9, 3.9324811906386375`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"1b7cc14d-a005-d54e-af6e-5a27e5b6bc3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grad[PhiOut]", "Subsection",
 CellChangeTimes->{{3.929093463685316*^9, 
  3.929093476966675*^9}},ExpressionUUID->"506991fa-b615-2c47-a077-\
0896510f307a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GradPhiSpheroid", "[", 
   RowBox[{"r_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"PhiOutSpheroid", "[", 
      RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "}"}], ",", 
     " ", "\"\<Spherical\>\""}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "39"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.932482505912983*^9, 
  3.932482510100149*^9}},ExpressionUUID->"b610206d-4698-8f4b-9532-\
a455536e4799"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", 
      SuperscriptBox["r", "8"]}]], 
    RowBox[{"bz", " ", 
     SuperscriptBox["R", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"320", " ", 
          SuperscriptBox["r", "6"], " ", 
          SuperscriptBox["s", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6435"}], "-", 
            RowBox[{"76986", " ", "s"}], "+", 
            RowBox[{"82144", " ", 
             SuperscriptBox["s", "2"]}]}], ")"}]}], 
         RowBox[{"675675", "+", 
          RowBox[{"4", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "183105"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3083895"}], "+", 
                RowBox[{"4", " ", "s", " ", 
                 RowBox[{"(", 
                  RowBox[{"611391", "+", 
                   RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]]}], "+", 
       FractionBox[
        RowBox[{"280", " ", "dz", " ", 
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "99"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "132"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"703", "+", 
                 RowBox[{"1336", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
         " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{"3465", "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1617"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "40049"}], "+", 
               RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "-", 
       FractionBox[
        RowBox[{"18", " ", 
         SuperscriptBox["r", "4"], " ", 
         SuperscriptBox["R", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"75075", "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "27755"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "191205"}], "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6329"}], "+", 
                    RowBox[{"388912", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"675675", "+", 
         RowBox[{"4", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "183105"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3083895"}], "+", 
               RowBox[{"4", " ", "s", " ", 
                RowBox[{"(", 
                 RowBox[{"611391", "+", 
                  RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}]], "-", 
       FractionBox[
        RowBox[{"1848", " ", "dz", " ", 
         SuperscriptBox["r", "3"], " ", 
         SuperscriptBox["R", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"5", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"3465", "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1617"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "40049"}], "+", 
               RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "+", 
       FractionBox[
        RowBox[{"585", " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["R", "4"], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "165"}], "+", 
           RowBox[{"16", " ", "s"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"2", " ", "s"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["s", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"9", "+", 
           RowBox[{"20", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"35", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"675675", "+", 
         RowBox[{"4", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "183105"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3083895"}], "+", 
               RowBox[{"4", " ", "s", " ", 
                RowBox[{"(", 
                 RowBox[{"611391", "+", 
                  RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}]], "-", 
       FractionBox[
        RowBox[{"4290", " ", "dz", " ", "r", " ", 
         SuperscriptBox["R", "4"], " ", 
         SuperscriptBox["s", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"30", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"35", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"63", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"3465", "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1617"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "40049"}], "+", 
               RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "+", 
       FractionBox[
        RowBox[{"55575", " ", 
         SuperscriptBox["R", "6"], " ", 
         SuperscriptBox["s", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"2", " ", "s"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["s", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"50", "+", 
           RowBox[{"105", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"126", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"231", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"6", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"675675", "+", 
         RowBox[{"4", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "183105"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3083895"}], "+", 
               RowBox[{"4", " ", "s", " ", 
                RowBox[{"(", 
                 RowBox[{"611391", "+", 
                  RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}]]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", 
      SuperscriptBox["r", "8"]}]], 
    RowBox[{"bz", " ", 
     SuperscriptBox["R", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"140", " ", "dz", " ", 
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "99"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "132"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"703", "+", 
                 RowBox[{"1336", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
         " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{"3465", "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1617"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "40049"}], "+", 
               RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "-", 
       FractionBox[
        RowBox[{"36", " ", 
         SuperscriptBox["r", "4"], " ", 
         SuperscriptBox["R", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"75075", "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "27755"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "191205"}], "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6329"}], "+", 
                    RowBox[{"388912", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
        RowBox[{"675675", "+", 
         RowBox[{"4", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "183105"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3083895"}], "+", 
               RowBox[{"4", " ", "s", " ", 
                RowBox[{"(", 
                 RowBox[{"611391", "+", 
                  RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}]], "-", 
       FractionBox[
        RowBox[{"1386", " ", "dz", " ", 
         SuperscriptBox["r", "3"], " ", 
         SuperscriptBox["R", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
           RowBox[{"5", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"3465", "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1617"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "40049"}], "+", 
               RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "+", 
       FractionBox[
        RowBox[{"2340", " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["R", "4"], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "165"}], "+", 
           RowBox[{"16", " ", "s"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"2", " ", "s"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["s", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"7", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"675675", "+", 
         RowBox[{"4", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "183105"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3083895"}], "+", 
               RowBox[{"4", " ", "s", " ", 
                RowBox[{"(", 
                 RowBox[{"611391", "+", 
                  RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}]], "-", 
       FractionBox[
        RowBox[{"10725", " ", "dz", " ", "r", " ", 
         SuperscriptBox["R", "4"], " ", 
         SuperscriptBox["s", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"7", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"3", " ", "\[Theta]"}], "]"}], "+", 
              RowBox[{"3", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"3465", "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1617"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "40049"}], "+", 
               RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "+", 
       FractionBox[
        RowBox[{"333450", " ", 
         SuperscriptBox["R", "6"], " ", 
         SuperscriptBox["s", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"2", " ", "s"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["s", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"33", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"6", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"675675", "+", 
         RowBox[{"4", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "183105"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3083895"}], "+", 
               RowBox[{"4", " ", "s", " ", 
                RowBox[{"(", 
                 RowBox[{"611391", "+", 
                  RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}]]}], ")"}]}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.929093369540985*^9, 3.929094638806534*^9, 
  3.929109785781693*^9, 3.929453512317093*^9, 3.9295256257304993`*^9, 
  3.93126157964085*^9, 3.932481214687481*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"af987a57-eb82-1144-955f-bc639f376de2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Final Expression of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "out"], TraditionalForm]],ExpressionUUID->
  "0437e411-eb00-8e44-8115-8bd60bab28d7"],
 " for Spheroid "
}], "Subsection",
 CellChangeTimes->{{3.92909349249609*^9, 
  3.9290935052903194`*^9}},ExpressionUUID->"73a579cb-e0fe-9347-8ae2-\
8f2fbbd1d0a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BoutSpheroid", "[", 
   RowBox[{"r_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
  " ", 
  RowBox[{
   RowBox[{"B0Spherical", "[", 
    RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "-", 
   RowBox[{"GradPhiSpheroid", "[", 
    RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Eqn", ".", " ", "40"}], "d"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.9324825147878056`*^9, 
  3.932482519858692*^9}},ExpressionUUID->"a3b0cee1-4436-b04b-a8f9-\
a073d16c3a49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", "bz", " ", 
     RowBox[{"(", 
      RowBox[{"r", "+", 
       RowBox[{"4", " ", "dz", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"3", " ", "r", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "8"]}]], 
     RowBox[{"bz", " ", 
      SuperscriptBox["R", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"320", " ", 
           SuperscriptBox["r", "6"], " ", 
           SuperscriptBox["s", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6435"}], "-", 
             RowBox[{"76986", " ", "s"}], "+", 
             RowBox[{"82144", " ", 
              SuperscriptBox["s", "2"]}]}], ")"}]}], 
          RowBox[{"675675", "+", 
           RowBox[{"4", " ", "s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "183105"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3083895"}], "+", 
                 RowBox[{"4", " ", "s", " ", 
                  RowBox[{"(", 
                   RowBox[{"611391", "+", 
                    RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}]]}], "+", 
        FractionBox[
         RowBox[{"280", " ", "dz", " ", 
          SuperscriptBox["r", "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "99"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "132"}], "+", 
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{"703", "+", 
                  RowBox[{"1336", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{"3465", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1617"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "40049"}], "+", 
                RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "-", 
        FractionBox[
         RowBox[{"18", " ", 
          SuperscriptBox["r", "4"], " ", 
          SuperscriptBox["R", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"75075", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "27755"}], "+", 
               RowBox[{"4", " ", "s", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "191205"}], "+", 
                  RowBox[{"s", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6329"}], "+", 
                    RowBox[{"388912", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"675675", "+", 
          RowBox[{"4", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "183105"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3083895"}], "+", 
                RowBox[{"4", " ", "s", " ", 
                 RowBox[{"(", 
                  RowBox[{"611391", "+", 
                   RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]], "-", 
        FractionBox[
         RowBox[{"1848", " ", "dz", " ", 
          SuperscriptBox["r", "3"], " ", 
          SuperscriptBox["R", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"5", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"3465", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1617"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "40049"}], "+", 
                RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "+", 
        FractionBox[
         RowBox[{"585", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["R", "4"], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "165"}], "+", 
            RowBox[{"16", " ", "s"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"2", " ", "s"}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"9", "+", 
            RowBox[{"20", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"35", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"675675", "+", 
          RowBox[{"4", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "183105"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3083895"}], "+", 
                RowBox[{"4", " ", "s", " ", 
                 RowBox[{"(", 
                  RowBox[{"611391", "+", 
                   RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]], "-", 
        FractionBox[
         RowBox[{"4290", " ", "dz", " ", "r", " ", 
          SuperscriptBox["R", "4"], " ", 
          SuperscriptBox["s", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"30", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"35", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"63", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"3465", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1617"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "40049"}], "+", 
                RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "+", 
        FractionBox[
         RowBox[{"55575", " ", 
          SuperscriptBox["R", "6"], " ", 
          SuperscriptBox["s", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"2", " ", "s"}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"50", "+", 
            RowBox[{"105", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"126", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"231", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"6", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"675675", "+", 
          RowBox[{"4", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "183105"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3083895"}], "+", 
                RowBox[{"4", " ", "s", " ", 
                 RowBox[{"(", 
                  RowBox[{"611391", "+", 
                   RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", "bz", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "dz"}], "+", 
       RowBox[{"3", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "8"]}]], 
     RowBox[{"bz", " ", 
      SuperscriptBox["R", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"140", " ", "dz", " ", 
          SuperscriptBox["r", "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "99"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "132"}], "+", 
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{"703", "+", 
                  RowBox[{"1336", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{"3465", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1617"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "40049"}], "+", 
                RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "-", 
        FractionBox[
         RowBox[{"36", " ", 
          SuperscriptBox["r", "4"], " ", 
          SuperscriptBox["R", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"75075", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "27755"}], "+", 
               RowBox[{"4", " ", "s", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "191205"}], "+", 
                  RowBox[{"s", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6329"}], "+", 
                    RowBox[{"388912", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
         RowBox[{"675675", "+", 
          RowBox[{"4", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "183105"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3083895"}], "+", 
                RowBox[{"4", " ", "s", " ", 
                 RowBox[{"(", 
                  RowBox[{"611391", "+", 
                   RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]], "-", 
        FractionBox[
         RowBox[{"1386", " ", "dz", " ", 
          SuperscriptBox["r", "3"], " ", 
          SuperscriptBox["R", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
            RowBox[{"5", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"3465", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1617"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "40049"}], "+", 
                RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "+", 
        FractionBox[
         RowBox[{"2340", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["R", "4"], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "165"}], "+", 
            RowBox[{"16", " ", "s"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"2", " ", "s"}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"7", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"675675", "+", 
          RowBox[{"4", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "183105"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3083895"}], "+", 
                RowBox[{"4", " ", "s", " ", 
                 RowBox[{"(", 
                  RowBox[{"611391", "+", 
                   RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]], "-", 
        FractionBox[
         RowBox[{"10725", " ", "dz", " ", "r", " ", 
          SuperscriptBox["R", "4"], " ", 
          SuperscriptBox["s", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"7", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", "\[Theta]"}], "]"}], "+", 
               RowBox[{"3", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], 
         RowBox[{"3465", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1617"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "40049"}], "+", 
                RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}]], "+", 
        FractionBox[
         RowBox[{"333450", " ", 
          SuperscriptBox["R", "6"], " ", 
          SuperscriptBox["s", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"2", " ", "s"}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"5", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"12", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"33", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"6", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"675675", "+", 
          RowBox[{"4", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "183105"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3083895"}], "+", 
                RowBox[{"4", " ", "s", " ", 
                 RowBox[{"(", 
                  RowBox[{"611391", "+", 
                   RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]]}], ")"}]}]}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.929093447686787*^9, 3.92909464159043*^9, 
  3.929109785913214*^9, 3.9294535124486103`*^9, 3.9295256258646774`*^9, 
  3.9312615891509075`*^9, 3.932481224171217*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"ff807da6-9390-9347-99b0-dbdddbf4912a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "out"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "385353ab-139c-584a-bfbe-aa8963ff3809"],
 " at surface of spheroid is given as - "
}], "Subsection",
 CellChangeTimes->{{3.929093515607567*^9, 
  3.9290935290862274`*^9}},ExpressionUUID->"498f230a-1122-3c48-80e8-\
60d0b7e54cec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BoutSpheroidSurface", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"BoutSpheroid", "[", 
      RowBox[{
       RowBox[{"rSpheroid", "[", "\[Theta]", "]"}], ",", " ", "\[Theta]", ",",
        " ", "\[Phi]"}], "]"}], "/.", 
     RowBox[{"\[Epsilon]", "->", " ", 
      RowBox[{"R", " ", "s"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"R", "-", 
      RowBox[{"R", " ", "s", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}]}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "41"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.929093563346302*^9, 3.929093604666321*^9}, {
  3.9324825276209145`*^9, 
  3.932482529956335*^9}},ExpressionUUID->"0fdff171-7501-2141-8f45-\
301270cbf801"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "bz"}], " ", "dz", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    FractionBox[
     RowBox[{"9", " ", "bz", " ", 
      SuperscriptBox["R", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"75075", "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "27755"}], "+", 
           RowBox[{"4", " ", "s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "191205"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6329"}], "+", 
                 RowBox[{"388912", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "+", 
        RowBox[{"4", " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "183105"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3083895"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"611391", "+", 
                 RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "4"]}]], "-", 
    FractionBox[
     RowBox[{"35", " ", "bz", " ", "dz", " ", 
      SuperscriptBox["R", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "99"}], "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "132"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{"703", "+", 
              RowBox[{"1336", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3465", "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1617"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "40049"}], "+", 
              RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "3"]}]], "+", 
    FractionBox[
     RowBox[{"40", " ", "bz", " ", 
      SuperscriptBox["R", "3"], " ", 
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6435"}], "-", 
        RowBox[{"76986", " ", "s"}], "+", 
        RowBox[{"82144", " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"675675", "+", 
        RowBox[{"4", " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "183105"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3083895"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"611391", "+", 
                 RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]], "-", 
    RowBox[{
     FractionBox["1", "4"], " ", "bz", " ", 
     RowBox[{"(", 
      RowBox[{"R", "-", 
       RowBox[{"R", " ", "s", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["3", "4"], " ", "bz", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"R", "-", 
       RowBox[{"R", " ", "s", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{"231", " ", "bz", " ", "dz", " ", 
      SuperscriptBox["R", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"5", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3465", "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1617"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "40049"}], "+", 
              RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "5"]}]], "-", 
    FractionBox[
     RowBox[{"585", " ", "bz", " ", 
      SuperscriptBox["R", "7"], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "165"}], "+", 
        RowBox[{"16", " ", "s"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"2", " ", "s"}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["s", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"20", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{"35", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "+", 
        RowBox[{"4", " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "183105"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3083895"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"611391", "+", 
                 RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "6"]}]], "+", 
    FractionBox[
     RowBox[{"2145", " ", "bz", " ", "dz", " ", 
      SuperscriptBox["R", "7"], " ", 
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"30", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"35", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{"63", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"3465", "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1617"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "40049"}], "+", 
              RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "7"]}]], "-", 
    FractionBox[
     RowBox[{"55575", " ", "bz", " ", 
      SuperscriptBox["R", "9"], " ", 
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"2", " ", "s"}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["s", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"50", "+", 
        RowBox[{"105", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{"126", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{"231", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"6", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "+", 
        RowBox[{"4", " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "183105"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3083895"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"611391", "+", 
                 RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "8"]}]]}], ",", 
   RowBox[{
    RowBox[{"bz", " ", "dz", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    FractionBox[
     RowBox[{"35", " ", "bz", " ", "dz", " ", 
      SuperscriptBox["R", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "99"}], "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "132"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{"703", "+", 
              RowBox[{"1336", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"3465", "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1617"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "40049"}], "+", 
              RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "3"]}]], "+", 
    RowBox[{
     FractionBox["3", "2"], " ", "bz", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"R", "-", 
       RowBox[{"R", " ", "s", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    FractionBox[
     RowBox[{"9", " ", "bz", " ", 
      SuperscriptBox["R", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"75075", "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "27755"}], "+", 
           RowBox[{"4", " ", "s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "191205"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6329"}], "+", 
                 RowBox[{"388912", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "+", 
        RowBox[{"4", " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "183105"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3083895"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"611391", "+", 
                 RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "4"]}]], "+", 
    FractionBox[
     RowBox[{"693", " ", "bz", " ", "dz", " ", 
      SuperscriptBox["R", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "9"}], "+", "s"}], ")"}], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
        RowBox[{"5", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"3465", "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1617"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "40049"}], "+", 
              RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "5"]}]], "-", 
    FractionBox[
     RowBox[{"585", " ", "bz", " ", 
      SuperscriptBox["R", "7"], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "165"}], "+", 
        RowBox[{"16", " ", "s"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"2", " ", "s"}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["s", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{"7", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "+", 
        RowBox[{"4", " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "183105"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3083895"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"611391", "+", 
                 RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "6"]}]], "+", 
    FractionBox[
     RowBox[{"10725", " ", "bz", " ", "dz", " ", 
      SuperscriptBox["R", "7"], " ", 
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"7", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "\[Theta]"}], "]"}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"3465", "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1617"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "40049"}], "+", 
              RowBox[{"7033", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "7"]}]], "-", 
    FractionBox[
     RowBox[{"166725", " ", "bz", " ", 
      SuperscriptBox["R", "9"], " ", 
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"2", " ", "s"}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["s", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{"12", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{"33", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"6", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"675675", "+", 
        RowBox[{"4", " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "183105"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3083895"}], "+", 
              RowBox[{"4", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"611391", "+", 
                 RowBox[{"618352", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"R", "-", 
         RowBox[{"R", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "8"]}]]}], ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{3.929093570322237*^9, 3.929093605705883*^9, 
  3.9290946479126496`*^9, 3.929109786467915*^9, 3.92945351251762*^9, 
  3.92952562591506*^9, 3.93126159760487*^9, 3.932481230190319*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"58087e44-a412-ba49-9a7b-149673b86910"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Taylor Expanding ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "out"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a9303569-bb8c-864c-b080-dfb7ffdd0680"],
 " at surface of spheroid to calculate the Force -"
}], "Subsection",
 CellChangeTimes->{{3.9290936822251034`*^9, 3.9290937076352844`*^9}, {
  3.9290937877389107`*^9, 
  3.929093792233013*^9}},ExpressionUUID->"27de8667-9675-b440-bd5f-\
dc040846a175"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BoutSurfaceSimplified", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"BoutSpheroidSurface", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"s", ",", " ", "0", " ", ",", "1"}], "}"}]}], "]"}], "]"}], 
   "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "42"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.929093823491604*^9, 3.929093872206637*^9}, {
  3.9294568194509907`*^9, 3.9294568362274437`*^9}, {3.932482554137972*^9, 
  3.9324825568390484`*^9}},ExpressionUUID->"9e733730-addd-ea4c-a406-\
fadd7fba9a70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "bz", " ", "s", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "dz"}], "+", 
      RowBox[{"5", " ", "R", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "140"]}], " ", "bz", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"25", " ", "R", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "14"}], "+", 
         RowBox[{"25", " ", "s"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"42", " ", "dz", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"6", " ", "s"}], "+", 
         RowBox[{"10", " ", "s", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{"525", " ", "R", " ", "s", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.9290938583107786`*^9, 3.9290938726090755`*^9}, 
   3.929094651536734*^9, 3.929109789923731*^9, 3.929453512680385*^9, {
   3.9294568261378365`*^9, 3.9294568375309715`*^9}, 3.9295256264514465`*^9, 
   3.9312616161612873`*^9, 3.9324812695618954`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"a2a55f5b-352f-3643-9a73-b33cf8fdfcbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Calculating the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "amp"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "13fc590d-9009-904d-be71-601c92e65e43"],
 " for the surface of the Spheroid "
}], "Section",
 CellChangeTimes->{{3.9290946630556297`*^9, 
  3.929094678265543*^9}},ExpressionUUID->"46534c43-2a99-ff4e-96b3-\
f9e3cdc6b09a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BampSurfaceSimplified", "[", 
   RowBox[{
   "\[Theta]_", ",", " ", "bz_", ",", " ", "R_", ",", " ", "s_", ",", " ", 
    "dz_"}], "]"}], "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Refine", "[", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{"BoutSurfaceSimplified", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], ">", "0"}], "}"}]}], "]"}], 
   "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eqn", ".", " ", "43"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.929094688863844*^9, 3.929094805344679*^9}, {
  3.929096297962652*^9, 3.929096299807186*^9}, {3.92909637124531*^9, 
  3.929096371446562*^9}, {3.9324825602991657`*^9, 
  3.932482564208967*^9}},ExpressionUUID->"99a16506-7abe-0747-aed1-\
41c105df2d29"],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"bz", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"25", " ", "R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "14"}], "+", 
              RowBox[{"25", " ", "s"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"42", " ", "dz", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"6", " ", "s"}], "+", 
              RowBox[{"10", " ", "s", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"525", " ", "R", " ", "s", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "]"}], "2"], 
      " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "19600"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"bz", " ", "s", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "dz"}], "+", 
          RowBox[{"5", " ", "R", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], "2"], 
     " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.929094717371859*^9, 3.929094731659378*^9}, {
   3.929094766724266*^9, 3.9290948083796215`*^9}, 3.929096305609543*^9, 
   3.929109798916121*^9, 3.9294535202845764`*^9, 3.9295256331450605`*^9, 
   3.93126164247867*^9, 3.932481305391083*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"7eac0a6b-760d-5449-9c8c-85337b471277"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plotting ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "amp"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ded88665-0bf1-4f49-9503-2f89dec51cd3"],
 " at Surface with respect to \[Theta]"
}], "Section",
 CellChangeTimes->{{3.929095011290745*^9, 
  3.92909503039122*^9}},ExpressionUUID->"5106ec27-050f-1d42-9347-\
112df8349b3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"BampSurfaceSimplified", "[", 
       RowBox[{
       "\[Theta]", ",", " ", "bz", ",", " ", "R", ",", " ", "s", ",", " ", 
        "dz"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Subdivide", "[", 
          RowBox[{"0", ",", " ", "\[Pi]", ",", " ", "10"}], "]"}], ",", " ", 
         "Automatic"}], "}"}]}], ",", " ", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", 
         SubscriptBox["B", "amp"]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Pi]"}], "}"}], ",", " ", "Automatic"}], 
        "}"}]}], ",", " ", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<\!\(\*SubscriptBox[\(B\), \(amp\)]\) Vs \[Theta]\>\""}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", " ", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["\[Pi]", "10"], ",", 
           FractionBox[
            RowBox[{"2", "\[Pi]"}], "10"], ",", 
           FractionBox[
            RowBox[{"3", "\[Pi]"}], "10"], ",", 
           FractionBox[
            RowBox[{"4", "\[Pi]"}], "10"], ",", 
           FractionBox[
            RowBox[{"5", "\[Pi]"}], "10"], ",", 
           FractionBox[
            RowBox[{"6", "\[Pi]"}], "10"], ",", 
           FractionBox[
            RowBox[{"7", "\[Pi]"}], "10"], ",", 
           FractionBox[
            RowBox[{"8", "\[Pi]"}], "10"], ",", 
           FractionBox[
            RowBox[{"9", "\[Pi]"}], "10"], ",", 
           FractionBox[
            RowBox[{"10", "\[Pi]"}], "10"]}], " ", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0.000", ",", ".001", ",", "0.002", ",", "0.003", ",", "0.004", ",",
            "0.005", ",", "0.006"}], "}"}]}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"R", ",", " ", 
        RowBox[{"40", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]]}], ",", " ", "\"\<Radius\>\""}], "}"}], ",", 
      " ", 
      RowBox[{"20", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "9"}]]}], ",", " ", 
      RowBox[{"10000", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dz", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]], ",", " ", "\"\<Displacement\>\""}], "}"}], ",", 
      " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], ",", " ", 
      RowBox[{"10", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]]}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", ",", " ", "0", ",", " ", "\"\<Deformity Index\>\""}], 
       "}"}], ",", " ", 
      RowBox[{"-", "0.1"}], ",", "0.1"}], " ", "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bz", ",", " ", "100", ",", " ", "\"\<Magnetic field\>\""}], 
       "}"}], ",", "  ", "100", ",", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]]}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Fig", ".", " ", "2"}], "d"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9290948318896675`*^9, 3.929094886123293*^9}, {
   3.929094948388459*^9, 3.929094973056391*^9}, {3.9290963098330917`*^9, 
   3.929096311898069*^9}, {3.92911432708864*^9, 3.9291143396847*^9}, {
   3.929114417122162*^9, 3.929114440290516*^9}, {3.929114600305689*^9, 
   3.929114601208123*^9}, {3.9291146399115105`*^9, 3.929114641578362*^9}, {
   3.929115378121537*^9, 3.929115404376318*^9}, {3.929453784386835*^9, 
   3.929453867722235*^9}, {3.929453915901003*^9, 3.929453976892311*^9}, {
   3.929454113459997*^9, 3.929454147948784*^9}, {3.9294542047952747`*^9, 
   3.929454301441397*^9}, {3.929525659756321*^9, 3.929525703037976*^9}, {
   3.929525865534298*^9, 3.929525881381413*^9}, 3.932481353237871*^9, {
   3.932482172874321*^9, 3.9324821884597244`*^9}, {3.932482242200754*^9, 
   3.9324823872774887`*^9}, {3.93248258067424*^9, 
   3.932482584298872*^9}},ExpressionUUID->"7a6eae09-75fc-a342-92b3-\
1a35329c04f3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bz$$ = 100, $CellContext`dz$$ = Rational[
    1, 100000], $CellContext`R$$ = Rational[1, 25000], $CellContext`s$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`R$$], 
       Rational[1, 25000], "Radius"}, 
      Rational[1, 50000000], 
      Rational[1, 100], ControlType -> Manipulator}, {{
       Hold[$CellContext`dz$$], 
       Rational[1, 100000], "Displacement"}, 
      Rational[1, 100000], 
      Rational[1, 10000], ControlType -> Manipulator}, {{
       Hold[$CellContext`s$$], 0, "Deformity Index"}, -0.1, 0.1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`bz$$], 100, "Magnetic field"}, 100, 
      Rational[1, 1000], ControlType -> Manipulator}}, Typeset`size$$ = {
    360., {114.5852187650809, 120.3171523588309}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bz$$ = 100, $CellContext`dz$$ = 
        Rational[1, 100000], $CellContext`R$$ = 
        Rational[1, 25000], $CellContext`s$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Plot[
        $CellContext`BampSurfaceSimplified[$CellContext`\[Theta], \
$CellContext`bz$$, $CellContext`R$$, $CellContext`s$$, $CellContext`dz$$], \
{$CellContext`\[Theta], 0, Pi}, Ticks -> {
          Subdivide[0, Pi, 10], Automatic}, 
        AxesLabel -> {$CellContext`\[Theta], 
          Subscript[$CellContext`B, $CellContext`amp]}, 
        PlotRange -> {{0, Pi}, Automatic}, PlotLabel -> 
        "\!\(\*SubscriptBox[\(B\), \(amp\)]\) Vs \[Theta]", Frame -> True, 
        GridLines -> {{
          Pi/10, 2 Pi/10, 3 Pi/10, 4 Pi/10, 5 Pi/10, 6 Pi/10, 7 Pi/10, 8 Pi/
           10, 9 Pi/10, 10 Pi/10}, {0., 0.001, 0.002, 0.003, 0.004, 0.005, 
          0.006}}], "Specifications" :> {{{$CellContext`R$$, 
          Rational[1, 25000], "Radius"}, 
         Rational[1, 50000000], 
         Rational[1, 100]}, {{$CellContext`dz$$, 
          Rational[1, 100000], "Displacement"}, 
         Rational[1, 100000], 
         Rational[1, 10000]}, {{$CellContext`s$$, 0, "Deformity Index"}, -0.1,
          0.1}, {{$CellContext`bz$$, 100, "Magnetic field"}, 100, 
         Rational[1, 1000]}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{
      677.97984375, {142.79605860883092`, 148.52799220258092`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9291153894365826`*^9, 3.929115405194103*^9}, 
   3.929453521086731*^9, {3.929453921763597*^9, 3.9294539467686787`*^9}, 
   3.929453980470819*^9, {3.9294541197067127`*^9, 3.929454128445858*^9}, {
   3.929454290389427*^9, 3.929454302459741*^9}, 3.9294543700728188`*^9, 
   3.929525703624885*^9, 3.92952588215275*^9, 3.931261648996172*^9, {
   3.9312618464999657`*^9, 3.93126185218384*^9}, 3.931262031736988*^9, 
   3.9324813159785137`*^9, 3.932481353852558*^9, {3.932482179638464*^9, 
   3.9324821930785713`*^9}, {3.9324822466963806`*^9, 3.932482387641117*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"1479c7f5-9174-4c4f-814e-46282e33597e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.92911014439168*^9, 3.929110149827854*^9}, 
   3.9291154307476482`*^9},ExpressionUUID->"778e5984-0d0c-824f-9ac7-\
f1ea5d263f28"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.9290949534028625`*^9},ExpressionUUID->"0bf7c1f4-e466-c744-b543-\
b77ab8c17e2c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of the Solution", "Title",
 CellChangeTimes->{{3.928489933683944*^9, 3.928489962051258*^9}, {
   3.9284901088898506`*^9, 3.928490114839321*^9}, 3.9290939441474895`*^9},
 TextAlignment->Center,ExpressionUUID->"c5ca7005-f706-d24f-a639-6c632681e1b8"],

Cell["\<\
The next part for Force calculation is given in the notebook - \
\[OpenCurlyDoubleQuote]Force for the spheroid\[CloseCurlyDoubleQuote]. \
\>", "Subtitle",
 CellChangeTimes->{{3.9290941783671856`*^9, 3.929094216098414*^9}, {
  3.929178546779192*^9, 3.9291785601853676`*^9}},
 TextAlignment->Center,ExpressionUUID->"57ffbf6b-e975-f747-b2ea-634f9a748bec"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.928489904039484*^9},ExpressionUUID->"7a874adc-5856-b144-9f6d-\
3a05db13eea7"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.928489907846363*^9},ExpressionUUID->"bd1cfe14-e9a9-bd48-83a7-\
8e9cc0ac3d09"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.9284899069580936`*^9},ExpressionUUID->"6bd208ee-9552-c445-ab1a-\
745eb07b0a59"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9284899050842876`*^9, 
  3.928489905811491*^9}},ExpressionUUID->"5cfac28d-eb1f-3343-8f9a-\
0603fed93df7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9278099219868565`*^9, 3.927809987984356*^9}, {
   3.927810051794638*^9, 3.927810072116814*^9}, 3.927810394305401*^9, {
   3.927810891906769*^9, 
   3.927810916961529*^9}},ExpressionUUID->"4221223f-a9e2-ed46-bdc5-\
4cc03f34d258"]
}, Open  ]]
},
WindowSize->{948, 460},
WindowMargins->{{0.5, Automatic}, {Automatic, 0.5}},
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, WindowSize -> {582, 382}, 
  WindowMargins -> {{0, Automatic}, {Automatic, 0}}, Visible -> False, 
  FrontEndVersion -> "14.1 for Microsoft Windows (64-bit) (July 16, 2024)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"c1e1784a-e19e-9b4b-824e-899d57367003"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 491, 12, 112, "Title",ExpressionUUID->"b354982d-38ee-2b40-bcd3-ea4206828e2d"],
Cell[1074, 36, 568, 9, 83, "Subtitle",ExpressionUUID->"20b75a8d-bae8-9741-a70c-3d34495bd970"],
Cell[1645, 47, 374, 8, 49, "Text",ExpressionUUID->"8eb751c6-051f-e948-bab2-d314df123d84"],
Cell[2022, 57, 216, 3, 28, "Input",ExpressionUUID->"53e9ea49-ae13-4c4f-a1e4-697dda957156"],
Cell[CellGroupData[{
Cell[2263, 64, 221, 4, 66, "Section",ExpressionUUID->"06b76343-3e4a-f946-bdf2-1908d2fc608a"],
Cell[2487, 70, 1388, 38, 123, "Input",ExpressionUUID->"b231057b-0565-8644-803b-bb296b87041b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3912, 113, 262, 5, 66, "Section",ExpressionUUID->"12a05fdb-9765-8143-b0bd-9ba8c787e759"],
Cell[CellGroupData[{
Cell[4199, 122, 848, 17, 28, "Input",ExpressionUUID->"baaf84e8-df3f-3d4a-9061-dad4b81efcd2"],
Cell[5050, 141, 851, 15, 32, "Output",ExpressionUUID->"99e1f34a-98b8-b943-8457-db82e7994034"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5938, 161, 221, 4, 53, "Subsection",ExpressionUUID->"d4fdc77d-ad27-6541-b554-0fc03b060ef7"],
Cell[CellGroupData[{
Cell[6184, 169, 819, 21, 28, "Input",ExpressionUUID->"c9e3fa04-a101-8c47-8e54-b95cdac5474b"],
Cell[7006, 192, 417095, 6824, 436, 127226, 2071, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"182ec736-0ac3-e342-b496-21af9ea45131"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[424162, 7023, 199, 3, 66, "Section",ExpressionUUID->"672e2cb0-7996-5643-a0eb-827f5a93ed74"],
Cell[CellGroupData[{
Cell[424386, 7030, 652, 17, 28, "Input",ExpressionUUID->"795221b7-c001-2840-a048-3ac460d42f8b"],
Cell[425041, 7049, 895, 18, 32, "Output",ExpressionUUID->"fa56a0b7-be53-4747-b339-0cf54ed9c89b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425973, 7072, 1475, 38, 85, "Input",ExpressionUUID->"5bc728bc-4cf9-394a-acf8-1daa184e5644"],
Cell[427451, 7112, 1304, 34, 50, "Output",ExpressionUUID->"18dd3353-e79e-8841-8b13-2c8301b15642"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[428804, 7152, 252, 4, 66, "Section",ExpressionUUID->"da6a49cf-1a4a-f649-af6f-587af444391d"],
Cell[429059, 7158, 501, 10, 71, "Text",ExpressionUUID->"3050e69b-eaba-d648-8cae-5fe351779993"],
Cell[CellGroupData[{
Cell[429585, 7172, 4427, 131, 133, "Input",ExpressionUUID->"444a3934-2342-6e4c-8676-32ec9d58a83c"],
Cell[434015, 7305, 1084, 23, 32, "Output",ExpressionUUID->"bc1e2f93-b579-6847-a0f1-d396b8ffcdaa"],
Cell[435102, 7330, 917, 18, 32, "Output",ExpressionUUID->"2e2bf5e0-7176-3641-9dec-5237b89aaa43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436056, 7353, 1265, 33, 104, "Input",ExpressionUUID->"b8897f90-2d46-494f-8fa3-a7e42be1b080"],
Cell[437324, 7388, 915, 18, 32, "Output",ExpressionUUID->"1d3fbb61-2308-1e4a-afc2-b4d001dd8195"],
Cell[438242, 7408, 903, 18, 32, "Output",ExpressionUUID->"69f624d7-18cf-ff48-9392-550e50dc3906"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439182, 7431, 666, 16, 47, "Input",ExpressionUUID->"fe33ab7e-cc7b-8d46-8943-5ddb75dc56e4"],
Cell[439851, 7449, 1259, 29, 34, "Output",ExpressionUUID->"1ef062aa-acd6-da49-9afe-8f34003579bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441147, 7483, 1149, 27, 30, "Input",ExpressionUUID->"cc682f8d-8c35-0246-a7a0-70607bde259a"],
Cell[442299, 7512, 2945, 78, 110, "Output",ExpressionUUID->"eddcccc8-3f12-f849-99f0-c4a1275d526d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445281, 7595, 206, 3, 53, "Subsection",ExpressionUUID->"4a1f8d99-6751-f840-8f52-a55147154c7d"],
Cell[CellGroupData[{
Cell[445512, 7602, 1943, 52, 52, "Input",ExpressionUUID->"ebc38827-15d2-da4c-8ac3-b243eb6ed82f"],
Cell[447458, 7656, 1841, 48, 53, "Output",ExpressionUUID->"136a4428-a41c-e745-ad54-95dd2000aee7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449360, 7711, 321, 9, 66, "Section",ExpressionUUID->"af8a91aa-d57f-8b45-93aa-5f464e427855"],
Cell[CellGroupData[{
Cell[449706, 7724, 4165, 115, 237, "Input",ExpressionUUID->"6e192480-3ec4-ae4a-b6ae-381274f6027b"],
Cell[453874, 7841, 655, 9, 32, "Output",ExpressionUUID->"fc4831b6-e5d6-1547-a6d6-c75fc02b3d57"],
Cell[454532, 7852, 1303, 29, 44, "Output",ExpressionUUID->"13f86e84-ed29-f64d-a473-b0efcafe849e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[455884, 7887, 166, 3, 66, "Section",ExpressionUUID->"91e0d645-2f33-4441-9d76-612b6d380260"],
Cell[456053, 7892, 2118, 55, 121, "Text",ExpressionUUID->"ee43cfec-4975-dd46-b003-f1c2a7580184"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458208, 7952, 581, 15, 101, "Section",ExpressionUUID->"34f2c4ef-c3ef-0742-a4a6-abf3db354404"],
Cell[CellGroupData[{
Cell[458814, 7971, 1216, 26, 47, "Input",ExpressionUUID->"b6fe085b-2262-9843-bb36-4c416b8ab3d5"],
Cell[460033, 7999, 2777, 76, 94, "Output",ExpressionUUID->"36af7af0-ac8f-074c-a46c-b99f9fd280a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462847, 8080, 236, 5, 53, "Subsection",ExpressionUUID->"fc7773b7-e5aa-5945-aff9-5eb83379dfd3"],
Cell[CellGroupData[{
Cell[463108, 8089, 850, 22, 66, "Input",ExpressionUUID->"c73ce59b-af54-7147-8512-35cfa5b44307"],
Cell[463961, 8113, 1115, 28, 44, "Output",ExpressionUUID->"e63c6c5a-3839-b345-a5c8-a30a82e6dbf2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465125, 8147, 248, 6, 79, "Subsection",ExpressionUUID->"412d8c94-202c-7248-bbe6-c55dadf73dde"],
Cell[465376, 8155, 313, 6, 71, "Text",ExpressionUUID->"851d95b2-1f13-5c42-8b69-0cc0db8b602e"],
Cell[CellGroupData[{
Cell[465714, 8165, 568, 13, 28, "Input",ExpressionUUID->"47c15e8f-36c0-d34b-8b00-76417f5428d0"],
Cell[466285, 8180, 251, 6, 44, "Output",ExpressionUUID->"68b7f8f1-e97a-eb47-a494-9860c2817ec0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[466585, 8192, 169, 3, 53, "Subsection",ExpressionUUID->"8f448007-62a9-1d47-8329-f2dc5f7515bc"],
Cell[CellGroupData[{
Cell[466779, 8199, 1464, 38, 104, "Input",ExpressionUUID->"cdd738a9-3dff-0140-9e13-5f355a54fd3a"],
Cell[468246, 8239, 1614, 47, 88, "Output",ExpressionUUID->"dbb9e816-5380-af44-a495-25c001ef7b0b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[469909, 8292, 203, 3, 53, "Subsection",ExpressionUUID->"9164f1d2-af2a-334d-a17c-d4a42b7bbfed"],
Cell[470115, 8297, 277, 6, 55, "Text",ExpressionUUID->"c891cdd3-cdd0-be45-b8e2-6265e257718a"],
Cell[CellGroupData[{
Cell[470417, 8307, 960, 23, 47, "Input",ExpressionUUID->"9a66e88c-39b4-2a49-b4bf-c11b7f843163"],
Cell[471380, 8332, 175, 2, 32, "Output",ExpressionUUID->"3efabe2d-9615-3e4a-ad7f-c2b3ad77c969"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[471616, 8341, 313, 6, 103, "Section",ExpressionUUID->"6b3e73a3-7469-324e-b3f5-a4d085dcb671"],
Cell[CellGroupData[{
Cell[471954, 8351, 1685, 41, 85, "Input",ExpressionUUID->"878450fd-2264-864d-bfa0-262c80273174"],
Cell[473642, 8394, 789, 21, 56, "Output",ExpressionUUID->"b75f3d2a-6f21-ed48-80d7-65edc4f0d9e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474468, 8420, 377, 7, 43, "Subsubsection",ExpressionUUID->"d374c2e8-85cf-2245-9c29-50ab9828394f"],
Cell[CellGroupData[{
Cell[474870, 8431, 741, 20, 47, "Input",ExpressionUUID->"4f411454-1b77-6e4b-a900-1f87a8888810"],
Cell[475614, 8453, 3784, 103, 190, "Output",ExpressionUUID->"d097fe73-20c3-5f44-ac1a-ee30ccea3c8a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[479459, 8563, 181, 3, 66, "Section",ExpressionUUID->"9066ff06-202b-1949-bfde-4ce00b8a0938"],
Cell[479643, 8568, 370, 7, 71, "Text",ExpressionUUID->"fe678794-55a0-9245-9f6a-aa4e69cbe071"],
Cell[480016, 8577, 323, 7, 49, "Text",ExpressionUUID->"c8a6d525-9712-5e40-bc95-a17196e957be"],
Cell[480342, 8586, 154, 3, 28, "Input",ExpressionUUID->"7c2460ab-5219-bd4c-998b-4f5f41c38af4"],
Cell[CellGroupData[{
Cell[480521, 8593, 917, 23, 66, "Input",ExpressionUUID->"024e16b1-c0ba-6d40-ad56-87dd925e5c59"],
Cell[481441, 8618, 4608, 127, 229, "Output",ExpressionUUID->"9a2d5759-e224-6046-bd1e-70607dfb7c7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486086, 8750, 267, 6, 68, "Subsubsection",ExpressionUUID->"82efac36-a1d8-4041-9b6d-79cb3913af79"],
Cell[CellGroupData[{
Cell[486378, 8760, 4353, 123, 327, "Input",ExpressionUUID->"4a8f1042-ad84-0d45-96f9-d2fad90bd22a"],
Cell[490734, 8885, 4058, 114, 229, "Output",ExpressionUUID->"0bdd12db-b628-5146-9af8-abc0cf7018c5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[494841, 9005, 327, 7, 79, "Subsection",ExpressionUUID->"315f6735-7016-314f-825d-bac18f8f9c84"],
Cell[CellGroupData[{
Cell[495193, 9016, 4495, 122, 298, "Input",ExpressionUUID->"5dcaa75b-77c0-384a-a3d8-7bf0e53b2002"],
Cell[499691, 9140, 3993, 111, 183, "Output",ExpressionUUID->"b637381c-f5d5-1944-949e-7627d3506895"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[503733, 9257, 171, 3, 53, "Subsection",ExpressionUUID->"ce414152-a170-ba40-ad6d-260815e6844a"],
Cell[CellGroupData[{
Cell[503929, 9264, 4057, 112, 279, "Input",ExpressionUUID->"f417457c-b8f7-ac4c-bf8b-b496fd2db344"],
Cell[507989, 9378, 2813, 79, 136, "Output",ExpressionUUID->"623a0398-067b-284b-9be5-97fb9e878958"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[510851, 9463, 209, 3, 53, "Subsection",ExpressionUUID->"12ad0bf8-edc9-f24d-b5cf-3f5b820484b5"],
Cell[511063, 9468, 325, 6, 71, "Text",ExpressionUUID->"bb9eb0b9-0205-624f-900e-a5da0fa66dbd"],
Cell[CellGroupData[{
Cell[511413, 9478, 256, 4, 43, "Subsubsection",ExpressionUUID->"4924bb41-87fe-4440-b1a5-15873621b618"],
Cell[CellGroupData[{
Cell[511694, 9486, 469, 10, 28, "Input",ExpressionUUID->"63377f4d-dab2-344b-814b-8ff029ca8b25"],
Cell[512166, 9498, 2694, 77, 136, "Output",ExpressionUUID->"4543c720-1473-f040-a8e1-6cd3102b94d6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[514909, 9581, 227, 3, 43, "Subsubsection",ExpressionUUID->"5e9078ec-2d02-fb4e-b3ab-ef73262d84b5"],
Cell[CellGroupData[{
Cell[515161, 9588, 592, 16, 28, "Input",ExpressionUUID->"cbea63fe-d664-7745-ad1c-b6c8c3f643ab"],
Cell[515756, 9606, 9414, 254, 414, "Output",ExpressionUUID->"f5f1fa6f-dd9f-c442-bd0b-c7a46f09c971"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[525219, 9866, 200, 3, 43, "Subsubsection",ExpressionUUID->"81d81dca-6ed1-6845-b185-67a9188eaaac"],
Cell[525422, 9871, 395, 11, 34, "Text",ExpressionUUID->"3cb0f740-db03-0c4f-b40c-67ddfc3c0c9e"],
Cell[CellGroupData[{
Cell[525842, 9886, 993, 25, 47, "Input",ExpressionUUID->"2a884bf4-d786-8d4b-b59f-e04656cc4fc5"],
Cell[526838, 9913, 3498, 99, 155, "Output",ExpressionUUID->"ce3416c6-f871-6c40-a625-ae570a269f94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530373, 10017, 730, 16, 47, "Input",ExpressionUUID->"a0398066-c558-a84f-8aec-238e16372233"],
Cell[531106, 10035, 3940, 114, 198, "Output",ExpressionUUID->"667a96b8-7bb9-454a-a783-0fc6ff3bfaaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[535107, 10156, 267, 4, 53, "Subsection",ExpressionUUID->"65b9f273-4be4-5e43-af14-6a72c4ca76ef"],
Cell[CellGroupData[{
Cell[535399, 10164, 699, 18, 28, "Input",ExpressionUUID->"a9e783c2-02ba-234b-b2d4-844060b2f7ed"],
Cell[536101, 10184, 18889, 524, 622, "Output",ExpressionUUID->"e776f74c-b3bb-8d47-836f-55ec64c3ac12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555027, 10713, 249, 6, 43, "Subsubsection",ExpressionUUID->"3f8667d0-4545-a941-9925-854dfe20ac41"],
Cell[CellGroupData[{
Cell[555301, 10723, 478, 10, 28, "Input",ExpressionUUID->"4f8c5d16-8334-d241-9a62-00edfa4cc341"],
Cell[555782, 10735, 149, 2, 32, "Output",ExpressionUUID->"8773e70e-378f-6143-bbe1-60517fb18040"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[555980, 10743, 191, 3, 43, "Subsubsection",ExpressionUUID->"ba539c6f-2585-3242-9e94-d89dfcfbfa28"],
Cell[CellGroupData[{
Cell[556196, 10750, 1350, 36, 85, "Input",ExpressionUUID->"63420161-bb04-0247-89a6-821f9356aa32"],
Cell[557549, 10788, 204, 3, 32, "Output",ExpressionUUID->"4709736b-d6cb-b44f-993f-63fe25db3d74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557790, 10796, 479, 13, 28, "Input",ExpressionUUID->"ab203d22-2fe1-0d4b-a9d2-3c6b437512fa"],
Cell[558272, 10811, 3819, 121, 188, "Output",ExpressionUUID->"0c7809fd-72a1-fc48-8791-5440fefb2813"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562128, 10937, 1244, 31, 66, "Input",ExpressionUUID->"b5dc9660-d5a7-a142-9ebd-d3de969fe50d"],
Cell[563375, 10970, 3030, 99, 121, "Output",ExpressionUUID->"e82c2ae6-efa9-6a41-b60e-0cb5703ab10f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566466, 11076, 278, 6, 53, "Subsection",ExpressionUUID->"ed9fae75-5fd1-b24b-a490-6ac287a92498"],
Cell[CellGroupData[{
Cell[566769, 11086, 6824, 211, 349, "Input",ExpressionUUID->"ea8f0844-f6e4-2744-a718-79b10504b436"],
Cell[573596, 11299, 6431, 205, 302, "Output",ExpressionUUID->"fc6d734d-d9eb-7245-aeb3-1c19bfc3a1c6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[580076, 11510, 176, 3, 53, "Subsection",ExpressionUUID->"3e8b0a3a-674d-9744-b82e-887f2808fdff"],
Cell[CellGroupData[{
Cell[580277, 11517, 1690, 51, 97, "Input",ExpressionUUID->"d6406d89-8e78-a34a-94d7-1da97289b8a8"],
Cell[581970, 11570, 1567, 47, 92, "Output",ExpressionUUID->"a1e93a92-a64f-3142-9762-3de139f7d670"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[583598, 11624, 237, 6, 66, "Section",ExpressionUUID->"c7f19bdb-b901-c74a-baf4-5f942706564f"],
Cell[CellGroupData[{
Cell[583860, 11634, 3941, 119, 213, "Input",ExpressionUUID->"ec3b20cb-9312-a647-b4bb-6804bd4c7456"],
Cell[587804, 11755, 4838, 135, 192, "Output",ExpressionUUID->"1cf85461-1907-174a-82ca-5cf8edb30de3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592679, 11895, 3020, 91, 169, "Input",ExpressionUUID->"9042b015-41d9-6e41-8177-d93baeba09f6"],
Cell[595702, 11988, 2432, 70, 105, "Output",ExpressionUUID->"a2c24194-aff3-8847-ae37-5800712e3bd3"]
}, Open  ]],
Cell[598149, 12061, 153, 3, 28, "Input",ExpressionUUID->"aed14104-ebdf-434c-ae32-ba2299dc3b40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598339, 12069, 192, 3, 66, "Section",ExpressionUUID->"99910962-5b68-1c4f-8770-4da678051969"],
Cell[598534, 12074, 7007, 211, 373, "Input",ExpressionUUID->"09c037e3-dabc-5d4a-9649-18929658213c"],
Cell[CellGroupData[{
Cell[605566, 12289, 206, 3, 53, "Subsection",ExpressionUUID->"60240bd6-328d-714a-ad7f-025bdd4a1b10"],
Cell[CellGroupData[{
Cell[605797, 12296, 899, 24, 28, "Input",ExpressionUUID->"01741954-786d-2d40-8e44-9c2c3057804f"],
Cell[606699, 12322, 6154, 178, 207, "Output",ExpressionUUID->"82aa3f78-1974-d146-9388-84b4a715c075"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[612902, 12506, 174, 3, 53, "Subsection",ExpressionUUID->"36a4429f-d33e-2841-83f0-8584f874444a"],
Cell[CellGroupData[{
Cell[613101, 12513, 638, 16, 28, "Input",ExpressionUUID->"3dd04e79-55a5-f240-8539-579a966ece6d"],
Cell[613742, 12531, 1246, 35, 50, "Output",ExpressionUUID->"dae01784-5338-ce4d-889e-c2e521f177f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615025, 12571, 517, 13, 30, "Input",ExpressionUUID->"aa7325e3-cd64-794d-9141-ad133cc4747f"],
Cell[615545, 12586, 1509, 47, 58, "Output",ExpressionUUID->"5c9d5ec5-9b44-8842-bac9-808d4d74cf5c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[617103, 12639, 179, 3, 53, "Subsection",ExpressionUUID->"1b9be1ff-84bf-2646-83e8-59855525a580"],
Cell[CellGroupData[{
Cell[617307, 12646, 403, 11, 28, "Input",ExpressionUUID->"3a5a4ae8-b76c-f74e-bf78-27086b4f1062"],
Cell[617713, 12659, 636, 16, 50, "Output",ExpressionUUID->"268c97d3-af8c-bb4d-a989-a040e0ac2232"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618386, 12680, 353, 8, 28, "Input",ExpressionUUID->"e885c001-c1d4-834f-bdd3-eb1f894ff95c"],
Cell[618742, 12690, 497, 14, 50, "Output",ExpressionUUID->"c1e501bf-1ac0-404f-92a6-38d7443e764a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[619300, 12711, 386, 11, 114, "Chapter",ExpressionUUID->"d3d8061c-8d6d-7149-8962-ea7e3611cc26"],
Cell[CellGroupData[{
Cell[619711, 12726, 224, 5, 66, "Section",ExpressionUUID->"c550692a-4a51-2e42-a861-b26c4732807a"],
Cell[CellGroupData[{
Cell[619960, 12735, 903, 25, 28, "Input",ExpressionUUID->"633e20b6-60fe-8243-8612-7d5ca776fd20"],
Cell[620866, 12762, 7809, 236, 336, "Output",ExpressionUUID->"1b7cc14d-a005-d54e-af6e-5a27e5b6bc3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[628712, 13003, 160, 3, 53, "Subsection",ExpressionUUID->"506991fa-b615-2c47-a077-0896510f307a"],
Cell[CellGroupData[{
Cell[628897, 13010, 690, 18, 28, "Input",ExpressionUUID->"b610206d-4698-8f4b-9532-a455536e4799"],
Cell[629590, 13030, 14972, 421, 581, "Output",ExpressionUUID->"af987a57-eb82-1144-955f-bc639f376de2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[644611, 13457, 336, 10, 53, "Subsection",ExpressionUUID->"73a579cb-e0fe-9347-8ae2-8f2fbbd1d0a8"],
Cell[CellGroupData[{
Cell[644972, 13471, 577, 15, 28, "Input",ExpressionUUID->"a3b0cee1-4436-b04b-a8f9-a073d16c3a49"],
Cell[645552, 13488, 16058, 442, 585, "Output",ExpressionUUID->"ff807da6-9390-9347-99b0-dbdddbf4912a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[661659, 13936, 367, 10, 53, "Subsection",ExpressionUUID->"498f230a-1122-3c48-80e8-60d0b7e54cec"],
Cell[CellGroupData[{
Cell[662051, 13950, 865, 24, 28, "Input",ExpressionUUID->"0fdff171-7501-2141-8f45-301270cbf801"],
Cell[662919, 13976, 18057, 533, 587, "Output",ExpressionUUID->"58087e44-a412-ba49-9a7b-149673b86910"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[681025, 14515, 452, 12, 53, "Subsection",ExpressionUUID->"27de8667-9675-b440-bd5f-dc040846a175"],
Cell[CellGroupData[{
Cell[681502, 14531, 767, 19, 28, "Input",ExpressionUUID->"9e733730-addd-ea4c-a406-fadd7fba9a70"],
Cell[682272, 14552, 1554, 39, 74, "Output",ExpressionUUID->"a2a55f5b-352f-3643-9a73-b33cf8fdfcbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[683887, 14598, 380, 11, 67, "Section",ExpressionUUID->"46534c43-2a99-ff4e-96b3-f9e3cdc6b09a"],
Cell[CellGroupData[{
Cell[684292, 14613, 885, 23, 47, "Input",ExpressionUUID->"99a16506-7abe-0747-aed1-41c105df2d29"],
Cell[685180, 14638, 1860, 48, 97, "Output",ExpressionUUID->"7eac0a6b-760d-5449-9c8c-85337b471277"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[687089, 14692, 373, 11, 67, "Section",ExpressionUUID->"5106ec27-050f-1d42-9347-112df8349b3e"],
Cell[CellGroupData[{
Cell[687487, 14707, 4439, 115, 189, "Input",ExpressionUUID->"7a6eae09-75fc-a342-92b3-1a35329c04f3"],
Cell[691929, 14824, 4039, 75, 308, "Output",ExpressionUUID->"1479c7f5-9174-4c4f-814e-46282e33597e"]
}, Open  ]],
Cell[695983, 14902, 176, 3, 28, "Input",ExpressionUUID->"778e5984-0d0c-824f-9ac7-f1ea5d263f28"],
Cell[696162, 14907, 130, 3, 28, "Input",ExpressionUUID->"0bf7c1f4-e466-c744-b543-b77ab8c17e2c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[696353, 14917, 257, 3, 96, "Title",ExpressionUUID->"c5ca7005-f706-d24f-a639-6c632681e1b8"],
Cell[696613, 14922, 362, 6, 52, "Subtitle",ExpressionUUID->"57ffbf6b-e975-f747-b2ea-634f9a748bec"],
Cell[696978, 14930, 147, 3, 47, "Input",ExpressionUUID->"7a874adc-5856-b144-9f6d-3a05db13eea7"],
Cell[697128, 14935, 147, 3, 47, "Input",ExpressionUUID->"bd1cfe14-e9a9-bd48-83a7-8e9cc0ac3d09"],
Cell[697278, 14940, 149, 3, 47, "Input",ExpressionUUID->"6bd208ee-9552-c445-ab1a-745eb07b0a59"],
Cell[697430, 14945, 208, 4, 66, "Input",ExpressionUUID->"5cfac28d-eb1f-3343-8f9a-0603fed93df7"],
Cell[697641, 14951, 277, 5, 28, "Input",ExpressionUUID->"4221223f-a9e2-ed46-bdc5-4cc03f34d258"]
}, Open  ]]
}
]
*)

